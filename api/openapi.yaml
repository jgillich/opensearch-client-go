openapi: 3.0.2
info:
  title: OpenSearch
  version: 2021-11-23
servers:
- url: /
security:
- smithy.api.httpBasicAuth: []
paths:
  /:
    get:
      description: Returns basic information about the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: Info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponseContent'
          description: Info 200 response
      x-operation-group: info
      x-version-added: "1.0"
    head:
      description: Returns whether the cluster is running.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: Ping
      responses:
        "200":
          description: Ping 200 response
      x-operation-group: ping
      x-version-added: "1.0"
  /_alias:
    get:
      description: Returns an alias.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-alias/
      operationId: IndicesGetAlias
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetAlias 200 response
      x-operation-group: indices.get_alias
      x-version-added: "1.0"
  /_alias/{name}:
    get:
      description: Returns an alias.
      operationId: IndicesGetAlias_WithName
      parameters:
      - description: Comma-separated list of alias names.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of alias names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetAlias_WithName 200 response
      x-operation-group: indices.get_alias
      x-version-added: "1.0"
    head:
      description: Returns information about whether a particular alias exists.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesExistsAlias
      parameters:
      - description: Comma-separated list of alias names.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of alias names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesExistsAlias 200 response
      x-operation-group: indices.exists_alias
      x-version-added: "1.0"
  /_aliases:
    post:
      description: Updates index aliases.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/alias/
      operationId: IndicesUpdateAliases
      parameters:
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesUpdateAliases_BodyParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicesUpdateAliasesResponseContent'
          description: IndicesUpdateAliases 200 response
      x-operation-group: indices.update_aliases
      x-version-added: "1.0"
  /_analyze:
    get:
      description: Performs the analysis process on a text and return the tokens breakdown
        of the text.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/analyze-apis/perform-text-analysis/
      operationId: IndicesAnalyze_Get
      parameters:
      - description: The name of the index to scope the operation.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: The name of the index to scope the operation.
          type: string
        style: form
      responses:
        "200":
          description: IndicesAnalyze_Get 200 response
      x-operation-group: indices.analyze
      x-version-added: "1.0"
    post:
      description: Performs the analysis process on a text and return the tokens breakdown
        of the text.
      operationId: IndicesAnalyze_Post
      parameters:
      - description: The name of the index to scope the operation.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: The name of the index to scope the operation.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesAnalyze_BodyParams'
      responses:
        "200":
          description: IndicesAnalyze_Post 200 response
      x-operation-group: indices.analyze
      x-version-added: "1.0"
  /_bulk:
    post:
      description: Allows to perform multiple index/update/delete operations in a
        single request.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/bulk/
      operationId: Bulk_Post
      parameters:
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Default document type for items which don't provide one.
        explode: true
        in: query
        name: type
        required: false
        schema:
          description: Default document type for items which don't provide one.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or default\
          \ list of fields to return, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or default\
            \ list of fields to return, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: "Default list of fields to exclude from the returned _source\
          \ field, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: "Default list of fields to exclude from the returned _source\
            \ field, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: "Default list of fields to extract and return from the _source\
          \ field, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: "Default list of fields to extract and return from the _source\
            \ field, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      - description: Sets require_alias for all incoming documents.
        explode: true
        in: query
        name: require_alias
        required: false
        schema:
          default: false
          description: Sets require_alias for all incoming documents.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bulk_BodyParams'
        required: true
      responses:
        "200":
          description: Bulk_Post 200 response
      x-operation-group: bulk
      x-version-added: "1.0"
    put:
      description: Allows to perform multiple index/update/delete operations in a
        single request.
      operationId: Bulk_Put
      parameters:
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Default document type for items which don't provide one.
        explode: true
        in: query
        name: type
        required: false
        schema:
          description: Default document type for items which don't provide one.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or default\
          \ list of fields to return, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or default\
            \ list of fields to return, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: "Default list of fields to exclude from the returned _source\
          \ field, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: "Default list of fields to exclude from the returned _source\
            \ field, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: "Default list of fields to extract and return from the _source\
          \ field, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: "Default list of fields to extract and return from the _source\
            \ field, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      - description: Sets require_alias for all incoming documents.
        explode: true
        in: query
        name: require_alias
        required: false
        schema:
          default: false
          description: Sets require_alias for all incoming documents.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bulk_BodyParams'
        required: true
      responses:
        "200":
          description: Bulk_Put 200 response
      x-operation-group: bulk
      x-version-added: "1.0"
  /_cache/clear:
    post:
      description: Clears all or specific caches for one or more indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/clear-index-cache/
      operationId: IndicesClearCache
      parameters:
      - description: Clear field data.
        explode: true
        in: query
        name: fielddata
        required: false
        schema:
          description: Clear field data.
          type: boolean
        style: form
      - description: "Comma-separated list of fields to clear when using the `fielddata`\
          \ parameter (default: all)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: "Comma-separated list of fields to clear when using the `fielddata`\
            \ parameter (default: all)."
          items:
            type: string
          type: array
        style: form
      - description: Clear query caches.
        explode: true
        in: query
        name: query
        required: false
        schema:
          description: Clear query caches.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          items:
            type: string
          type: array
        style: form
      - description: Clear request cache.
        explode: true
        in: query
        name: request
        required: false
        schema:
          description: Clear request cache.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesClearCache 200 response
      x-operation-group: indices.clear_cache
      x-version-added: "1.0"
  /_cat:
    get:
      description: Returns help for the Cat APIs.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/index/
      operationId: CatHelp
      parameters:
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          description: CatHelp 200 response
      x-operation-group: cat.help
      x-version-added: "1.0"
  /_cat/aliases:
    get:
      description: Shows information about currently configured aliases to indices
        including filter and routing infos.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/
      operationId: CatAliases
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: CatAliases 200 response
      x-operation-group: cat.aliases
      x-version-added: "1.0"
  /_cat/aliases/{name}:
    get:
      description: Shows information about currently configured aliases to indices
        including filter and routing infos.
      operationId: CatAliases_WithName
      parameters:
      - description: Comma-separated list of alias names.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of alias names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: CatAliases_WithName 200 response
      x-operation-group: cat.aliases
      x-version-added: "1.0"
  /_cat/allocation:
    get:
      description: Provides a snapshot of how many shards are allocated to each data
        node and how much disk space they are using.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/
      operationId: CatAllocation
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatAllocation 200 response
      x-operation-group: cat.allocation
      x-version-added: "1.0"
  /_cat/allocation/{node_id}:
    get:
      description: Provides a snapshot of how many shards are allocated to each data
        node and how much disk space they are using.
      operationId: CatAllocation_WithNodeId
      parameters:
      - description: Comma-separated list of node IDs or names to limit the returned
          information.
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: Comma-separated list of node IDs or names to limit the returned
            information.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatAllocation_WithNodeId 200 response
      x-operation-group: cat.allocation
      x-version-added: "1.0"
  /_cat/cluster_manager:
    get:
      description: Returns information about the cluster-manager node.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/
      operationId: CatClusterManager
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatClusterManager 200 response
      x-operation-group: cat.cluster_manager
      x-version-added: "1.0"
  /_cat/count:
    get:
      description: "Provides quick access to the document count of the entire cluster,\
        \ or individual indices."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-count/
      operationId: CatCount
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatCount 200 response
      x-operation-group: cat.count
      x-version-added: "1.0"
  /_cat/count/{index}:
    get:
      description: "Provides quick access to the document count of the entire cluster,\
        \ or individual indices."
      operationId: CatCount_WithIndex
      parameters:
      - description: Comma-separated list of indices to limit the returned information.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to limit the returned information.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatCount_WithIndex 200 response
      x-operation-group: cat.count
      x-version-added: "1.0"
  /_cat/fielddata:
    get:
      description: Shows how much heap memory is currently being used by fielddata
        on every data node in the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/
      operationId: CatFielddata
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      - description: Comma-separated list of fields to return in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return in the output.
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          description: CatFielddata 200 response
      x-operation-group: cat.fielddata
      x-version-added: "1.0"
  /_cat/fielddata/{fields}:
    get:
      description: Shows how much heap memory is currently being used by fielddata
        on every data node in the cluster.
      operationId: CatFielddata_WithFields
      parameters:
      - description: Comma-separated list of fields to return the fielddata size.
        explode: false
        in: path
        name: fields
        required: true
        schema:
          description: Comma-separated list of fields to return the fielddata size.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      - description: Comma-separated list of fields to return in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return in the output.
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          description: CatFielddata_WithFields 200 response
      x-operation-group: cat.fielddata
      x-version-added: "1.0"
  /_cat/health:
    get:
      description: Returns a concise representation of the cluster health.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-health/
      operationId: CatHealth
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Set to false to disable timestamping.
        explode: true
        in: query
        name: ts
        required: false
        schema:
          default: true
          description: Set to false to disable timestamping.
          type: boolean
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatHealth 200 response
      x-operation-group: cat.health
      x-version-added: "1.0"
  /_cat/indices:
    get:
      description: "Returns information about indices: number of primaries and replicas,\
        \ document counts, disk size, ..."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-indices/
      operationId: CatIndices
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: "Health status ('green', 'yellow', or 'red') to filter only indices\
          \ matching the specified health status."
        explode: true
        in: query
        name: health
        required: false
        schema:
          $ref: '#/components/schemas/Health'
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Set to true to return stats only for primary shards.
        explode: true
        in: query
        name: pri
        required: false
        schema:
          default: false
          description: Set to true to return stats only for primary shards.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      - description: If set to true segment stats will include stats for segments
          that are not currently loaded into memory.
        explode: true
        in: query
        name: include_unloaded_segments
        required: false
        schema:
          default: false
          description: If set to true segment stats will include stats for segments
            that are not currently loaded into memory.
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: CatIndices 200 response
      x-operation-group: cat.indices
      x-version-added: "1.0"
  /_cat/indices/{index}:
    get:
      description: "Returns information about indices: number of primaries and replicas,\
        \ document counts, disk size, ..."
      operationId: CatIndices_WithIndex
      parameters:
      - description: Comma-separated list of indices to limit the returned information.
        examples:
          CatIndices_WithIndex_example1:
            description: ""
            summary: Examples for Cat indices with Index Operation.
            value: books
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to limit the returned information.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: "Health status ('green', 'yellow', or 'red') to filter only indices\
          \ matching the specified health status."
        explode: true
        in: query
        name: health
        required: false
        schema:
          $ref: '#/components/schemas/Health'
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Set to true to return stats only for primary shards.
        explode: true
        in: query
        name: pri
        required: false
        schema:
          default: false
          description: Set to true to return stats only for primary shards.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      - description: If set to true segment stats will include stats for segments
          that are not currently loaded into memory.
        explode: true
        in: query
        name: include_unloaded_segments
        required: false
        schema:
          default: false
          description: If set to true segment stats will include stats for segments
            that are not currently loaded into memory.
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: CatIndices_WithIndex 200 response
      x-operation-group: cat.indices
      x-version-added: "1.0"
  /_cat/master:
    get:
      deprecated: true
      description: Returns information about the cluster-manager node.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/
      operationId: CatMaster
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatMaster 200 response
      x-deprecation-message: "To promote inclusive language, please use '/_cat/cluster_manager'\
        \ instead."
      x-operation-group: cat.master
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
  /_cat/nodeattrs:
    get:
      description: Returns information about custom node attributes.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-nodeattrs/
      operationId: CatNodeattrs
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatNodeattrs 200 response
      x-operation-group: cat.nodeattrs
      x-version-added: "1.0"
  /_cat/nodes:
    get:
      description: Returns basic statistics about performance of cluster nodes.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-nodes/
      operationId: CatNodes
      parameters:
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: Return the full node ID instead of the shortened version.
        explode: true
        in: query
        name: full_id
        required: false
        schema:
          default: false
          description: Return the full node ID instead of the shortened version.
          type: boolean
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          deprecated: true
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
          x-version-deprecated: "1.0"
          x-deprecation-message: This parameter does not cause this API to act locally.
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatNodes 200 response
      x-operation-group: cat.nodes
      x-version-added: "1.0"
  /_cat/pending_tasks:
    get:
      description: Returns a concise representation of the cluster pending tasks.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-pending-tasks/
      operationId: CatPendingTasks
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatPendingTasks 200 response
      x-operation-group: cat.pending_tasks
      x-version-added: "1.0"
  /_cat/pit_segments:
    get:
      description: List segments for one or several PITs.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/
      operationId: CatPitSegments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatPitSegments_BodyParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatPitSegmentsResponseContent'
          description: CatPitSegments 200 response
      x-operation-group: cat.pit_segments
      x-version-added: "2.4"
  /_cat/pit_segments/_all:
    get:
      description: Lists all active point-in-time segments.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/
      operationId: CatAllPitSegments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatAllPitSegmentsResponseContent'
          description: CatAllPitSegments 200 response
      x-operation-group: cat.all_pit_segments
      x-version-added: "2.4"
  /_cat/plugins:
    get:
      description: Returns information about installed plugins across nodes node.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-plugins/
      operationId: CatPlugins
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatPlugins 200 response
      x-operation-group: cat.plugins
      x-version-added: "1.0"
  /_cat/recovery:
    get:
      description: "Returns information about index shard recoveries, both on-going\
        \ completed."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-plugins/
      operationId: CatRecovery
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "If `true`, the response only includes ongoing shard recoveries."
        explode: true
        in: query
        name: active_only
        required: false
        schema:
          default: false
          description: "If `true`, the response only includes ongoing shard recoveries."
          type: boolean
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "If `true`, the response includes detailed information about\
          \ shard recoveries."
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          description: "If `true`, the response includes detailed information about\
            \ shard recoveries."
          type: boolean
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list or wildcard expression of index names to
          limit the returned information.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: Comma-separated list or wildcard expression of index names
            to limit the returned information.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatRecovery 200 response
      x-operation-group: cat.recovery
      x-version-added: "1.0"
  /_cat/recovery/{index}:
    get:
      description: "Returns information about index shard recoveries, both on-going\
        \ completed."
      operationId: CatRecovery_WithIndex
      parameters:
      - description: Comma-separated list or wildcard expression of index names to
          limit the returned information.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list or wildcard expression of index names
            to limit the returned information.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "If `true`, the response only includes ongoing shard recoveries."
        explode: true
        in: query
        name: active_only
        required: false
        schema:
          default: false
          description: "If `true`, the response only includes ongoing shard recoveries."
          type: boolean
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "If `true`, the response includes detailed information about\
          \ shard recoveries."
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          description: "If `true`, the response includes detailed information about\
            \ shard recoveries."
          type: boolean
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list or wildcard expression of index names to
          limit the returned information.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: Comma-separated list or wildcard expression of index names
            to limit the returned information.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatRecovery_WithIndex 200 response
      x-operation-group: cat.recovery
      x-version-added: "1.0"
  /_cat/repositories:
    get:
      description: Returns information about snapshot repositories registered in the
        cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-repositories/
      operationId: CatRepositories
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatRepositories 200 response
      x-operation-group: cat.repositories
      x-version-added: "1.0"
  /_cat/segment_replication:
    get:
      description: Returns information about both on-going and latest completed Segment
        Replication events.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/
      operationId: CatSegmentReplication
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "If `true`, the response only includes ongoing segment replication\
          \ events."
        explode: true
        in: query
        name: active_only
        required: false
        schema:
          default: false
          description: "If `true`, the response only includes ongoing segment replication\
            \ events."
          type: boolean
        style: form
      - description: "If `true`, the response only includes latest completed segment\
          \ replication events."
        explode: true
        in: query
        name: completed_only
        required: false
        schema:
          default: false
          description: "If `true`, the response only includes latest completed segment\
            \ replication events."
          type: boolean
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "If `true`, the response includes detailed information about\
          \ segment replications."
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          description: "If `true`, the response includes detailed information about\
            \ segment replications."
          type: boolean
        style: form
      - description: Comma-separated list of shards to display.
        explode: true
        in: query
        name: shards
        required: false
        schema:
          description: Comma-separated list of shards to display.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list or wildcard expression of index names to
          limit the returned information.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: Comma-separated list or wildcard expression of index names
            to limit the returned information.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatSegmentReplication 200 response
      x-operation-group: cat.segment_replication
      x-version-added: "1.0"
  /_cat/segment_replication/{index}:
    get:
      description: Returns information about both on-going and latest completed Segment
        Replication events.
      operationId: CatSegmentReplication_WithIndex
      parameters:
      - description: Comma-separated list or wildcard expression of index names to
          limit the returned information.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list or wildcard expression of index names
            to limit the returned information.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "If `true`, the response only includes ongoing segment replication\
          \ events."
        explode: true
        in: query
        name: active_only
        required: false
        schema:
          default: false
          description: "If `true`, the response only includes ongoing segment replication\
            \ events."
          type: boolean
        style: form
      - description: "If `true`, the response only includes latest completed segment\
          \ replication events."
        explode: true
        in: query
        name: completed_only
        required: false
        schema:
          default: false
          description: "If `true`, the response only includes latest completed segment\
            \ replication events."
          type: boolean
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "If `true`, the response includes detailed information about\
          \ segment replications."
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          description: "If `true`, the response includes detailed information about\
            \ segment replications."
          type: boolean
        style: form
      - description: Comma-separated list of shards to display.
        explode: true
        in: query
        name: shards
        required: false
        schema:
          description: Comma-separated list of shards to display.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list or wildcard expression of index names to
          limit the returned information.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: Comma-separated list or wildcard expression of index names
            to limit the returned information.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatSegmentReplication_WithIndex 200 response
      x-operation-group: cat.segment_replication
      x-version-added: "1.0"
  /_cat/segments:
    get:
      description: Provides low-level information about the segments in the shards
        of an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-segments/
      operationId: CatSegments
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatSegments 200 response
      x-operation-group: cat.segments
      x-version-added: "1.0"
  /_cat/segments/{index}:
    get:
      description: Provides low-level information about the segments in the shards
        of an index.
      operationId: CatSegments_WithIndex
      parameters:
      - description: Comma-separated list of indices to limit the returned information.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to limit the returned information.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatSegments_WithIndex 200 response
      x-operation-group: cat.segments
      x-version-added: "1.0"
  /_cat/shards:
    get:
      description: Provides a detailed view of shard allocation on nodes.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-shards/
      operationId: CatShards
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatShards 200 response
      x-operation-group: cat.shards
      x-version-added: "1.0"
  /_cat/shards/{index}:
    get:
      description: Provides a detailed view of shard allocation on nodes.
      operationId: CatShards_WithIndex
      parameters:
      - description: Comma-separated list of indices to limit the returned information.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to limit the returned information.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The unit in which to display byte values.
        explode: true
        in: query
        name: bytes
        required: false
        schema:
          $ref: '#/components/schemas/Bytes'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatShards_WithIndex 200 response
      x-operation-group: cat.shards
      x-version-added: "1.0"
  /_cat/snapshots:
    get:
      description: Returns all snapshots in a specific repository.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-snapshots/
      operationId: CatSnapshots
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatSnapshots 200 response
      x-operation-group: cat.snapshots
      x-version-added: "1.0"
  /_cat/snapshots/{repository}:
    get:
      description: Returns all snapshots in a specific repository.
      operationId: CatSnapshots_WithRepository
      parameters:
      - description: Comma-separated list of repository names.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Comma-separated list of repository names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatSnapshots_WithRepository 200 response
      x-operation-group: cat.snapshots
      x-version-added: "1.0"
  /_cat/tasks:
    get:
      description: Returns information about the tasks currently executing on one
        or more nodes in the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-tasks/
      operationId: CatTasks
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: true
        in: query
        name: nodes
        required: false
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of actions that should be returned. Leave
          empty to return all.
        explode: true
        in: query
        name: actions
        required: false
        schema:
          description: Comma-separated list of actions that should be returned. Leave
            empty to return all.
          items:
            type: string
          type: array
        style: form
      - description: Return detailed task information.
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          description: Return detailed task information.
          type: boolean
        style: form
      - description: Return tasks with specified parent task id (node_id:task_number).
          Set to -1 to return all.
        explode: true
        in: query
        name: parent_task_id
        required: false
        schema:
          description: Return tasks with specified parent task id (node_id:task_number).
            Set to -1 to return all.
          type: string
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: The unit in which to display time values.
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/Time'
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatTasks 200 response
      x-operation-group: cat.tasks
      x-version-added: "1.0"
  /_cat/templates:
    get:
      description: Returns information about existing templates.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-templates/
      operationId: CatTemplates
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatTemplates 200 response
      x-operation-group: cat.templates
      x-version-added: "1.0"
  /_cat/templates/{name}:
    get:
      description: Returns information about existing templates.
      operationId: CatTemplates_WithName
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatTemplates_WithName 200 response
      x-operation-group: cat.templates
      x-version-added: "1.0"
  /_cat/thread_pool:
    get:
      description: |-
        Returns cluster-wide thread pool statistics per node.
        By default the active, queue and rejected statistics are returned for all thread pools.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cat/cat-thread-pool/
      operationId: CatThreadPool
      parameters:
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The multiplier in which to display values.
        explode: true
        in: query
        name: size
        required: false
        schema:
          description: The multiplier in which to display values.
          format: int32
          type: integer
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatThreadPool 200 response
      x-operation-group: cat.thread_pool
      x-version-added: "1.0"
  /_cat/thread_pool/{thread_pool_patterns}:
    get:
      description: |-
        Returns cluster-wide thread pool statistics per node.
        By default the active, queue and rejected statistics are returned for all thread pools.
      operationId: CatThreadPool_WithThreadPoolPatterns
      parameters:
      - description: Comma-separated list of regular-expressions to filter the thread
          pools in the output.
        explode: false
        in: path
        name: thread_pool_patterns
        required: true
        schema:
          description: Comma-separated list of regular-expressions to filter the thread
            pools in the output.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "A short version of the Accept header, e.g. json, yaml."
        explode: true
        in: query
        name: format
        required: false
        schema:
          description: "A short version of the Accept header, e.g. json, yaml."
          type: string
        style: form
      - description: The multiplier in which to display values.
        explode: true
        in: query
        name: size
        required: false
        schema:
          description: The multiplier in which to display values.
          format: int32
          type: integer
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Comma-separated list of column names to display.
        explode: true
        in: query
        name: h
        required: false
        schema:
          description: Comma-separated list of column names to display.
          items:
            type: string
          type: array
        style: form
      - description: Return help information.
        explode: true
        in: query
        name: help
        required: false
        schema:
          default: false
          description: Return help information.
          type: boolean
        style: form
      - description: Comma-separated list of column names or column aliases to sort
          by.
        explode: true
        in: query
        name: s
        required: false
        schema:
          description: Comma-separated list of column names or column aliases to sort
            by.
          items:
            type: string
          type: array
        style: form
      - description: Verbose mode. Display column headers.
        explode: true
        in: query
        name: v
        required: false
        schema:
          default: false
          description: Verbose mode. Display column headers.
          type: boolean
        style: form
      responses:
        "200":
          description: CatThreadPool_WithThreadPoolPatterns 200 response
      x-operation-group: cat.thread_pool
      x-version-added: "1.0"
  /_cluster/allocation/explain:
    get:
      description: Provides explanations for shard allocations in the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-allocation/
      operationId: ClusterAllocationExplain_Get
      parameters:
      - description: Return 'YES' decisions in explanation.
        explode: true
        in: query
        name: include_yes_decisions
        required: false
        schema:
          default: false
          description: Return 'YES' decisions in explanation.
          type: boolean
        style: form
      - description: Return information about disk usage and shard sizes.
        explode: true
        in: query
        name: include_disk_info
        required: false
        schema:
          default: false
          description: Return information about disk usage and shard sizes.
          type: boolean
        style: form
      responses:
        "200":
          description: ClusterAllocationExplain_Get 200 response
      x-operation-group: cluster.allocation_explain
      x-version-added: "1.0"
    post:
      description: Provides explanations for shard allocations in the cluster.
      operationId: ClusterAllocationExplain_Post
      parameters:
      - description: Return 'YES' decisions in explanation.
        explode: true
        in: query
        name: include_yes_decisions
        required: false
        schema:
          default: false
          description: Return 'YES' decisions in explanation.
          type: boolean
        style: form
      - description: Return information about disk usage and shard sizes.
        explode: true
        in: query
        name: include_disk_info
        required: false
        schema:
          default: false
          description: Return information about disk usage and shard sizes.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterAllocationExplain_BodyParams'
      responses:
        "200":
          description: ClusterAllocationExplain_Post 200 response
      x-operation-group: cluster.allocation_explain
      x-version-added: "1.0"
  /_cluster/decommission/awareness/:
    delete:
      description: Delete any existing decommission.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-decommission/#example-decommissioning-and-recommissioning-a-zone
      operationId: ClusterDeleteDecommissionAwareness
      responses:
        "200":
          description: ClusterDeleteDecommissionAwareness 200 response
      x-operation-group: cluster.delete_decommission_awareness
      x-version-added: "1.0"
  /_cluster/decommission/awareness/{awareness_attribute_name}/_status:
    get:
      description: Get details and status of decommissioned attribute.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-decommission/#example-getting-zone-decommission-status
      operationId: ClusterGetDecommissionAwareness
      parameters:
      - description: Awareness attribute name.
        explode: false
        in: path
        name: awareness_attribute_name
        required: true
        schema:
          description: Awareness attribute name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      responses:
        "200":
          description: ClusterGetDecommissionAwareness 200 response
      x-operation-group: cluster.get_decommission_awareness
      x-version-added: "1.0"
  /_cluster/decommission/awareness/{awareness_attribute_name}/{awareness_attribute_value}:
    put:
      description: Decommissions an awareness attribute.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-decommission/#example-decommissioning-and-recommissioning-a-zone
      operationId: ClusterPutDecommissionAwareness
      parameters:
      - description: Awareness attribute name.
        explode: false
        in: path
        name: awareness_attribute_name
        required: true
        schema:
          description: Awareness attribute name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Awareness attribute value.
        explode: false
        in: path
        name: awareness_attribute_value
        required: true
        schema:
          description: Awareness attribute value.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      responses:
        "200":
          description: ClusterPutDecommissionAwareness 200 response
      x-operation-group: cluster.put_decommission_awareness
      x-version-added: "1.0"
  /_cluster/health:
    get:
      description: Returns basic information about the health of the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-health/
      operationId: ClusterHealth
      parameters:
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify the level of detail for returned information.
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/ClusterHealthLevel'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Wait until the specified number of shards is active.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Wait until the specified number of shards is active.
          type: string
        style: form
      - description: Wait until the specified number of nodes is available.
        explode: true
        in: query
        name: wait_for_nodes
        required: false
        schema:
          description: Wait until the specified number of nodes is available.
          type: string
        style: form
      - description: Wait until all currently queued events with the given priority
          are processed.
        explode: true
        in: query
        name: wait_for_events
        required: false
        schema:
          $ref: '#/components/schemas/WaitForEvents'
        style: form
      - description: Whether to wait until there are no relocating shards in the cluster.
        explode: true
        in: query
        name: wait_for_no_relocating_shards
        required: false
        schema:
          description: Whether to wait until there are no relocating shards in the
            cluster.
          type: boolean
        style: form
      - description: Whether to wait until there are no initializing shards in the
          cluster.
        explode: true
        in: query
        name: wait_for_no_initializing_shards
        required: false
        schema:
          description: Whether to wait until there are no initializing shards in the
            cluster.
          type: boolean
        style: form
      - description: Wait until cluster is in a specific state.
        explode: true
        in: query
        name: wait_for_status
        required: false
        schema:
          $ref: '#/components/schemas/WaitForStatus'
        style: form
      - description: The awareness attribute for which the health is required.
        explode: true
        in: query
        name: awareness_attribute
        required: false
        schema:
          description: The awareness attribute for which the health is required.
          type: string
        style: form
      - description: Checks whether local node is commissioned or not. If set to true
          on a local call it will throw exception if node is decommissioned.
        explode: true
        in: query
        name: ensure_node_commissioned
        required: false
        schema:
          default: false
          description: Checks whether local node is commissioned or not. If set to
            true on a local call it will throw exception if node is decommissioned.
          type: boolean
        style: form
      responses:
        "200":
          description: ClusterHealth 200 response
      x-operation-group: cluster.health
      x-version-added: "1.0"
  /_cluster/health/{index}:
    get:
      description: Returns basic information about the health of the cluster.
      operationId: ClusterHealth_WithIndex
      parameters:
      - description: Limit the information returned to specific indicies.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Limit the information returned to specific indicies.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify the level of detail for returned information.
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/ClusterHealthLevel'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Wait until the specified number of shards is active.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Wait until the specified number of shards is active.
          type: string
        style: form
      - description: Wait until the specified number of nodes is available.
        explode: true
        in: query
        name: wait_for_nodes
        required: false
        schema:
          description: Wait until the specified number of nodes is available.
          type: string
        style: form
      - description: Wait until all currently queued events with the given priority
          are processed.
        explode: true
        in: query
        name: wait_for_events
        required: false
        schema:
          $ref: '#/components/schemas/WaitForEvents'
        style: form
      - description: Whether to wait until there are no relocating shards in the cluster.
        explode: true
        in: query
        name: wait_for_no_relocating_shards
        required: false
        schema:
          description: Whether to wait until there are no relocating shards in the
            cluster.
          type: boolean
        style: form
      - description: Whether to wait until there are no initializing shards in the
          cluster.
        explode: true
        in: query
        name: wait_for_no_initializing_shards
        required: false
        schema:
          description: Whether to wait until there are no initializing shards in the
            cluster.
          type: boolean
        style: form
      - description: Wait until cluster is in a specific state.
        explode: true
        in: query
        name: wait_for_status
        required: false
        schema:
          $ref: '#/components/schemas/WaitForStatus'
        style: form
      - description: The awareness attribute for which the health is required.
        explode: true
        in: query
        name: awareness_attribute
        required: false
        schema:
          description: The awareness attribute for which the health is required.
          type: string
        style: form
      - description: Checks whether local node is commissioned or not. If set to true
          on a local call it will throw exception if node is decommissioned.
        explode: true
        in: query
        name: ensure_node_commissioned
        required: false
        schema:
          default: false
          description: Checks whether local node is commissioned or not. If set to
            true on a local call it will throw exception if node is decommissioned.
          type: boolean
        style: form
      responses:
        "200":
          description: ClusterHealth_WithIndex 200 response
      x-operation-group: cluster.health
      x-version-added: "1.0"
  /_cluster/nodes/hot_threads:
    get:
      deprecated: true
      description: Returns information about hot threads on each node in the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/nodes-apis/nodes-hot-threads/
      operationId: NodesHotThreads_DeprecatedDash
      parameters:
      - description: The interval for the second sampling of threads.
        explode: true
        in: query
        name: interval
        required: false
        schema:
          description: The interval for the second sampling of threads.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Number of samples of thread stacktrace.
        explode: true
        in: query
        name: snapshots
        required: false
        schema:
          default: 10
          description: Number of samples of thread stacktrace.
          format: int32
          type: integer
        style: form
      - description: Specify the number of threads to provide information for.
        explode: true
        in: query
        name: threads
        required: false
        schema:
          default: 3
          description: Specify the number of threads to provide information for.
          format: int32
          type: integer
        style: form
      - description: "Don't show threads that are in known-idle places, such as waiting\
          \ on a socket select or pulling from an empty task queue."
        explode: true
        in: query
        name: ignore_idle_threads
        required: false
        schema:
          default: true
          description: "Don't show threads that are in known-idle places, such as\
            \ waiting on a socket select or pulling from an empty task queue."
          type: boolean
        style: form
      - description: The type to sample.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SampleType'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesHotThreads_DeprecatedDash 200 response
      x-deprecation-message: The hot accepts /_cluster/nodes as prefix for backwards
        compatibility reasons
      x-ignorable: true
      x-operation-group: nodes.hot_threads
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
  /_cluster/nodes/hotthreads:
    get:
      deprecated: true
      description: Returns information about hot threads on each node in the cluster.
      operationId: NodesHotThreads_DeprecatedCluster
      parameters:
      - description: The interval for the second sampling of threads.
        explode: true
        in: query
        name: interval
        required: false
        schema:
          description: The interval for the second sampling of threads.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Number of samples of thread stacktrace.
        explode: true
        in: query
        name: snapshots
        required: false
        schema:
          default: 10
          description: Number of samples of thread stacktrace.
          format: int32
          type: integer
        style: form
      - description: Specify the number of threads to provide information for.
        explode: true
        in: query
        name: threads
        required: false
        schema:
          default: 3
          description: Specify the number of threads to provide information for.
          format: int32
          type: integer
        style: form
      - description: "Don't show threads that are in known-idle places, such as waiting\
          \ on a socket select or pulling from an empty task queue."
        explode: true
        in: query
        name: ignore_idle_threads
        required: false
        schema:
          default: true
          description: "Don't show threads that are in known-idle places, such as\
            \ waiting on a socket select or pulling from an empty task queue."
          type: boolean
        style: form
      - description: The type to sample.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SampleType'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesHotThreads_DeprecatedCluster 200 response
      x-deprecation-message: The hot threads API accepts `hotthreads` but only `hot_threads`
        is documented
      x-ignorable: true
      x-operation-group: nodes.hot_threads
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
  /_cluster/nodes/{node_id}/hot_threads:
    get:
      deprecated: true
      description: Returns information about hot threads on each node in the cluster.
      operationId: NodesHotThreads_WithNodeId_DeprecatedDash
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The interval for the second sampling of threads.
        explode: true
        in: query
        name: interval
        required: false
        schema:
          description: The interval for the second sampling of threads.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Number of samples of thread stacktrace.
        explode: true
        in: query
        name: snapshots
        required: false
        schema:
          default: 10
          description: Number of samples of thread stacktrace.
          format: int32
          type: integer
        style: form
      - description: Specify the number of threads to provide information for.
        explode: true
        in: query
        name: threads
        required: false
        schema:
          default: 3
          description: Specify the number of threads to provide information for.
          format: int32
          type: integer
        style: form
      - description: "Don't show threads that are in known-idle places, such as waiting\
          \ on a socket select or pulling from an empty task queue."
        explode: true
        in: query
        name: ignore_idle_threads
        required: false
        schema:
          default: true
          description: "Don't show threads that are in known-idle places, such as\
            \ waiting on a socket select or pulling from an empty task queue."
          type: boolean
        style: form
      - description: The type to sample.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SampleType'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesHotThreads_WithNodeId_DeprecatedDash 200 response
      x-deprecation-message: The hot accepts /_cluster/nodes as prefix for backwards
        compatibility reasons
      x-ignorable: true
      x-operation-group: nodes.hot_threads
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
  /_cluster/nodes/{node_id}/hotthreads:
    get:
      deprecated: true
      description: Returns information about hot threads on each node in the cluster.
      operationId: NodesHotThreads_WithNodeId_DeprecatedCluster
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The interval for the second sampling of threads.
        explode: true
        in: query
        name: interval
        required: false
        schema:
          description: The interval for the second sampling of threads.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Number of samples of thread stacktrace.
        explode: true
        in: query
        name: snapshots
        required: false
        schema:
          default: 10
          description: Number of samples of thread stacktrace.
          format: int32
          type: integer
        style: form
      - description: Specify the number of threads to provide information for.
        explode: true
        in: query
        name: threads
        required: false
        schema:
          default: 3
          description: Specify the number of threads to provide information for.
          format: int32
          type: integer
        style: form
      - description: "Don't show threads that are in known-idle places, such as waiting\
          \ on a socket select or pulling from an empty task queue."
        explode: true
        in: query
        name: ignore_idle_threads
        required: false
        schema:
          default: true
          description: "Don't show threads that are in known-idle places, such as\
            \ waiting on a socket select or pulling from an empty task queue."
          type: boolean
        style: form
      - description: The type to sample.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SampleType'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesHotThreads_WithNodeId_DeprecatedCluster 200 response
      x-deprecation-message: The hot threads API accepts `hotthreads` but only `hot_threads`
        is documented
      x-ignorable: true
      x-operation-group: nodes.hot_threads
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
  /_cluster/pending_tasks:
    get:
      description: |-
        Returns a list of any cluster-level changes (e.g. create index, update mapping,
        allocate or fail shard) which have not yet been executed.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ClusterPendingTasks
      parameters:
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: ClusterPendingTasks 200 response
      x-operation-group: cluster.pending_tasks
      x-version-added: "1.0"
  /_cluster/reroute:
    post:
      description: Allows to manually change the allocation of individual shards in
        the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ClusterReroute
      parameters:
      - description: Simulate the operation only and return the resulting state.
        explode: true
        in: query
        name: dry_run
        required: false
        schema:
          description: Simulate the operation only and return the resulting state.
          type: boolean
        style: form
      - description: Return an explanation of why the commands can or cannot be executed.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Return an explanation of why the commands can or cannot be
            executed.
          type: boolean
        style: form
      - description: Retries allocation of shards that are blocked due to too many
          subsequent allocation failures.
        explode: true
        in: query
        name: retry_failed
        required: false
        schema:
          description: Retries allocation of shards that are blocked due to too many
            subsequent allocation failures.
          type: boolean
        style: form
      - description: Limit the information returned to the specified metrics. Defaults
          to all but metadata.
        explode: true
        in: query
        name: metric
        required: false
        schema:
          description: Limit the information returned to the specified metrics. Defaults
            to all but metadata.
          items:
            $ref: '#/components/schemas/ClusterRerouteMetric_Member'
          type: array
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterReroute_BodyParams'
      responses:
        "200":
          description: ClusterReroute 200 response
      x-operation-group: cluster.reroute
      x-version-added: "1.0"
  /_cluster/routing/awareness/weights:
    delete:
      description: Delete weighted shard routing weights.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-awareness/#example-deleting-weights
      operationId: ClusterDeleteWeightedRouting
      responses:
        "200":
          description: ClusterDeleteWeightedRouting 200 response
      x-operation-group: cluster.delete_weighted_routing
      x-version-added: "1.0"
  /_cluster/routing/awareness/{attribute}/weights:
    get:
      description: Fetches weighted shard routing weights.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-awareness/#example-getting-weights-for-all-zones
      operationId: ClusterGetWeightedRouting
      parameters:
      - description: Awareness attribute name.
        explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: Awareness attribute name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      responses:
        "200":
          description: ClusterGetWeightedRouting 200 response
      x-operation-group: cluster.get_weighted_routing
      x-version-added: "1.0"
    put:
      description: Updates weighted shard routing weights.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-awareness/#example-weighted-round-robin-search
      operationId: ClusterPutWeightedRouting
      parameters:
      - description: Awareness attribute name.
        explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: Awareness attribute name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      responses:
        "200":
          description: ClusterPutWeightedRouting 200 response
      x-operation-group: cluster.put_weighted_routing
      x-version-added: "1.0"
  /_cluster/settings:
    get:
      description: Returns cluster settings.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-settings/
      operationId: ClusterGetSettings
      parameters:
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to return all default clusters setting.
        examples:
          ClusterGetSettings_example1:
            description: ""
            summary: Examples for Get cluster settings Operation.
            value: true
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          default: false
          description: Whether to return all default clusters setting.
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ClusterGetSettings_example1:
                  description: ""
                  summary: Examples for Get cluster settings Operation.
                  value: {}
              schema:
                $ref: '#/components/schemas/ClusterGetSettingsResponseContent'
          description: ClusterGetSettings 200 response
      x-operation-group: cluster.get_settings
      x-version-added: "1.0"
    put:
      description: Updates the cluster settings.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-settings/
      operationId: ClusterPutSettings
      parameters:
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPutSettings_BodyParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterPutSettingsResponseContent'
          description: ClusterPutSettings 200 response
      x-operation-group: cluster.put_settings
      x-version-added: "1.0"
  /_cluster/state:
    get:
      description: Returns a comprehensive information about the state of the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ClusterState
      parameters:
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Wait for the metadata version to be equal or greater than the
          specified metadata version.
        explode: true
        in: query
        name: wait_for_metadata_version
        required: false
        schema:
          description: Wait for the metadata version to be equal or greater than the
            specified metadata version.
          format: int32
          type: integer
        style: form
      - description: The maximum time to wait for wait_for_metadata_version before
          timing out.
        explode: true
        in: query
        name: wait_for_timeout
        required: false
        schema:
          description: The maximum time to wait for wait_for_metadata_version before
            timing out.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: ClusterState 200 response
      x-operation-group: cluster.state
      x-version-added: "1.0"
  /_cluster/state/{metric}:
    get:
      description: Returns a comprehensive information about the state of the cluster.
      operationId: ClusterState_WithMetric
      parameters:
      - description: Limit the information returned to the specified metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned to the specified metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - blocks
          - metadata
          - nodes
          - routing_table
          - routing_nodes
          - master_node
          - cluster_manager_node
          - version
          x-data-type: array
        style: simple
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Wait for the metadata version to be equal or greater than the
          specified metadata version.
        explode: true
        in: query
        name: wait_for_metadata_version
        required: false
        schema:
          description: Wait for the metadata version to be equal or greater than the
            specified metadata version.
          format: int32
          type: integer
        style: form
      - description: The maximum time to wait for wait_for_metadata_version before
          timing out.
        explode: true
        in: query
        name: wait_for_timeout
        required: false
        schema:
          description: The maximum time to wait for wait_for_metadata_version before
            timing out.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: ClusterState_WithMetric 200 response
      x-operation-group: cluster.state
      x-version-added: "1.0"
  /_cluster/state/{metric}/{index}:
    get:
      description: Returns a comprehensive information about the state of the cluster.
      operationId: ClusterState_WithIndexMetric
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Limit the information returned to the specified metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned to the specified metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - blocks
          - metadata
          - nodes
          - routing_table
          - routing_nodes
          - master_node
          - cluster_manager_node
          - version
          x-data-type: array
        style: simple
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Wait for the metadata version to be equal or greater than the
          specified metadata version.
        explode: true
        in: query
        name: wait_for_metadata_version
        required: false
        schema:
          description: Wait for the metadata version to be equal or greater than the
            specified metadata version.
          format: int32
          type: integer
        style: form
      - description: The maximum time to wait for wait_for_metadata_version before
          timing out.
        explode: true
        in: query
        name: wait_for_timeout
        required: false
        schema:
          description: The maximum time to wait for wait_for_metadata_version before
            timing out.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: ClusterState_WithIndexMetric 200 response
      x-operation-group: cluster.state
      x-version-added: "1.0"
  /_cluster/stats:
    get:
      description: Returns high-level overview of cluster statistics.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/cluster-api/cluster-stats/
      operationId: ClusterStats
      parameters:
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: ClusterStats 200 response
      x-operation-group: cluster.stats
      x-version-added: "1.0"
  /_cluster/stats/nodes/{node_id}:
    get:
      description: Returns high-level overview of cluster statistics.
      operationId: ClusterStats_WithNodeId
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: ClusterStats_WithNodeId 200 response
      x-operation-group: cluster.stats
      x-version-added: "1.0"
  /_cluster/voting_config_exclusions:
    delete:
      description: Clears cluster voting config exclusions.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ClusterDeleteVotingConfigExclusions
      parameters:
      - description: Specifies whether to wait for all excluded nodes to be removed
          from the cluster before clearing the voting configuration exclusions list.
        explode: true
        in: query
        name: wait_for_removal
        required: false
        schema:
          default: true
          description: Specifies whether to wait for all excluded nodes to be removed
            from the cluster before clearing the voting configuration exclusions list.
          type: boolean
        style: form
      responses:
        "200":
          description: ClusterDeleteVotingConfigExclusions 200 response
      x-operation-group: cluster.delete_voting_config_exclusions
      x-version-added: "1.0"
    post:
      description: Updates the cluster voting config exclusions by node ids or node
        names.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ClusterPostVotingConfigExclusions
      parameters:
      - description: "Comma-separated list of the persistent ids of the nodes to exclude\
          \ from the voting configuration. If specified, you may not also specify\
          \ ?node_names."
        explode: true
        in: query
        name: node_ids
        required: false
        schema:
          description: "Comma-separated list of the persistent ids of the nodes to\
            \ exclude from the voting configuration. If specified, you may not also\
            \ specify ?node_names."
          type: string
        style: form
      - description: "Comma-separated list of the names of the nodes to exclude from\
          \ the voting configuration. If specified, you may not also specify ?node_ids."
        explode: true
        in: query
        name: node_names
        required: false
        schema:
          description: "Comma-separated list of the names of the nodes to exclude\
            \ from the voting configuration. If specified, you may not also specify\
            \ ?node_ids."
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: ClusterPostVotingConfigExclusions 200 response
      x-operation-group: cluster.post_voting_config_exclusions
      x-version-added: "1.0"
  /_component_template:
    get:
      description: Returns one or more component templates.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ClusterGetComponentTemplate
      parameters:
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: ClusterGetComponentTemplate 200 response
      x-operation-group: cluster.get_component_template
      x-version-added: "1.0"
  /_component_template/{name}:
    delete:
      description: Deletes a component template.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ClusterDeleteComponentTemplate
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: ClusterDeleteComponentTemplate 200 response
      x-operation-group: cluster.delete_component_template
      x-version-added: "1.0"
    get:
      description: Returns one or more component templates.
      operationId: ClusterGetComponentTemplate_WithName
      parameters:
      - description: The Comma-separated names of the component templates.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The Comma-separated names of the component templates.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: ClusterGetComponentTemplate_WithName 200 response
      x-operation-group: cluster.get_component_template
      x-version-added: "1.0"
    head:
      description: Returns information about whether a particular component template
        exist.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ClusterExistsComponentTemplate
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: ClusterExistsComponentTemplate 200 response
      x-operation-group: cluster.exists_component_template
      x-version-added: "1.0"
    post:
      description: Creates or updates a component template.
      operationId: ClusterPutComponentTemplate_Post
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Whether the index template should only be added if new or can
          also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template should only be added if new or can
            also replace an existing one.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPutComponentTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: ClusterPutComponentTemplate_Post 200 response
      x-operation-group: cluster.put_component_template
      x-version-added: "1.0"
    put:
      description: Creates or updates a component template.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-templates/#use-component-templates-to-create-an-index-template
      operationId: ClusterPutComponentTemplate_Put
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Whether the index template should only be added if new or can
          also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template should only be added if new or can
            also replace an existing one.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPutComponentTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: ClusterPutComponentTemplate_Put 200 response
      x-operation-group: cluster.put_component_template
      x-version-added: "1.0"
  /_count:
    get:
      description: Returns number of documents matching a query.
      operationId: Count_Get
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Include only documents with a specific `_score` value in the
          result.
        explode: true
        in: query
        name: min_score
        required: false
        schema:
          description: Include only documents with a specific `_score` value in the
            result.
          format: int32
          type: integer
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: Count_Get 200 response
      x-operation-group: count
      x-version-added: "1.0"
    post:
      description: Returns number of documents matching a query.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/count/
      operationId: Count_Post
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Include only documents with a specific `_score` value in the
          result.
        explode: true
        in: query
        name: min_score
        required: false
        schema:
          description: Include only documents with a specific `_score` value in the
            result.
          format: int32
          type: integer
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Count_BodyParams'
      responses:
        "200":
          description: Count_Post 200 response
      x-operation-group: count
      x-version-added: "1.0"
  /_dangling:
    get:
      description: Returns all dangling indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/dangling-index/
      operationId: DanglingIndicesListDanglingIndices
      responses:
        "200":
          description: DanglingIndicesListDanglingIndices 200 response
      x-operation-group: dangling_indices.list_dangling_indices
      x-version-added: "1.0"
  /_dangling/{index_uuid}:
    delete:
      description: Deletes the specified dangling index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/dangling-index/
      operationId: DanglingIndicesDeleteDanglingIndex
      parameters:
      - description: The UUID of the dangling index.
        explode: false
        in: path
        name: index_uuid
        required: true
        schema:
          description: The UUID of the dangling index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Must be set to true in order to delete the dangling index.
        explode: true
        in: query
        name: accept_data_loss
        required: false
        schema:
          description: Must be set to true in order to delete the dangling index.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: DanglingIndicesDeleteDanglingIndex 200 response
      x-operation-group: dangling_indices.delete_dangling_index
      x-version-added: "1.0"
    post:
      description: Imports the specified dangling index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/dangling-index/
      operationId: DanglingIndicesImportDanglingIndex
      parameters:
      - description: The UUID of the dangling index.
        explode: false
        in: path
        name: index_uuid
        required: true
        schema:
          description: The UUID of the dangling index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Must be set to true in order to import the dangling index.
        explode: true
        in: query
        name: accept_data_loss
        required: false
        schema:
          description: Must be set to true in order to import the dangling index.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: DanglingIndicesImportDanglingIndex 200 response
      x-operation-group: dangling_indices.import_dangling_index
      x-version-added: "1.0"
  /_data_stream:
    get:
      description: Returns data streams.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/data-streams/
      operationId: IndicesGetDataStream
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicesGetDataStreamResponseContent'
          description: IndicesGetDataStream 200 response
      x-operation-group: indices.get_data_stream
      x-version-added: "1.0"
  /_data_stream/_stats:
    get:
      description: Provides statistics on operations happening in a data stream.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/data-streams/
      operationId: IndicesDataStreamsStats
      responses:
        "200":
          description: IndicesDataStreamsStats 200 response
      x-operation-group: indices.data_streams_stats
      x-version-added: "1.0"
  /_data_stream/{name}:
    delete:
      description: Deletes a data stream.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/data-streams/
      operationId: IndicesDeleteDataStream
      parameters:
      - description: Comma-separated list of data streams; use `_all` or empty string
          to perform the operation on all data streams.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of data streams; use `_all` or empty string
            to perform the operation on all data streams.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicesDeleteDataStreamResponseContent'
          description: IndicesDeleteDataStream 200 response
      x-operation-group: indices.delete_data_stream
      x-version-added: "1.0"
    get:
      description: Returns data streams.
      operationId: IndicesGetDataStream_WithName
      parameters:
      - description: Comma-separated list of data streams; use `_all` or empty string
          to perform the operation on all data streams.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of data streams; use `_all` or empty string
            to perform the operation on all data streams.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicesGetDataStream_WithNameResponseContent'
          description: IndicesGetDataStream_WithName 200 response
      x-operation-group: indices.get_data_stream
      x-version-added: "1.0"
    put:
      description: Creates or updates a data stream.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/data-streams/
      operationId: IndicesCreateDataStream
      parameters:
      - description: The name of the data stream.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the data stream.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesCreateDataStream_BodyParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicesCreateDataStreamResponseContent'
          description: IndicesCreateDataStream 200 response
      x-operation-group: indices.create_data_stream
      x-version-added: "1.0"
  /_data_stream/{name}/_stats:
    get:
      description: Provides statistics on operations happening in a data stream.
      operationId: IndicesDataStreamsStats_WithName
      parameters:
      - description: Comma-separated list of data streams; use `_all` or empty string
          to perform the operation on all data streams.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of data streams; use `_all` or empty string
            to perform the operation on all data streams.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      responses:
        "200":
          description: IndicesDataStreamsStats_WithName 200 response
      x-operation-group: indices.data_streams_stats
      x-version-added: "1.0"
  /_delete_by_query/{task_id}/_rethrottle:
    post:
      description: Changes the number of requests per second for a particular Delete
        By Query operation.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: DeleteByQueryRethrottle
      parameters:
      - description: The task id to rethrottle.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          description: The task id to rethrottle.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The throttle for this request in sub-requests per second. -1
          means no throttle.
        explode: true
        in: query
        name: requests_per_second
        required: true
        schema:
          description: The throttle for this request in sub-requests per second. -1
            means no throttle.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: DeleteByQueryRethrottle 200 response
      x-operation-group: delete_by_query_rethrottle
      x-version-added: "1.0"
  /_field_caps:
    get:
      description: Returns the information about the capabilities of fields among
        multiple indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/field-types/supported-field-types/alias/#using-aliases-in-field-capabilities-api-operations
      operationId: FieldCaps_Get
      parameters:
      - description: Comma-separated list of field names.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of field names.
          items:
            type: string
          type: array
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Indicates whether unmapped fields should be included in the response.
        explode: true
        in: query
        name: include_unmapped
        required: false
        schema:
          default: false
          description: Indicates whether unmapped fields should be included in the
            response.
          type: boolean
        style: form
      responses:
        "200":
          description: FieldCaps_Get 200 response
      x-operation-group: field_caps
      x-version-added: "1.0"
    post:
      description: Returns the information about the capabilities of fields among
        multiple indices.
      operationId: FieldCaps_Post
      parameters:
      - description: Comma-separated list of field names.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of field names.
          items:
            type: string
          type: array
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Indicates whether unmapped fields should be included in the response.
        explode: true
        in: query
        name: include_unmapped
        required: false
        schema:
          default: false
          description: Indicates whether unmapped fields should be included in the
            response.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldCaps_BodyParams'
      responses:
        "200":
          description: FieldCaps_Post 200 response
      x-operation-group: field_caps
      x-version-added: "1.0"
  /_flush:
    get:
      description: Performs the flush operation on one or more indices.
      operationId: IndicesFlush_Get
      parameters:
      - description: Whether a flush should be forced even if it is not necessarily
          needed ie. if no changes will be committed to the index. This is useful
          if transaction log IDs should be incremented even if no uncommitted changes
          are present. (This setting can be considered as internal).
        explode: true
        in: query
        name: force
        required: false
        schema:
          description: Whether a flush should be forced even if it is not necessarily
            needed ie. if no changes will be committed to the index. This is useful
            if transaction log IDs should be incremented even if no uncommitted changes
            are present. (This setting can be considered as internal).
          type: boolean
        style: form
      - description: If set to true the flush operation will block until the flush
          can be executed if another flush operation is already executing. If set
          to false the flush will be skipped iff if another flush operation is already
          running.
        explode: true
        in: query
        name: wait_if_ongoing
        required: false
        schema:
          default: true
          description: If set to true the flush operation will block until the flush
            can be executed if another flush operation is already executing. If set
            to false the flush will be skipped iff if another flush operation is already
            running.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesFlush_Get 200 response
      x-operation-group: indices.flush
      x-version-added: "1.0"
    post:
      description: Performs the flush operation on one or more indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesFlush_Post
      parameters:
      - description: Whether a flush should be forced even if it is not necessarily
          needed ie. if no changes will be committed to the index. This is useful
          if transaction log IDs should be incremented even if no uncommitted changes
          are present. (This setting can be considered as internal).
        explode: true
        in: query
        name: force
        required: false
        schema:
          description: Whether a flush should be forced even if it is not necessarily
            needed ie. if no changes will be committed to the index. This is useful
            if transaction log IDs should be incremented even if no uncommitted changes
            are present. (This setting can be considered as internal).
          type: boolean
        style: form
      - description: If set to true the flush operation will block until the flush
          can be executed if another flush operation is already executing. If set
          to false the flush will be skipped iff if another flush operation is already
          running.
        explode: true
        in: query
        name: wait_if_ongoing
        required: false
        schema:
          default: true
          description: If set to true the flush operation will block until the flush
            can be executed if another flush operation is already executing. If set
            to false the flush will be skipped iff if another flush operation is already
            running.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesFlush_Post 200 response
      x-operation-group: indices.flush
      x-version-added: "1.0"
  /_forcemerge:
    post:
      description: Performs the force merge operation on one or more indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesForcemerge
      parameters:
      - description: Specify whether the index should be flushed after performing
          the operation.
        explode: true
        in: query
        name: flush
        required: false
        schema:
          default: true
          description: Specify whether the index should be flushed after performing
            the operation.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "The number of segments the index should be merged into (default:\
          \ dynamic)."
        explode: true
        in: query
        name: max_num_segments
        required: false
        schema:
          description: "The number of segments the index should be merged into (default:\
            \ dynamic)."
          format: int32
          type: integer
        style: form
      - description: Specify whether the operation should only expunge deleted documents.
        explode: true
        in: query
        name: only_expunge_deletes
        required: false
        schema:
          description: Specify whether the operation should only expunge deleted documents.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesForcemerge 200 response
      x-operation-group: indices.forcemerge
      x-version-added: "1.0"
  /_index_template:
    get:
      description: Returns an index template.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-templates/
      operationId: IndicesGetIndexTemplate
      parameters:
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetIndexTemplate 200 response
      x-operation-group: indices.get_index_template
      x-version-added: "1.0"
  /_index_template/_simulate:
    post:
      description: Simulate resolving the given template name or body.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesSimulateTemplate
      parameters:
      - description: Whether the index template we optionally defined in the body
          should only be dry-run added if new or can also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template we optionally defined in the body
            should only be dry-run added if new or can also replace an existing one.
          type: boolean
        style: form
      - description: User defined reason for dry-run creating the new template for
          simulation purposes.
        explode: true
        in: query
        name: cause
        required: false
        schema:
          default: "false"
          description: User defined reason for dry-run creating the new template for
            simulation purposes.
          type: string
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesSimulateTemplate_BodyParams'
      responses:
        "200":
          description: IndicesSimulateTemplate 200 response
      x-operation-group: indices.simulate_template
      x-version-added: "1.0"
  /_index_template/_simulate/{name}:
    post:
      description: Simulate resolving the given template name or body.
      operationId: IndicesSimulateTemplate_WithName
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Whether the index template we optionally defined in the body
          should only be dry-run added if new or can also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template we optionally defined in the body
            should only be dry-run added if new or can also replace an existing one.
          type: boolean
        style: form
      - description: User defined reason for dry-run creating the new template for
          simulation purposes.
        explode: true
        in: query
        name: cause
        required: false
        schema:
          default: "false"
          description: User defined reason for dry-run creating the new template for
            simulation purposes.
          type: string
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesSimulateTemplate_BodyParams'
      responses:
        "200":
          description: IndicesSimulateTemplate_WithName 200 response
      x-operation-group: indices.simulate_template
      x-version-added: "1.0"
  /_index_template/_simulate_index/{name}:
    post:
      description: Simulate matching the given index name against the index templates
        in the system.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesSimulateIndexTemplate
      parameters:
      - description: The name of the index (it must be a concrete index name).
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the index (it must be a concrete index name).
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Whether the index template we optionally defined in the body
          should only be dry-run added if new or can also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template we optionally defined in the body
            should only be dry-run added if new or can also replace an existing one.
          type: boolean
        style: form
      - description: User defined reason for dry-run creating the new template for
          simulation purposes.
        explode: true
        in: query
        name: cause
        required: false
        schema:
          default: "false"
          description: User defined reason for dry-run creating the new template for
            simulation purposes.
          type: string
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesSimulateIndexTemplate_BodyParams'
      responses:
        "200":
          description: IndicesSimulateIndexTemplate 200 response
      x-operation-group: indices.simulate_index_template
      x-version-added: "1.0"
  /_index_template/{name}:
    delete:
      description: Deletes an index template.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template
      operationId: IndicesDeleteIndexTemplate
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: IndicesDeleteIndexTemplate 200 response
      x-operation-group: indices.delete_index_template
      x-version-added: "1.0"
    get:
      description: Returns an index template.
      operationId: IndicesGetIndexTemplate_WithName
      parameters:
      - description: Comma-separated names of the index templates.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated names of the index templates.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetIndexTemplate_WithName 200 response
      x-operation-group: indices.get_index_template
      x-version-added: "1.0"
    head:
      description: Returns information about whether a particular index template exists.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-templates/
      operationId: IndicesExistsIndexTemplate
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesExistsIndexTemplate 200 response
      x-operation-group: indices.exists_index_template
      x-version-added: "1.0"
    post:
      description: Creates or updates an index template.
      operationId: IndicesPutIndexTemplate_Post
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Whether the index template should only be added if new or can
          also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template should only be added if new or can
            also replace an existing one.
          type: boolean
        style: form
      - description: User defined reason for creating/updating the index template.
        explode: true
        in: query
        name: cause
        required: false
        schema:
          default: "false"
          description: User defined reason for creating/updating the index template.
          type: string
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutIndexTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: IndicesPutIndexTemplate_Post 200 response
      x-operation-group: indices.put_index_template
      x-version-added: "1.0"
    put:
      description: Creates or updates an index template.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-templates/
      operationId: IndicesPutIndexTemplate_Put
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Whether the index template should only be added if new or can
          also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template should only be added if new or can
            also replace an existing one.
          type: boolean
        style: form
      - description: User defined reason for creating/updating the index template.
        explode: true
        in: query
        name: cause
        required: false
        schema:
          default: "false"
          description: User defined reason for creating/updating the index template.
          type: string
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutIndexTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: IndicesPutIndexTemplate_Put 200 response
      x-operation-group: indices.put_index_template
      x-version-added: "1.0"
  /_ingest/pipeline:
    get:
      description: Returns a pipeline.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/ingest-apis/get-ingest/
      operationId: IngestGetPipeline
      parameters:
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: IngestGetPipeline 200 response
      x-operation-group: ingest.get_pipeline
      x-version-added: "1.0"
  /_ingest/pipeline/_simulate:
    get:
      description: Allows to simulate a pipeline with example documents.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/ingest-apis/simulate-ingest/
      operationId: IngestSimulate_Get
      parameters:
      - description: Verbose mode. Display data output for each processor in executed
          pipeline.
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: false
          description: Verbose mode. Display data output for each processor in executed
            pipeline.
          type: boolean
        style: form
      responses:
        "200":
          description: IngestSimulate_Get 200 response
      x-operation-group: ingest.simulate
      x-version-added: "1.0"
    post:
      description: Allows to simulate a pipeline with example documents.
      operationId: IngestSimulate_Post
      parameters:
      - description: Verbose mode. Display data output for each processor in executed
          pipeline.
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: false
          description: Verbose mode. Display data output for each processor in executed
            pipeline.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestSimulate_BodyParams'
        required: true
      responses:
        "200":
          description: IngestSimulate_Post 200 response
      x-operation-group: ingest.simulate
      x-version-added: "1.0"
  /_ingest/pipeline/{id}:
    delete:
      description: Deletes a pipeline.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/ingest-apis/delete-ingest/
      operationId: IngestDeletePipeline
      parameters:
      - description: Pipeline ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Pipeline ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: IngestDeletePipeline 200 response
      x-operation-group: ingest.delete_pipeline
      x-version-added: "1.0"
    get:
      description: Returns a pipeline.
      operationId: IngestGetPipeline_WithId
      parameters:
      - description: Comma-separated list of pipeline ids. Wildcards supported.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Comma-separated list of pipeline ids. Wildcards supported.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: IngestGetPipeline_WithId 200 response
      x-operation-group: ingest.get_pipeline
      x-version-added: "1.0"
    put:
      description: Creates or updates a pipeline.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/ingest-apis/create-update-ingest/
      operationId: IngestPutPipeline
      parameters:
      - description: Pipeline ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Pipeline ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestPutPipeline_BodyParams'
        required: true
      responses:
        "200":
          description: IngestPutPipeline 200 response
      x-operation-group: ingest.put_pipeline
      x-version-added: "1.0"
  /_ingest/pipeline/{id}/_simulate:
    get:
      description: Allows to simulate a pipeline with example documents.
      operationId: IngestSimulate_Get_WithId
      parameters:
      - description: Pipeline ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Pipeline ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Verbose mode. Display data output for each processor in executed
          pipeline.
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: false
          description: Verbose mode. Display data output for each processor in executed
            pipeline.
          type: boolean
        style: form
      responses:
        "200":
          description: IngestSimulate_Get_WithId 200 response
      x-operation-group: ingest.simulate
      x-version-added: "1.0"
    post:
      description: Allows to simulate a pipeline with example documents.
      operationId: IngestSimulate_Post_WithId
      parameters:
      - description: Pipeline ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Pipeline ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Verbose mode. Display data output for each processor in executed
          pipeline.
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: false
          description: Verbose mode. Display data output for each processor in executed
            pipeline.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestSimulate_BodyParams'
        required: true
      responses:
        "200":
          description: IngestSimulate_Post_WithId 200 response
      x-operation-group: ingest.simulate
      x-version-added: "1.0"
  /_ingest/processor/grok:
    get:
      description: Returns a list of the built-in patterns.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IngestProcessorGrok
      responses:
        "200":
          description: IngestProcessorGrok 200 response
      x-operation-group: ingest.processor_grok
      x-version-added: "1.0"
  /_mapping:
    get:
      description: Returns mappings for one or more indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/field-types/index/#get-a-mapping
      operationId: IndicesGetMapping
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          deprecated: true
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
          x-version-deprecated: "1.0"
          x-deprecation-message: This parameter is a no-op and field mappings are
            always retrieved locally.
        style: form
      responses:
        "200":
          description: IndicesGetMapping 200 response
      x-operation-group: indices.get_mapping
      x-version-added: "1.0"
  /_mapping/field/{fields}:
    get:
      description: Returns mapping for one or more fields.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/field-types/index/
      operationId: IndicesGetFieldMapping
      parameters:
      - description: Comma-separated list of fields.
        explode: false
        in: path
        name: fields
        required: true
        schema:
          description: Comma-separated list of fields.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether the default mapping values should be returned as well.
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          description: Whether the default mapping values should be returned as well.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetFieldMapping 200 response
      x-operation-group: indices.get_field_mapping
      x-version-added: "1.0"
  /_mget:
    get:
      description: Allows to get multiple documents in one request.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/multi-get/
      operationId: Mget_Get
      parameters:
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Specify whether to perform the operation in realtime or search
          mode.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          description: Specify whether to perform the operation in realtime or search
            mode.
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          description: Mget_Get 200 response
      x-operation-group: mget
      x-version-added: "1.0"
    post:
      description: Allows to get multiple documents in one request.
      operationId: Mget_Post
      parameters:
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Specify whether to perform the operation in realtime or search
          mode.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          description: Specify whether to perform the operation in realtime or search
            mode.
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mget_BodyParams'
        required: true
      responses:
        "200":
          description: Mget_Post 200 response
      x-operation-group: mget
      x-version-added: "1.0"
  /_msearch:
    get:
      description: Allows to execute several search operations in one request.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/multi-search/
      operationId: Msearch_Get
      parameters:
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Controls the maximum number of concurrent searches the multi
          search api will execute.
        explode: true
        in: query
        name: max_concurrent_searches
        required: false
        schema:
          description: Controls the maximum number of concurrent searches the multi
            search api will execute.
          format: int32
          type: integer
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Threshold that enforces a pre-filter round-trip to prefilter
          search shards based on query rewriting if the number of shards the search
          request expands to exceeds the threshold. This filter round-trip can limit
          the number of shards significantly if for instance a shard can not match
          any documents based on its rewrite method ie. if date filters are mandatory
          to match but the shard bounds and the query are disjoint.
        explode: true
        in: query
        name: pre_filter_shard_size
        required: false
        schema:
          description: Threshold that enforces a pre-filter round-trip to prefilter
            search shards based on query rewriting if the number of shards the search
            request expands to exceeds the threshold. This filter round-trip can limit
            the number of shards significantly if for instance a shard can not match
            any documents based on its rewrite method ie. if date filters are mandatory
            to match but the shard bounds and the query are disjoint.
          format: int32
          type: integer
        style: form
      - description: The number of concurrent shard requests each sub search executes
          concurrently per node. This value should be used to limit the impact of
          the search on the cluster in order to limit the number of concurrent shard
          requests.
        explode: true
        in: query
        name: max_concurrent_shard_requests
        required: false
        schema:
          default: 5
          description: The number of concurrent shard requests each sub search executes
            concurrently per node. This value should be used to limit the impact of
            the search on the cluster in order to limit the number of concurrent shard
            requests.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      responses:
        "200":
          description: Msearch_Get 200 response
      x-operation-group: msearch
      x-version-added: "1.0"
    post:
      description: Allows to execute several search operations in one request.
      operationId: Msearch_Post
      parameters:
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Controls the maximum number of concurrent searches the multi
          search api will execute.
        explode: true
        in: query
        name: max_concurrent_searches
        required: false
        schema:
          description: Controls the maximum number of concurrent searches the multi
            search api will execute.
          format: int32
          type: integer
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Threshold that enforces a pre-filter round-trip to prefilter
          search shards based on query rewriting if the number of shards the search
          request expands to exceeds the threshold. This filter round-trip can limit
          the number of shards significantly if for instance a shard can not match
          any documents based on its rewrite method ie. if date filters are mandatory
          to match but the shard bounds and the query are disjoint.
        explode: true
        in: query
        name: pre_filter_shard_size
        required: false
        schema:
          description: Threshold that enforces a pre-filter round-trip to prefilter
            search shards based on query rewriting if the number of shards the search
            request expands to exceeds the threshold. This filter round-trip can limit
            the number of shards significantly if for instance a shard can not match
            any documents based on its rewrite method ie. if date filters are mandatory
            to match but the shard bounds and the query are disjoint.
          format: int32
          type: integer
        style: form
      - description: The number of concurrent shard requests each sub search executes
          concurrently per node. This value should be used to limit the impact of
          the search on the cluster in order to limit the number of concurrent shard
          requests.
        explode: true
        in: query
        name: max_concurrent_shard_requests
        required: false
        schema:
          default: 5
          description: The number of concurrent shard requests each sub search executes
            concurrently per node. This value should be used to limit the impact of
            the search on the cluster in order to limit the number of concurrent shard
            requests.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Msearch_BodyParams'
        required: true
      responses:
        "200":
          description: Msearch_Post 200 response
      x-operation-group: msearch
      x-version-added: "1.0"
  /_msearch/template:
    get:
      description: Allows to execute several search template operations in one request.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      operationId: MsearchTemplate_Get
      parameters:
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Controls the maximum number of concurrent searches the multi
          search api will execute.
        explode: true
        in: query
        name: max_concurrent_searches
        required: false
        schema:
          description: Controls the maximum number of concurrent searches the multi
            search api will execute.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      responses:
        "200":
          description: MsearchTemplate_Get 200 response
      x-operation-group: msearch_template
      x-version-added: "1.0"
    post:
      description: Allows to execute several search template operations in one request.
      operationId: MsearchTemplate_Post
      parameters:
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Controls the maximum number of concurrent searches the multi
          search api will execute.
        explode: true
        in: query
        name: max_concurrent_searches
        required: false
        schema:
          description: Controls the maximum number of concurrent searches the multi
            search api will execute.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsearchTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: MsearchTemplate_Post 200 response
      x-operation-group: msearch_template
      x-version-added: "1.0"
  /_mtermvectors:
    get:
      description: Returns multiple termvectors in one request.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: Mtermvectors_Get
      parameters:
      - description: Comma-separated list of documents ids. You must define ids as
          parameter or set 'ids' or 'docs' in the request body.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          description: Comma-separated list of documents ids. You must define ids
            as parameter or set 'ids' or 'docs' in the request body.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if total term frequency and document frequency should
          be returned. Applies to all returned documents unless otherwise specified
          in body 'params' or 'docs'.
        explode: true
        in: query
        name: term_statistics
        required: false
        schema:
          default: false
          description: Specifies if total term frequency and document frequency should
            be returned. Applies to all returned documents unless otherwise specified
            in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: "Specifies if document count, sum of document frequencies and\
          \ sum of total term frequencies should be returned. Applies to all returned\
          \ documents unless otherwise specified in body 'params' or 'docs'."
        explode: true
        in: query
        name: field_statistics
        required: false
        schema:
          default: true
          description: "Specifies if document count, sum of document frequencies and\
            \ sum of total term frequencies should be returned. Applies to all returned\
            \ documents unless otherwise specified in body 'params' or 'docs'."
          type: boolean
        style: form
      - description: Comma-separated list of fields to return. Applies to all returned
          documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return. Applies to all returned
            documents unless otherwise specified in body 'params' or 'docs'.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if term offsets should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: offsets
        required: false
        schema:
          default: true
          description: Specifies if term offsets should be returned. Applies to all
            returned documents unless otherwise specified in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: Specifies if term positions should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: positions
        required: false
        schema:
          default: true
          description: Specifies if term positions should be returned. Applies to
            all returned documents unless otherwise specified in body 'params' or
            'docs'.
          type: boolean
        style: form
      - description: Specifies if term payloads should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: payloads
        required: false
        schema:
          default: true
          description: Specifies if term payloads should be returned. Applies to all
            returned documents unless otherwise specified in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
          Applies to all returned documents unless otherwise specified in body 'params'
          or 'docs'.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on. Applies to all returned documents unless otherwise specified in body
            'params' or 'docs'.
          type: string
        style: form
      - description: Routing value. Applies to all returned documents unless otherwise
          specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value. Applies to all returned documents unless otherwise
            specified in body 'params' or 'docs'.
          type: string
        style: form
      - description: Specifies if requests are real-time as opposed to near-real-time.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          default: true
          description: Specifies if requests are real-time as opposed to near-real-time.
          type: boolean
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          description: Mtermvectors_Get 200 response
      x-operation-group: mtermvectors
      x-version-added: "1.0"
    post:
      description: Returns multiple termvectors in one request.
      operationId: Mtermvectors_Post
      parameters:
      - description: Comma-separated list of documents ids. You must define ids as
          parameter or set 'ids' or 'docs' in the request body.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          description: Comma-separated list of documents ids. You must define ids
            as parameter or set 'ids' or 'docs' in the request body.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if total term frequency and document frequency should
          be returned. Applies to all returned documents unless otherwise specified
          in body 'params' or 'docs'.
        explode: true
        in: query
        name: term_statistics
        required: false
        schema:
          default: false
          description: Specifies if total term frequency and document frequency should
            be returned. Applies to all returned documents unless otherwise specified
            in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: "Specifies if document count, sum of document frequencies and\
          \ sum of total term frequencies should be returned. Applies to all returned\
          \ documents unless otherwise specified in body 'params' or 'docs'."
        explode: true
        in: query
        name: field_statistics
        required: false
        schema:
          default: true
          description: "Specifies if document count, sum of document frequencies and\
            \ sum of total term frequencies should be returned. Applies to all returned\
            \ documents unless otherwise specified in body 'params' or 'docs'."
          type: boolean
        style: form
      - description: Comma-separated list of fields to return. Applies to all returned
          documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return. Applies to all returned
            documents unless otherwise specified in body 'params' or 'docs'.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if term offsets should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: offsets
        required: false
        schema:
          default: true
          description: Specifies if term offsets should be returned. Applies to all
            returned documents unless otherwise specified in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: Specifies if term positions should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: positions
        required: false
        schema:
          default: true
          description: Specifies if term positions should be returned. Applies to
            all returned documents unless otherwise specified in body 'params' or
            'docs'.
          type: boolean
        style: form
      - description: Specifies if term payloads should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: payloads
        required: false
        schema:
          default: true
          description: Specifies if term payloads should be returned. Applies to all
            returned documents unless otherwise specified in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
          Applies to all returned documents unless otherwise specified in body 'params'
          or 'docs'.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on. Applies to all returned documents unless otherwise specified in body
            'params' or 'docs'.
          type: string
        style: form
      - description: Routing value. Applies to all returned documents unless otherwise
          specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value. Applies to all returned documents unless otherwise
            specified in body 'params' or 'docs'.
          type: string
        style: form
      - description: Specifies if requests are real-time as opposed to near-real-time.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          default: true
          description: Specifies if requests are real-time as opposed to near-real-time.
          type: boolean
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mtermvectors_BodyParams'
      responses:
        "200":
          description: Mtermvectors_Post 200 response
      x-operation-group: mtermvectors
      x-version-added: "1.0"
  /_nodes:
    get:
      description: Returns information about nodes in the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/nodes-apis/nodes-info/
      operationId: NodesInfo
      parameters:
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesInfo 200 response
      x-operation-group: nodes.info
      x-version-added: "1.0"
  /_nodes/hot_threads:
    get:
      description: Returns information about hot threads on each node in the cluster.
      operationId: NodesHotThreads
      parameters:
      - description: The interval for the second sampling of threads.
        explode: true
        in: query
        name: interval
        required: false
        schema:
          description: The interval for the second sampling of threads.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Number of samples of thread stacktrace.
        explode: true
        in: query
        name: snapshots
        required: false
        schema:
          default: 10
          description: Number of samples of thread stacktrace.
          format: int32
          type: integer
        style: form
      - description: Specify the number of threads to provide information for.
        explode: true
        in: query
        name: threads
        required: false
        schema:
          default: 3
          description: Specify the number of threads to provide information for.
          format: int32
          type: integer
        style: form
      - description: "Don't show threads that are in known-idle places, such as waiting\
          \ on a socket select or pulling from an empty task queue."
        explode: true
        in: query
        name: ignore_idle_threads
        required: false
        schema:
          default: true
          description: "Don't show threads that are in known-idle places, such as\
            \ waiting on a socket select or pulling from an empty task queue."
          type: boolean
        style: form
      - description: The type to sample.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SampleType'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesHotThreads 200 response
      x-operation-group: nodes.hot_threads
      x-version-added: "1.0"
  /_nodes/hotthreads:
    get:
      deprecated: true
      description: Returns information about hot threads on each node in the cluster.
      operationId: NodesHotThreads_Deprecated
      parameters:
      - description: The interval for the second sampling of threads.
        explode: true
        in: query
        name: interval
        required: false
        schema:
          description: The interval for the second sampling of threads.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Number of samples of thread stacktrace.
        explode: true
        in: query
        name: snapshots
        required: false
        schema:
          default: 10
          description: Number of samples of thread stacktrace.
          format: int32
          type: integer
        style: form
      - description: Specify the number of threads to provide information for.
        explode: true
        in: query
        name: threads
        required: false
        schema:
          default: 3
          description: Specify the number of threads to provide information for.
          format: int32
          type: integer
        style: form
      - description: "Don't show threads that are in known-idle places, such as waiting\
          \ on a socket select or pulling from an empty task queue."
        explode: true
        in: query
        name: ignore_idle_threads
        required: false
        schema:
          default: true
          description: "Don't show threads that are in known-idle places, such as\
            \ waiting on a socket select or pulling from an empty task queue."
          type: boolean
        style: form
      - description: The type to sample.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SampleType'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesHotThreads_Deprecated 200 response
      x-deprecation-message: The hot threads API accepts `hotthreads` but only `hot_threads`
        is documented
      x-ignorable: true
      x-operation-group: nodes.hot_threads
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
  /_nodes/reload_secure_settings:
    post:
      description: Reloads secure settings.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/nodes-apis/nodes-reload-secure/
      operationId: NodesReloadSecureSettings
      parameters:
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodesReloadSecureSettings_BodyParams'
      responses:
        "200":
          description: NodesReloadSecureSettings 200 response
      x-operation-group: nodes.reload_secure_settings
      x-version-added: "1.0"
  /_nodes/stats:
    get:
      description: Returns statistical information about nodes in the cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/nodes-apis/nodes-usage/
      operationId: NodesStats
      parameters:
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return indices stats aggregated at index, node or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/NodesStatLevel'
        style: form
      - description: Comma-separated list of document types for the `indexing` index
          metric.
        explode: true
        in: query
        name: types
        required: false
        schema:
          description: Comma-separated list of document types for the `indexing` index
            metric.
          items:
            type: string
          type: array
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      responses:
        "200":
          description: NodesStats 200 response
      x-operation-group: nodes.stats
      x-version-added: "1.0"
  /_nodes/stats/{metric}:
    get:
      description: Returns statistical information about nodes in the cluster.
      operationId: NodesStats_WithMetric
      parameters:
      - description: Limit the information returned to the specified metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned to the specified metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - breaker
          - fs
          - http
          - indices
          - jvm
          - os
          - process
          - thread_pool
          - transport
          - discovery
          - indexing_pressure
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return indices stats aggregated at index, node or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/NodesStatLevel'
        style: form
      - description: Comma-separated list of document types for the `indexing` index
          metric.
        explode: true
        in: query
        name: types
        required: false
        schema:
          description: Comma-separated list of document types for the `indexing` index
            metric.
          items:
            type: string
          type: array
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      responses:
        "200":
          description: NodesStats_WithMetric 200 response
      x-operation-group: nodes.stats
      x-version-added: "1.0"
  /_nodes/stats/{metric}/{index_metric}:
    get:
      description: Returns statistical information about nodes in the cluster.
      operationId: NodesStats_WithIndexMetricMetric
      parameters:
      - description: Limit the information returned to the specified metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned to the specified metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - breaker
          - fs
          - http
          - indices
          - jvm
          - os
          - process
          - thread_pool
          - transport
          - discovery
          - indexing_pressure
          x-data-type: array
        style: simple
      - description: Limit the information returned for `indices` metric to the specific
          index metrics. Isn't used if `indices` (or `all`) metric isn't specified.
        explode: false
        in: path
        name: index_metric
        required: true
        schema:
          description: Limit the information returned for `indices` metric to the
            specific index metrics. Isn't used if `indices` (or `all`) metric isn't
            specified.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - store
          - indexing
          - get
          - search
          - merge
          - flush
          - refresh
          - query_cache
          - fielddata
          - docs
          - warmer
          - completion
          - segments
          - translog
          - suggest
          - request_cache
          - recovery
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return indices stats aggregated at index, node or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/NodesStatLevel'
        style: form
      - description: Comma-separated list of document types for the `indexing` index
          metric.
        explode: true
        in: query
        name: types
        required: false
        schema:
          description: Comma-separated list of document types for the `indexing` index
            metric.
          items:
            type: string
          type: array
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      responses:
        "200":
          description: NodesStats_WithIndexMetricMetric 200 response
      x-operation-group: nodes.stats
      x-version-added: "1.0"
  /_nodes/usage:
    get:
      description: Returns low-level information about REST actions usage on nodes.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: NodesUsage
      parameters:
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesUsage 200 response
      x-operation-group: nodes.usage
      x-version-added: "1.0"
  /_nodes/usage/{metric}:
    get:
      description: Returns low-level information about REST actions usage on nodes.
      operationId: NodesUsage_WithMetric
      parameters:
      - description: Limit the information returned to the specified metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned to the specified metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - rest_actions
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesUsage_WithMetric 200 response
      x-operation-group: nodes.usage
      x-version-added: "1.0"
  /_nodes/{node_id}:
    get:
      description: Returns information about nodes in the cluster.
      operationId: NodesInfo_WithNodeId
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-overloaded-param: metric
          x-data-type: array
        style: simple
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesInfo_WithNodeId 200 response
      x-operation-group: nodes.info
      x-version-added: "1.0"
  /_nodes/{node_id}/hot_threads:
    get:
      description: Returns information about hot threads on each node in the cluster.
      operationId: NodesHotThreads_WithNodeId
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The interval for the second sampling of threads.
        explode: true
        in: query
        name: interval
        required: false
        schema:
          description: The interval for the second sampling of threads.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Number of samples of thread stacktrace.
        explode: true
        in: query
        name: snapshots
        required: false
        schema:
          default: 10
          description: Number of samples of thread stacktrace.
          format: int32
          type: integer
        style: form
      - description: Specify the number of threads to provide information for.
        explode: true
        in: query
        name: threads
        required: false
        schema:
          default: 3
          description: Specify the number of threads to provide information for.
          format: int32
          type: integer
        style: form
      - description: "Don't show threads that are in known-idle places, such as waiting\
          \ on a socket select or pulling from an empty task queue."
        explode: true
        in: query
        name: ignore_idle_threads
        required: false
        schema:
          default: true
          description: "Don't show threads that are in known-idle places, such as\
            \ waiting on a socket select or pulling from an empty task queue."
          type: boolean
        style: form
      - description: The type to sample.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SampleType'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesHotThreads_WithNodeId 200 response
      x-operation-group: nodes.hot_threads
      x-version-added: "1.0"
  /_nodes/{node_id}/hotthreads:
    get:
      deprecated: true
      description: Returns information about hot threads on each node in the cluster.
      operationId: NodesHotThreads_WithNodeId_Deprecated
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The interval for the second sampling of threads.
        explode: true
        in: query
        name: interval
        required: false
        schema:
          description: The interval for the second sampling of threads.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Number of samples of thread stacktrace.
        explode: true
        in: query
        name: snapshots
        required: false
        schema:
          default: 10
          description: Number of samples of thread stacktrace.
          format: int32
          type: integer
        style: form
      - description: Specify the number of threads to provide information for.
        explode: true
        in: query
        name: threads
        required: false
        schema:
          default: 3
          description: Specify the number of threads to provide information for.
          format: int32
          type: integer
        style: form
      - description: "Don't show threads that are in known-idle places, such as waiting\
          \ on a socket select or pulling from an empty task queue."
        explode: true
        in: query
        name: ignore_idle_threads
        required: false
        schema:
          default: true
          description: "Don't show threads that are in known-idle places, such as\
            \ waiting on a socket select or pulling from an empty task queue."
          type: boolean
        style: form
      - description: The type to sample.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/SampleType'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesHotThreads_WithNodeId_Deprecated 200 response
      x-deprecation-message: The hot threads API accepts `hotthreads` but only `hot_threads`
        is documented
      x-ignorable: true
      x-operation-group: nodes.hot_threads
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
  /_nodes/{node_id}/reload_secure_settings:
    post:
      description: Reloads secure settings.
      operationId: NodesReloadSecureSettings_WithNodeId
      parameters:
      - description: Comma-separated list of node IDs to span the reload/reinit call.
          Should stay empty because reloading usually involves all cluster nodes.
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: Comma-separated list of node IDs to span the reload/reinit
            call. Should stay empty because reloading usually involves all cluster
            nodes.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodesReloadSecureSettings_BodyParams'
      responses:
        "200":
          description: NodesReloadSecureSettings_WithNodeId 200 response
      x-operation-group: nodes.reload_secure_settings
      x-version-added: "1.0"
  /_nodes/{node_id}/stats:
    get:
      description: Returns statistical information about nodes in the cluster.
      operationId: NodesStats_WithNodeId
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return indices stats aggregated at index, node or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/NodesStatLevel'
        style: form
      - description: Comma-separated list of document types for the `indexing` index
          metric.
        explode: true
        in: query
        name: types
        required: false
        schema:
          description: Comma-separated list of document types for the `indexing` index
            metric.
          items:
            type: string
          type: array
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      responses:
        "200":
          description: NodesStats_WithNodeId 200 response
      x-operation-group: nodes.stats
      x-version-added: "1.0"
  /_nodes/{node_id}/stats/{metric}:
    get:
      description: Returns statistical information about nodes in the cluster.
      operationId: NodesStats_WithMetricNodeId
      parameters:
      - description: Limit the information returned to the specified metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned to the specified metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - breaker
          - fs
          - http
          - indices
          - jvm
          - os
          - process
          - thread_pool
          - transport
          - discovery
          - indexing_pressure
          x-data-type: array
        style: simple
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return indices stats aggregated at index, node or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/NodesStatLevel'
        style: form
      - description: Comma-separated list of document types for the `indexing` index
          metric.
        explode: true
        in: query
        name: types
        required: false
        schema:
          description: Comma-separated list of document types for the `indexing` index
            metric.
          items:
            type: string
          type: array
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      responses:
        "200":
          description: NodesStats_WithMetricNodeId 200 response
      x-operation-group: nodes.stats
      x-version-added: "1.0"
  /_nodes/{node_id}/stats/{metric}/{index_metric}:
    get:
      description: Returns statistical information about nodes in the cluster.
      operationId: NodesStats_WithIndexMetricMetricNodeId
      parameters:
      - description: Limit the information returned to the specified metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned to the specified metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - breaker
          - fs
          - http
          - indices
          - jvm
          - os
          - process
          - thread_pool
          - transport
          - discovery
          - indexing_pressure
          x-data-type: array
        style: simple
      - description: Limit the information returned for `indices` metric to the specific
          index metrics. Isn't used if `indices` (or `all`) metric isn't specified.
        explode: false
        in: path
        name: index_metric
        required: true
        schema:
          description: Limit the information returned for `indices` metric to the
            specific index metrics. Isn't used if `indices` (or `all`) metric isn't
            specified.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - store
          - indexing
          - get
          - search
          - merge
          - flush
          - refresh
          - query_cache
          - fielddata
          - docs
          - warmer
          - completion
          - segments
          - translog
          - suggest
          - request_cache
          - recovery
          x-data-type: array
        style: simple
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return indices stats aggregated at index, node or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/NodesStatLevel'
        style: form
      - description: Comma-separated list of document types for the `indexing` index
          metric.
        explode: true
        in: query
        name: types
        required: false
        schema:
          description: Comma-separated list of document types for the `indexing` index
            metric.
          items:
            type: string
          type: array
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      responses:
        "200":
          description: NodesStats_WithIndexMetricMetricNodeId 200 response
      x-operation-group: nodes.stats
      x-version-added: "1.0"
  /_nodes/{node_id}/usage:
    get:
      description: Returns low-level information about REST actions usage on nodes.
      operationId: NodesUsage_WithNodeId
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesUsage_WithNodeId 200 response
      x-operation-group: nodes.usage
      x-version-added: "1.0"
  /_nodes/{node_id}/usage/{metric}:
    get:
      description: Returns low-level information about REST actions usage on nodes.
      operationId: NodesUsage_WithMetricNodeId
      parameters:
      - description: Limit the information returned to the specified metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned to the specified metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - rest_actions
          x-data-type: array
        style: simple
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesUsage_WithMetricNodeId 200 response
      x-operation-group: nodes.usage
      x-version-added: "1.0"
  /_nodes/{node_id}/{metric}:
    get:
      description: Returns information about nodes in the cluster.
      operationId: NodesInfo_WithMetricNodeId
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: false
        in: path
        name: node_id
        required: true
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of metrics you wish returned. Leave empty
          to return all.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Comma-separated list of metrics you wish returned. Leave empty
            to return all.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - settings
          - os
          - process
          - jvm
          - thread_pool
          - transport
          - http
          - plugins
          - ingest
          x-data-type: array
        style: simple
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: NodesInfo_WithMetricNodeId 200 response
      x-operation-group: nodes.info
      x-version-added: "1.0"
  /_plugins/_security/api/account:
    get:
      description: Returns account details for the current user.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-account-details
      operationId: GetAccountDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetails'
          description: GetAccountDetails 200 response
      x-operation-group: security.get_account_details
      x-version-added: "1.0"
    put:
      description: Changes the password for the current user.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#change-password
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponseContent'
          description: ChangePassword 200 response
      x-operation-group: security.change_password
      x-version-added: "1.0"
  /_plugins/_security/api/actiongroups:
    patch:
      description: "Creates, updates, or deletes multiple action groups in a single\
        \ call."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#patch-action-groups
      operationId: PatchActionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchActionGroupsInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchActionGroupsResponseContent'
          description: PatchActionGroups 200 response
      x-operation-group: security.patch_action_groups
      x-version-added: "1.0"
  /_plugins/_security/api/actiongroups/:
    get:
      description: Retrieves all action groups.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-action-groups
      operationId: GetActionGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroupsMap'
          description: GetActionGroups 200 response
      x-operation-group: security.get_action_groups
      x-version-added: "1.0"
  /_plugins/_security/api/actiongroups/{action_group}:
    delete:
      description: Delete a specified action group.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#delete-action-group
      operationId: DeleteActionGroup
      parameters:
      - description: Action group to delete.
        explode: false
        in: path
        name: action_group
        required: true
        schema:
          description: Action group to delete.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActionGroupResponseContent'
          description: DeleteActionGroup 200 response
      x-operation-group: security.delete_action_group
      x-version-added: "1.0"
    get:
      description: Retrieves one action group.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-action-group
      operationId: GetActionGroup
      parameters:
      - description: Action group to retrieve.
        explode: false
        in: path
        name: action_group
        required: true
        schema:
          description: Action group to retrieve.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroupsMap'
          description: GetActionGroup 200 response
      x-operation-group: security.get_action_group
      x-version-added: "1.0"
    patch:
      description: Updates individual attributes of an action group.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#patch-action-group
      operationId: PatchActionGroup
      parameters:
      - explode: false
        in: path
        name: action_group
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchActionGroupInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchActionGroupResponseContent'
          description: PatchActionGroup 200 response
      x-operation-group: security.patch_action_group
      x-version-added: "1.0"
    put:
      description: Creates or replaces the specified action group.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#create-action-group
      operationId: CreateActionGroup
      parameters:
      - description: The name of the action group to create or replace
        explode: false
        in: path
        name: action_group
        required: true
        schema:
          description: The name of the action group to create or replace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action_Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActionGroupResponseContent'
          description: CreateActionGroup 200 response
      x-operation-group: security.create_action_group
      x-version-added: "1.0"
  /_plugins/_security/api/audit:
    get:
      description: Retrieves the audit configuration.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#audit-logs
      operationId: GetAuditConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditConfigWithReadOnly'
          description: GetAuditConfiguration 200 response
      x-operation-group: security.get_audit_configuration
      x-version-added: "1.0"
    patch:
      description: A PATCH call is used to update specified fields in the audit configuration.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#audit-logs
      operationId: PatchAuditConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAuditConfigurationInputPayload'
        required: true
      responses:
        "200":
          description: PatchAuditConfiguration 200 response
      x-operation-group: security.patch_audit_configuration
      x-version-added: "1.0"
  /_plugins/_security/api/audit/config:
    put:
      description: Updates the audit configuration.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#audit-logs
      operationId: UpdateAuditConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAuditConfigurationResponseContent'
          description: UpdateAuditConfiguration 200 response
      x-operation-group: security.update_audit_configuration
      x-version-added: "1.0"
  /_plugins/_security/api/cache:
    delete:
      description: "Flushes the Security plugin user, authentication, and authorization\
        \ cache."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#flush-cache
      operationId: FlushCache
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlushCacheResponseContent'
          description: FlushCache 200 response
      x-operation-group: security.flush_cache
      x-version-added: "1.0"
  /_plugins/_security/api/internalusers:
    get:
      description: Retrieve all internal users.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-users
      operationId: GetUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMap'
          description: GetUsers 200 response
      x-operation-group: security.get_users
      x-version-added: "1.0"
    patch:
      description: "Creates, updates, or deletes multiple internal users in a single\
        \ call."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#patch-users
      operationId: PatchUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUsersInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchUsersResponseContent'
          description: PatchUsers 200 response
      x-operation-group: security.patch_users
      x-version-added: "1.0"
  /_plugins/_security/api/internalusers/{username}:
    delete:
      description: Delete the specified user.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#delete-user
      operationId: DeleteUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponseContent'
          description: DeleteUser 200 response
      x-operation-group: security.delete_user
      x-version-added: "1.0"
    get:
      description: Retrieve one internal user.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-user
      operationId: GetUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMap'
          description: GetUser 200 response
      x-operation-group: security.get_user
      x-version-added: "1.0"
    patch:
      description: Updates individual attributes of an internal user.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#patch-user
      operationId: PatchUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchUserResponseContent'
          description: PatchUser 200 response
      x-operation-group: security.patch_user
      x-version-added: "1.0"
    put:
      description: Creates or replaces the specified user.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#create-user
      operationId: CreateUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponseContent'
          description: CreateUser 200 response
      x-operation-group: security.create_user
      x-version-added: "1.0"
  /_plugins/_security/api/nodesdn:
    get:
      description: Retrieves all distinguished names in the allow list.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-distinguished-names
      operationId: GetDistinguishedNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistinguishedNamesMap'
          description: GetDistinguishedNames 200 response
      x-operation-group: security.get_distinguished_names
      x-version-added: "1.0"
    patch:
      description: Bulk update of distinguished names.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#update-all-distinguished-names
      operationId: PatchDistinguishedNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDistinguishedNamesInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDistinguishedNamesResponseContent'
          description: PatchDistinguishedNames 200 response
      x-operation-group: security.patch_distinguished_names
      x-version-added: "1.0"
  /_plugins/_security/api/nodesdn/{cluster_name}:
    delete:
      description: Deletes all distinguished names in the specified cluster’s or node’s
        allow list.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#delete-distinguished-names
      operationId: DeleteDistinguishedNames
      parameters:
      - explode: false
        in: path
        name: cluster_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDistinguishedNamesResponseContent'
          description: DeleteDistinguishedNames 200 response
      x-operation-group: security.delete_distinguished_names
      x-version-added: "1.0"
    get:
      description: Retrieve distinguished names of a specified cluster.
      operationId: GetDistinguishedNamesWithClusterName
      parameters:
      - explode: false
        in: path
        name: cluster_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistinguishedNamesMap'
          description: GetDistinguishedNamesWithClusterName 200 response
      x-operation-group: security.get_distinguished_names
      x-version-added: "1.0"
    put:
      description: Adds or updates the specified distinguished names in the cluster’s
        or node’s allow list.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#update-distinguished-names
      operationId: UpdateDistinguishedNames
      parameters:
      - explode: false
        in: path
        name: cluster_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistinguishedNames'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDistinguishedNamesResponseContent'
          description: UpdateDistinguishedNames 200 response
      x-operation-group: security.update_distinguished_names
      x-version-added: "1.0"
  /_plugins/_security/api/roles:
    patch:
      description: "Creates, updates, or deletes multiple roles in a single call."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#patch-roles
      operationId: PatchRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRolesInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRolesResponseContent'
          description: PatchRoles 200 response
      x-operation-group: security.patch_roles
      x-version-added: "1.0"
  /_plugins/_security/api/roles/:
    get:
      description: Retrieves all roles.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-roles
      operationId: GetRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesMap'
          description: GetRoles 200 response
      x-operation-group: security.get_roles
      x-version-added: "1.0"
  /_plugins/_security/api/roles/{role}:
    delete:
      description: Delete the specified role.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#delete-role
      operationId: DeleteRole
      parameters:
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoleResponseContent'
          description: DeleteRole 200 response
      x-operation-group: security.delete_role
      x-version-added: "1.0"
    get:
      description: Retrieves one role.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-role
      operationId: GetRole
      parameters:
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesMap'
          description: GetRole 200 response
      x-operation-group: security.get_role
      x-version-added: "1.0"
    patch:
      description: Updates individual attributes of a role.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#patch-role
      operationId: PatchRole
      parameters:
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRoleInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRoleResponseContent'
          description: PatchRole 200 response
      x-operation-group: security.patch_role
      x-version-added: "1.0"
    put:
      description: Creates or replaces the specified role.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#create-role
      operationId: CreateRole
      parameters:
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleResponseContent'
          description: CreateRole 200 response
      x-operation-group: security.create_role
      x-version-added: "1.0"
  /_plugins/_security/api/rolesmapping:
    get:
      description: Retrieves all role mappings.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-role-mappings
      operationId: GetRoleMappings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMappings'
          description: GetRoleMappings 200 response
      x-operation-group: security.get_role_mappings
      x-version-added: "1.0"
    patch:
      description: Creates or updates multiple role mappings in a single call.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#patch-role-mappings
      operationId: PatchRoleMappings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRoleMappingsInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRoleMappingsResponseContent'
          description: PatchRoleMappings 200 response
      x-operation-group: security.patch_role_mappings
      x-version-added: "1.0"
  /_plugins/_security/api/rolesmapping/{role}:
    delete:
      description: Deletes the specified role mapping.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#delete-role-mapping
      operationId: DeleteRoleMapping
      parameters:
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoleMappingResponseContent'
          description: DeleteRoleMapping 200 response
      x-operation-group: security.delete_role_mapping
      x-version-added: "1.0"
    get:
      description: Retrieves one role mapping.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-role-mapping
      operationId: GetRoleMapping
      parameters:
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMappings'
          description: GetRoleMapping 200 response
      x-operation-group: security.get_role_mapping
      x-version-added: "1.0"
    patch:
      description: Updates individual attributes of a role mapping.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#patch-role-mapping
      operationId: PatchRoleMapping
      parameters:
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRoleMappingInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRoleMappingResponseContent'
          description: PatchRoleMapping 200 response
      x-operation-group: security.patch_role_mapping
      x-version-added: "1.0"
    put:
      description: Creates or replaces the specified role mapping.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#create-role-mapping
      operationId: CreateRoleMapping
      parameters:
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleMappingResponseContent'
          description: CreateRoleMapping 200 response
      x-operation-group: security.create_role_mapping
      x-version-added: "1.0"
  /_plugins/_security/api/securityconfig:
    get:
      description: Returns the current Security plugin configuration in JSON format.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#get-configuration
      operationId: GetConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicConfig'
          description: GetConfiguration 200 response
      x-operation-group: security.get_configuration
      x-version-added: "1.0"
    patch:
      description: A PATCH call is used to update the existing configuration using
        the REST API.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#patch-configuration
      operationId: PatchConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchConfigurationInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchConfigurationResponseContent'
          description: PatchConfiguration 200 response
      x-operation-group: security.patch_configuration
      x-version-added: "1.0"
  /_plugins/_security/api/securityconfig/config:
    put:
      description: Adds or updates the existing configuration using the REST API.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#update-configuration
      operationId: UpdateConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigurationResponseContent'
          description: UpdateConfiguration 200 response
      x-operation-group: security.update_configuration
      x-version-added: "1.0"
  /_plugins/_security/api/ssl/certs:
    get:
      description: Retrieves the cluster’s security certificates.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#get-certificates
      operationId: GetCertificates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCertificatesResponseContent'
          description: GetCertificates 200 response
      x-operation-group: security.get_certificates
      x-version-added: "1.0"
  /_plugins/_security/api/ssl/http/reloadcerts:
    put:
      description: Reload HTTP layer communication certificates.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#reload-http-certificates
      operationId: ReloadHttpCertificates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReloadHttpCertificatesResponseContent'
          description: ReloadHttpCertificates 200 response
      x-operation-group: security.reload_http_certificates
      x-version-added: "1.0"
  /_plugins/_security/api/ssl/transport/reloadcerts:
    put:
      description: Reload transport layer communication certificates.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#reload-transport-certificates
      operationId: ReloadTransportCertificates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReloadTransportCertificatesResponseContent'
          description: ReloadTransportCertificates 200 response
      x-operation-group: security.reload_transport_certificates
      x-version-added: "1.0"
  /_plugins/_security/api/tenants/:
    get:
      description: Retrieves all tenants.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#get-tenants
      operationId: GetTenants
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsMap'
          description: GetTenants 200 response
      x-operation-group: security.get_tenants
      x-version-added: "1.0"
    patch:
      description: "Add, delete, or modify multiple tenants in a single call."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#patch-tenants
      operationId: PatchTenants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTenantsInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchTenantsResponseContent'
          description: PatchTenants 200 response
      x-operation-group: security.patch_tenants
      x-version-added: "1.0"
  /_plugins/_security/api/tenants/{tenant}:
    delete:
      description: Delete the specified tenant.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#delete-action-group
      operationId: DeleteTenant
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTenantResponseContent'
          description: DeleteTenant 200 response
      x-operation-group: security.delete_tenant
      x-version-added: "1.0"
    get:
      description: Retrieves one tenant.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#get-tenant
      operationId: GetTenant
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsMap'
          description: GetTenant 200 response
      x-operation-group: security.get_tenant
      x-version-added: "1.0"
    patch:
      description: "Add, delete, or modify a single tenant."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#patch-tenant
      operationId: PatchTenant
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTenantInputPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchTenantResponseContent'
          description: PatchTenant 200 response
      x-operation-group: security.patch_tenant
      x-version-added: "1.0"
    put:
      description: Creates or replaces the specified tenant.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/2.7/security/access-control/api/#create-tenant
      operationId: CreateTenant
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTenantResponseContent'
          description: CreateTenant 200 response
      x-operation-group: security.create_tenant
      x-version-added: "1.0"
  /_plugins/_security/health:
    get:
      description: Checks to see if the Security plugin is up and running.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/security/access-control/api/#health-check
      operationId: SecurityHealth
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityHealthResponseContent'
          description: SecurityHealth 200 response
      x-operation-group: security.health
      x-version-added: "1.0"
  /_rank_eval:
    get:
      description: Allows to evaluate the quality of ranked search results over a
        set of typical search queries.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/rank-eval/
      operationId: RankEval_Get
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      responses:
        "200":
          description: RankEval_Get 200 response
      x-operation-group: rank_eval
      x-version-added: "1.0"
    post:
      description: Allows to evaluate the quality of ranked search results over a
        set of typical search queries.
      operationId: RankEval_Post
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankEval_BodyParams'
        required: true
      responses:
        "200":
          description: RankEval_Post 200 response
      x-operation-group: rank_eval
      x-version-added: "1.0"
  /_recovery:
    get:
      description: Returns information about ongoing index shard recoveries.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesRecovery
      parameters:
      - description: Whether to display detailed information about shard recovery.
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          description: Whether to display detailed information about shard recovery.
          type: boolean
        style: form
      - description: Display only those recoveries that are currently on-going.
        explode: true
        in: query
        name: active_only
        required: false
        schema:
          default: false
          description: Display only those recoveries that are currently on-going.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesRecovery 200 response
      x-operation-group: indices.recovery
      x-version-added: "1.0"
  /_refresh:
    get:
      description: Performs the refresh operation in one or more indices.
      operationId: IndicesRefresh_Get
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesRefresh_Get 200 response
      x-operation-group: indices.refresh
      x-version-added: "1.0"
    post:
      description: Performs the refresh operation in one or more indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/tuning-your-cluster/availability-and-recovery/remote-store/index/#refresh-level-and-request-level-durability
      operationId: IndicesRefresh_Post
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesRefresh_Post 200 response
      x-operation-group: indices.refresh
      x-version-added: "1.0"
  /_reindex:
    post:
      description: |-
        Allows to copy documents from one index to another, optionally filtering the source
        documents by a query, changing the destination index settings, or fetching the
        documents from a remote cluster.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/reindex-data/
      operationId: Reindex
      parameters:
      - description: Should the affected indexes be refreshed?.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Should the affected indexes be refreshed?.
          type: boolean
        style: form
      - description: Time each individual bulk request should wait for shards that
          are unavailable.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 1m
          description: Time each individual bulk request should wait for shards that
            are unavailable.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: true
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      - description: The throttle for this request in sub-requests per second. -1
          means no throttle.
        explode: true
        in: query
        name: requests_per_second
        required: false
        schema:
          default: 0
          description: The throttle for this request in sub-requests per second. -1
            means no throttle.
          format: int32
          type: integer
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: "The number of slices this task should be divided into. Defaults\
          \ to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
        explode: true
        in: query
        name: slices
        required: false
        schema:
          default: "1"
          description: "The number of slices this task should be divided into. Defaults\
            \ to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
          type: string
        style: form
      - description: "Maximum number of documents to process (default: all documents)."
        explode: true
        in: query
        name: max_docs
        required: false
        schema:
          description: "Maximum number of documents to process (default: all documents)."
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reindex_BodyParams'
        required: true
      responses:
        "200":
          description: Reindex 200 response
      x-operation-group: reindex
      x-version-added: "1.0"
  /_reindex/{task_id}/_rethrottle:
    post:
      description: Changes the number of requests per second for a particular Reindex
        operation.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: ReindexRethrottle
      parameters:
      - description: The task id to rethrottle.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          description: The task id to rethrottle.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The throttle for this request in sub-requests per second. -1
          means no throttle.
        explode: true
        in: query
        name: requests_per_second
        required: true
        schema:
          description: The throttle for this request in sub-requests per second. -1
            means no throttle.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: ReindexRethrottle 200 response
      x-operation-group: reindex_rethrottle
      x-version-added: "1.0"
  /_remote/info:
    get:
      description: Returns the information about configured remote clusters.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/remote-info/
      operationId: ClusterRemoteInfo
      responses:
        "200":
          description: ClusterRemoteInfo 200 response
      x-operation-group: cluster.remote_info
      x-version-added: "1.0"
  /_remotestore/_restore:
    post:
      description: Restores from remote store.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/opensearch/remote/#restoring-from-a-backup
      operationId: RemoteStoreRestore
      parameters:
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            examples:
              RemoteStoreRestore_example1:
                description: ""
                summary: Examples for Post Remote Storage Restore Operation.
                value:
                  indices:
                  - books
            schema:
              $ref: '#/components/schemas/RemoteStoreRestore_BodyParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                RemoteStoreRestore_example1:
                  description: ""
                  summary: Examples for Post Remote Storage Restore Operation.
                  value:
                    remote_store:
                      indices:
                      - books
                      shards:
                        total: 1
                        failed: 0
                        successful: 1
              schema:
                $ref: '#/components/schemas/RemoteStoreRestoreResponseContent'
          description: RemoteStoreRestore 200 response
      x-operation-group: remote_store.restore
      x-version-added: "1.0"
  /_render/template:
    get:
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      operationId: RenderSearchTemplate_Get
      responses:
        "200":
          description: RenderSearchTemplate_Get 200 response
      x-operation-group: render_search_template
      x-version-added: "1.0"
    post:
      description: Allows to use the Mustache language to pre-render a search definition.
      operationId: RenderSearchTemplate_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderSearchTemplate_BodyParams'
      responses:
        "200":
          description: RenderSearchTemplate_Post 200 response
      x-operation-group: render_search_template
      x-version-added: "1.0"
  /_render/template/{id}:
    get:
      description: Allows to use the Mustache language to pre-render a search definition.
      operationId: RenderSearchTemplate_Get_WithId
      parameters:
      - description: The id of the stored search template.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The id of the stored search template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      responses:
        "200":
          description: RenderSearchTemplate_Get_WithId 200 response
      x-operation-group: render_search_template
      x-version-added: "1.0"
    post:
      description: Allows to use the Mustache language to pre-render a search definition.
      operationId: RenderSearchTemplate_Post_WithId
      parameters:
      - description: The id of the stored search template.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The id of the stored search template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderSearchTemplate_BodyParams'
      responses:
        "200":
          description: RenderSearchTemplate_Post_WithId 200 response
      x-operation-group: render_search_template
      x-version-added: "1.0"
  /_resolve/index/{name}:
    get:
      description: "Returns information about any matching indices, aliases, and data\
        \ streams."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesResolveIndex
      parameters:
      - description: Comma-separated list of names or wildcard expressions.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of names or wildcard expressions.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesResolveIndex 200 response
      x-operation-group: indices.resolve_index
      x-version-added: "1.0"
  /_script_context:
    get:
      description: Returns all script contexts.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/script-apis/get-script-contexts/
      operationId: GetScriptContext
      responses:
        "200":
          description: GetScriptContext 200 response
      x-operation-group: get_script_context
      x-version-added: "1.0"
  /_script_language:
    get:
      description: "Returns available script types, languages and contexts."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/script-apis/get-script-language/
      operationId: GetScriptLanguages
      responses:
        "200":
          description: GetScriptLanguages 200 response
      x-operation-group: get_script_languages
      x-version-added: "1.0"
  /_scripts/painless/_execute:
    get:
      description: Allows an arbitrary script to be executed and a result to be returned.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/script-apis/exec-script/
      operationId: ScriptsPainlessExecute_Get
      responses:
        "200":
          description: ScriptsPainlessExecute_Get 200 response
      x-operation-group: scripts_painless_execute
      x-version-added: "1.0"
    post:
      description: Allows an arbitrary script to be executed and a result to be returned.
      operationId: ScriptsPainlessExecute_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptsPainlessExecute_BodyParams'
      responses:
        "200":
          description: ScriptsPainlessExecute_Post 200 response
      x-operation-group: scripts_painless_execute
      x-version-added: "1.0"
  /_scripts/{id}:
    delete:
      description: Deletes a script.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/script-apis/delete-script/
      operationId: DeleteScript
      parameters:
      - description: Script ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Script ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: DeleteScript 200 response
      x-operation-group: delete_script
      x-version-added: "1.0"
    get:
      description: Returns a script.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/script-apis/get-stored-script/
      operationId: GetScript
      parameters:
      - description: Script ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Script ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: GetScript 200 response
      x-operation-group: get_script
      x-version-added: "1.0"
    post:
      description: Creates or updates a script.
      operationId: PutScript_Post
      parameters:
      - description: Script ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Script ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutScript_BodyParams'
        required: true
      responses:
        "200":
          description: PutScript_Post 200 response
      x-operation-group: put_script
      x-version-added: "1.0"
    put:
      description: Creates or updates a script.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/script-apis/create-stored-script/
      operationId: PutScript_Put
      parameters:
      - description: Script ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Script ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutScript_BodyParams'
        required: true
      responses:
        "200":
          description: PutScript_Put 200 response
      x-operation-group: put_script
      x-version-added: "1.0"
  /_scripts/{id}/{context}:
    post:
      description: Creates or updates a script.
      operationId: PutScript_Post_WithContext
      parameters:
      - description: Script ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Script ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Script context.
        explode: false
        in: path
        name: context
        required: true
        schema:
          description: Script context.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutScript_BodyParams'
        required: true
      responses:
        "200":
          description: PutScript_Post_WithContext 200 response
      x-operation-group: put_script
      x-version-added: "1.0"
    put:
      description: Creates or updates a script.
      operationId: PutScript_Put_WithContext
      parameters:
      - description: Script ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Script ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Script context.
        explode: false
        in: path
        name: context
        required: true
        schema:
          description: Script context.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutScript_BodyParams'
        required: true
      responses:
        "200":
          description: PutScript_Put_WithContext 200 response
      x-operation-group: put_script
      x-version-added: "1.0"
  /_search:
    get:
      description: Returns results matching a query.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/search/
      operationId: Search_Get
      parameters:
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether to return detailed information about score computation
          as part of a hit.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Specify whether to return detailed information about score
            computation as part of a hit.
          type: boolean
        style: form
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields to return as the docvalue representation
          of a field for each hit.
        explode: true
        in: query
        name: docvalue_fields
        required: false
        schema:
          description: Comma-separated list of fields to return as the docvalue representation
            of a field for each hit.
          items:
            type: string
          type: array
        style: form
      - description: Starting offset.
        explode: true
        in: query
        name: from
        required: false
        schema:
          default: 0
          description: Starting offset.
          format: int32
          type: integer
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      - description: Number of hits to return.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          description: Number of hits to return.
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of <field>:<direction> pairs.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: Comma-separated list of <field>:<direction> pairs.
          items:
            type: string
          type: array
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      - description: Specific 'tag' of the request for logging and statistical purposes.
        explode: true
        in: query
        name: stats
        required: false
        schema:
          description: Specific 'tag' of the request for logging and statistical purposes.
          items:
            type: string
          type: array
        style: form
      - description: Specify which field to use for suggestions.
        explode: true
        in: query
        name: suggest_field
        required: false
        schema:
          description: Specify which field to use for suggestions.
          type: string
        style: form
      - description: Specify suggest mode.
        explode: true
        in: query
        name: suggest_mode
        required: false
        schema:
          $ref: '#/components/schemas/SuggestMode'
        style: form
      - description: How many suggestions to return in response.
        explode: true
        in: query
        name: suggest_size
        required: false
        schema:
          description: How many suggestions to return in response.
          format: int32
          type: integer
        style: form
      - description: The source text for which the suggestions should be returned.
        explode: true
        in: query
        name: suggest_text
        required: false
        schema:
          description: The source text for which the suggestions should be returned.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to calculate and return scores even if they are not used
          for sorting.
        explode: true
        in: query
        name: track_scores
        required: false
        schema:
          description: Whether to calculate and return scores even if they are not
            used for sorting.
          type: boolean
        style: form
      - description: Indicate if the number of documents that match the query should
          be tracked.
        explode: true
        in: query
        name: track_total_hits
        required: false
        schema:
          description: Indicate if the number of documents that match the query should
            be tracked.
          type: boolean
        style: form
      - description: Indicate if an error should be returned if there is a partial
          search failure or timeout.
        explode: true
        in: query
        name: allow_partial_search_results
        required: false
        schema:
          default: true
          description: Indicate if an error should be returned if there is a partial
            search failure or timeout.
          type: boolean
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Whether to return document version as part of a hit.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Whether to return document version as part of a hit.
          type: boolean
        style: form
      - description: Specify whether to return sequence number and primary term of
          the last modification of each hit.
        explode: true
        in: query
        name: seq_no_primary_term
        required: false
        schema:
          description: Specify whether to return sequence number and primary term
            of the last modification of each hit.
          type: boolean
        style: form
      - description: "Specify if request cache should be used for this request or\
          \ not, defaults to index level setting."
        explode: true
        in: query
        name: request_cache
        required: false
        schema:
          description: "Specify if request cache should be used for this request or\
            \ not, defaults to index level setting."
          type: boolean
        style: form
      - description: The number of shard results that should be reduced at once on
          the coordinating node. This value should be used as a protection mechanism
          to reduce the memory overhead per search request if the potential number
          of shards in the request can be large.
        explode: true
        in: query
        name: batched_reduce_size
        required: false
        schema:
          default: 512
          description: The number of shard results that should be reduced at once
            on the coordinating node. This value should be used as a protection mechanism
            to reduce the memory overhead per search request if the potential number
            of shards in the request can be large.
          format: int32
          type: integer
        style: form
      - description: The number of concurrent shard requests per node this search
          executes concurrently. This value should be used to limit the impact of
          the search on the cluster in order to limit the number of concurrent shard
          requests.
        explode: true
        in: query
        name: max_concurrent_shard_requests
        required: false
        schema:
          default: 5
          description: The number of concurrent shard requests per node this search
            executes concurrently. This value should be used to limit the impact of
            the search on the cluster in order to limit the number of concurrent shard
            requests.
          format: int32
          type: integer
        style: form
      - description: Threshold that enforces a pre-filter round-trip to prefilter
          search shards based on query rewriting if the number of shards the search
          request expands to exceeds the threshold. This filter round-trip can limit
          the number of shards significantly if for instance a shard can not match
          any documents based on its rewrite method ie. if date filters are mandatory
          to match but the shard bounds and the query are disjoint.
        explode: true
        in: query
        name: pre_filter_shard_size
        required: false
        schema:
          description: Threshold that enforces a pre-filter round-trip to prefilter
            search shards based on query rewriting if the number of shards the search
            request expands to exceeds the threshold. This filter round-trip can limit
            the number of shards significantly if for instance a shard can not match
            any documents based on its rewrite method ie. if date filters are mandatory
            to match but the shard bounds and the query are disjoint.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search_GetResponseContent'
          description: Search_Get 200 response
      x-operation-group: search
      x-version-added: "1.0"
    post:
      description: Returns results matching a query.
      operationId: Search_Post
      parameters:
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether to return detailed information about score computation
          as part of a hit.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Specify whether to return detailed information about score
            computation as part of a hit.
          type: boolean
        style: form
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields to return as the docvalue representation
          of a field for each hit.
        explode: true
        in: query
        name: docvalue_fields
        required: false
        schema:
          description: Comma-separated list of fields to return as the docvalue representation
            of a field for each hit.
          items:
            type: string
          type: array
        style: form
      - description: Starting offset.
        explode: true
        in: query
        name: from
        required: false
        schema:
          default: 0
          description: Starting offset.
          format: int32
          type: integer
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        examples:
          Search_Post_example1:
            description: ""
            summary: Examples for Post Search Operation.
            value: 1d
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      - description: Number of hits to return.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          description: Number of hits to return.
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of <field>:<direction> pairs.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: Comma-separated list of <field>:<direction> pairs.
          items:
            type: string
          type: array
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      - description: Specific 'tag' of the request for logging and statistical purposes.
        explode: true
        in: query
        name: stats
        required: false
        schema:
          description: Specific 'tag' of the request for logging and statistical purposes.
          items:
            type: string
          type: array
        style: form
      - description: Specify which field to use for suggestions.
        explode: true
        in: query
        name: suggest_field
        required: false
        schema:
          description: Specify which field to use for suggestions.
          type: string
        style: form
      - description: Specify suggest mode.
        explode: true
        in: query
        name: suggest_mode
        required: false
        schema:
          $ref: '#/components/schemas/SuggestMode'
        style: form
      - description: How many suggestions to return in response.
        explode: true
        in: query
        name: suggest_size
        required: false
        schema:
          description: How many suggestions to return in response.
          format: int32
          type: integer
        style: form
      - description: The source text for which the suggestions should be returned.
        explode: true
        in: query
        name: suggest_text
        required: false
        schema:
          description: The source text for which the suggestions should be returned.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to calculate and return scores even if they are not used
          for sorting.
        explode: true
        in: query
        name: track_scores
        required: false
        schema:
          description: Whether to calculate and return scores even if they are not
            used for sorting.
          type: boolean
        style: form
      - description: Indicate if the number of documents that match the query should
          be tracked.
        explode: true
        in: query
        name: track_total_hits
        required: false
        schema:
          description: Indicate if the number of documents that match the query should
            be tracked.
          type: boolean
        style: form
      - description: Indicate if an error should be returned if there is a partial
          search failure or timeout.
        explode: true
        in: query
        name: allow_partial_search_results
        required: false
        schema:
          default: true
          description: Indicate if an error should be returned if there is a partial
            search failure or timeout.
          type: boolean
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Whether to return document version as part of a hit.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Whether to return document version as part of a hit.
          type: boolean
        style: form
      - description: Specify whether to return sequence number and primary term of
          the last modification of each hit.
        explode: true
        in: query
        name: seq_no_primary_term
        required: false
        schema:
          description: Specify whether to return sequence number and primary term
            of the last modification of each hit.
          type: boolean
        style: form
      - description: "Specify if request cache should be used for this request or\
          \ not, defaults to index level setting."
        explode: true
        in: query
        name: request_cache
        required: false
        schema:
          description: "Specify if request cache should be used for this request or\
            \ not, defaults to index level setting."
          type: boolean
        style: form
      - description: The number of shard results that should be reduced at once on
          the coordinating node. This value should be used as a protection mechanism
          to reduce the memory overhead per search request if the potential number
          of shards in the request can be large.
        explode: true
        in: query
        name: batched_reduce_size
        required: false
        schema:
          default: 512
          description: The number of shard results that should be reduced at once
            on the coordinating node. This value should be used as a protection mechanism
            to reduce the memory overhead per search request if the potential number
            of shards in the request can be large.
          format: int32
          type: integer
        style: form
      - description: The number of concurrent shard requests per node this search
          executes concurrently. This value should be used to limit the impact of
          the search on the cluster in order to limit the number of concurrent shard
          requests.
        explode: true
        in: query
        name: max_concurrent_shard_requests
        required: false
        schema:
          default: 5
          description: The number of concurrent shard requests per node this search
            executes concurrently. This value should be used to limit the impact of
            the search on the cluster in order to limit the number of concurrent shard
            requests.
          format: int32
          type: integer
        style: form
      - description: Threshold that enforces a pre-filter round-trip to prefilter
          search shards based on query rewriting if the number of shards the search
          request expands to exceeds the threshold. This filter round-trip can limit
          the number of shards significantly if for instance a shard can not match
          any documents based on its rewrite method ie. if date filters are mandatory
          to match but the shard bounds and the query are disjoint.
        explode: true
        in: query
        name: pre_filter_shard_size
        required: false
        schema:
          description: Threshold that enforces a pre-filter round-trip to prefilter
            search shards based on query rewriting if the number of shards the search
            request expands to exceeds the threshold. This filter round-trip can limit
            the number of shards significantly if for instance a shard can not match
            any documents based on its rewrite method ie. if date filters are mandatory
            to match but the shard bounds and the query are disjoint.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Search_Post_example1:
                description: ""
                summary: Examples for Post Search Operation.
                value:
                  query:
                    match_all: {}
                  fields:
                  - '*'
            schema:
              $ref: '#/components/schemas/Search_BodyParams'
      responses:
        "200":
          content:
            application/json:
              examples:
                Search_Post_example1:
                  description: ""
                  summary: Examples for Post Search Operation.
                  value:
                    timed_out: false
                    _shards:
                      total: 1
                      successful: 1
                      skipped: 0
                      failed: 0
                    hits:
                      total:
                        value: 0
                        relation: eq
                      hits: []
              schema:
                $ref: '#/components/schemas/Search_PostResponseContent'
          description: Search_Post 200 response
      x-operation-group: search
      x-version-added: "1.0"
  /_search/point_in_time:
    delete:
      description: Deletes one or more point in time searches based on the IDs passed.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/#delete-pits
      operationId: DeletePit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePit_BodyParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePitResponseContent'
          description: DeletePit 200 response
      x-operation-group: delete_pit
      x-version-added: "2.4"
  /_search/point_in_time/_all:
    delete:
      description: Deletes all active point in time searches.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/#delete-pits
      operationId: DeleteAllPits
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAllPitsResponseContent'
          description: DeleteAllPits 200 response
      x-operation-group: delete_all_pits
      x-version-added: "2.4"
    get:
      description: Lists all active point in time searches.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/#list-all-pits
      operationId: GetAllPits
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPitsResponseContent'
          description: GetAllPits 200 response
      x-operation-group: get_all_pits
      x-version-added: "2.4"
  /_search/scroll:
    delete:
      description: Explicitly clears the search context for a scroll.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/scroll/
      operationId: ClearScroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearScroll_BodyParams'
      responses:
        "200":
          description: ClearScroll 200 response
      x-operation-group: clear_scroll
      x-version-added: "1.0"
    get:
      description: Allows to retrieve a large numbers of results from a single search
        request.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/scroll/#path-and-http-methods
      operationId: Scroll_Get
      parameters:
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Scroll ID.
        explode: true
        in: query
        name: scroll_id
        required: false
        schema:
          description: Scroll ID.
          type: string
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      responses:
        "200":
          description: Scroll_Get 200 response
      x-operation-group: scroll
      x-version-added: "1.0"
    post:
      description: Allows to retrieve a large numbers of results from a single search
        request.
      operationId: Scroll_Post
      parameters:
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Scroll ID.
        explode: true
        in: query
        name: scroll_id
        required: false
        schema:
          description: Scroll ID.
          type: string
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scroll_BodyParams'
      responses:
        "200":
          description: Scroll_Post 200 response
      x-operation-group: scroll
      x-version-added: "1.0"
  /_search/scroll/{scroll_id}:
    delete:
      deprecated: true
      description: Explicitly clears the search context for a scroll.
      operationId: ClearScroll_WithScrollId
      parameters:
      - description: Comma-separated list of scroll IDs to clear.
        explode: false
        in: path
        name: scroll_id
        required: true
        schema:
          deprecated: true
          description: Comma-separated list of scroll IDs to clear.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearScroll_BodyParams'
      responses:
        "200":
          description: ClearScroll_WithScrollId 200 response
      x-deprecation-message: A scroll id can be quite large and should be specified
        as part of the body
      x-operation-group: clear_scroll
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
    get:
      deprecated: true
      description: Allows to retrieve a large numbers of results from a single search
        request.
      operationId: Scroll_Get_WithScrollId
      parameters:
      - description: Scroll ID.
        explode: false
        in: path
        name: scroll_id
        required: true
        schema:
          description: Scroll ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Scroll ID.
        explode: true
        in: query
        name: scroll_id
        required: false
        schema:
          description: Scroll ID.
          type: string
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      responses:
        "200":
          description: Scroll_Get_WithScrollId 200 response
      x-deprecation-message: A scroll id can be quite large and should be specified
        as part of the body
      x-operation-group: scroll
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
    post:
      deprecated: true
      description: Allows to retrieve a large numbers of results from a single search
        request.
      operationId: Scroll_Post_WithScrollId
      parameters:
      - description: Scroll ID.
        explode: false
        in: path
        name: scroll_id
        required: true
        schema:
          description: Scroll ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Scroll ID.
        explode: true
        in: query
        name: scroll_id
        required: false
        schema:
          description: Scroll ID.
          type: string
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scroll_BodyParams'
      responses:
        "200":
          description: Scroll_Post_WithScrollId 200 response
      x-deprecation-message: A scroll id can be quite large and should be specified
        as part of the body
      x-operation-group: scroll
      x-version-added: "1.0"
      x-version-deprecated: "1.0"
  /_search/template:
    get:
      description: Allows to use the Mustache language to pre-render a search definition.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/search-template/
      operationId: SearchTemplate_Get
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Specify whether to return detailed information about score computation
          as part of a hit.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Specify whether to return detailed information about score
            computation as part of a hit.
          type: boolean
        style: form
      - description: Specify whether to profile the query execution.
        explode: true
        in: query
        name: profile
        required: false
        schema:
          description: Specify whether to profile the query execution.
          type: boolean
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      responses:
        "200":
          description: SearchTemplate_Get 200 response
      x-operation-group: search_template
      x-version-added: "1.0"
    post:
      description: Allows to use the Mustache language to pre-render a search definition.
      operationId: SearchTemplate_Post
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Specify whether to return detailed information about score computation
          as part of a hit.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Specify whether to return detailed information about score
            computation as part of a hit.
          type: boolean
        style: form
      - description: Specify whether to profile the query execution.
        explode: true
        in: query
        name: profile
        required: false
        schema:
          description: Specify whether to profile the query execution.
          type: boolean
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: SearchTemplate_Post 200 response
      x-operation-group: search_template
      x-version-added: "1.0"
  /_search_shards:
    get:
      description: Returns information about the indices and shards that a search
        request would be executed against.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: SearchShards_Get
      parameters:
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: SearchShards_Get 200 response
      x-operation-group: search_shards
      x-version-added: "1.0"
    post:
      description: Returns information about the indices and shards that a search
        request would be executed against.
      operationId: SearchShards_Post
      parameters:
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: SearchShards_Post 200 response
      x-operation-group: search_shards
      x-version-added: "1.0"
  /_segments:
    get:
      description: Provides low-level information about segments in a Lucene index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesSegments
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Includes detailed memory usage by Lucene.
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: false
          description: Includes detailed memory usage by Lucene.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesSegments 200 response
      x-operation-group: indices.segments
      x-version-added: "1.0"
  /_settings:
    get:
      description: Returns settings for one or more indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/get-settings/
      operationId: IndicesGetSettings
      parameters:
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether to return all default setting for each of the indices.
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          default: false
          description: Whether to return all default setting for each of the indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetSettings 200 response
      x-operation-group: indices.get_settings
      x-version-added: "1.0"
    put:
      description: Updates the index settings.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/update-settings/
      operationId: IndicesPutSettings
      parameters:
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to update existing settings. If set to `true` existing
          settings on an index remain unchanged.
        explode: true
        in: query
        name: preserve_existing
        required: false
        schema:
          default: false
          description: Whether to update existing settings. If set to `true` existing
            settings on an index remain unchanged.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutSettings_BodyParams'
        required: true
      responses:
        "200":
          description: IndicesPutSettings 200 response
      x-operation-group: indices.put_settings
      x-version-added: "1.0"
  /_settings/{name}:
    get:
      description: Returns settings for one or more indices.
      operationId: IndicesGetSettings_WithName
      parameters:
      - description: Comma-separated list of settings.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of settings.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether to return all default setting for each of the indices.
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          default: false
          description: Whether to return all default setting for each of the indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetSettings_WithName 200 response
      x-operation-group: indices.get_settings
      x-version-added: "1.0"
  /_shard_stores:
    get:
      description: Provides store information for shard copies of indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesShardStores
      parameters:
      - description: Comma-separated list of statuses used to filter on shards to
          get store information for.
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: Comma-separated list of statuses used to filter on shards to
            get store information for.
          items:
            $ref: '#/components/schemas/Status_Member'
          type: array
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesShardStores 200 response
      x-operation-group: indices.shard_stores
      x-version-added: "1.0"
  /_snapshot:
    get:
      description: Returns information about a repository.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/snapshots/get-snapshot-repository/
      operationId: SnapshotGetRepository
      parameters:
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: SnapshotGetRepository 200 response
      x-operation-group: snapshot.get_repository
      x-version-added: "1.0"
  /_snapshot/_status:
    get:
      description: Returns information about the status of a snapshot.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/snapshots/get-snapshot-status/
      operationId: SnapshotStatus
      parameters:
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Whether to ignore unavailable snapshots, defaults to false which\
          \ means a SnapshotMissingException is thrown."
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: "Whether to ignore unavailable snapshots, defaults to false\
            \ which means a SnapshotMissingException is thrown."
          type: boolean
        style: form
      responses:
        "200":
          description: SnapshotStatus 200 response
      x-operation-group: snapshot.status
      x-version-added: "1.0"
  /_snapshot/{repository}:
    delete:
      description: Deletes a repository.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/snapshots/delete-snapshot-repository/
      operationId: SnapshotDeleteRepository
      parameters:
      - description: Name of the snapshot repository to unregister. Wildcard (`*`)
          patterns are supported.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Name of the snapshot repository to unregister. Wildcard (`*`)
            patterns are supported.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: SnapshotDeleteRepository 200 response
      x-operation-group: snapshot.delete_repository
      x-version-added: "1.0"
    get:
      description: Returns information about a repository.
      operationId: SnapshotGetRepository_WithRepository
      parameters:
      - description: Comma-separated list of repository names.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Comma-separated list of repository names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: SnapshotGetRepository_WithRepository 200 response
      x-operation-group: snapshot.get_repository
      x-version-added: "1.0"
    post:
      description: Creates a repository.
      operationId: SnapshotCreateRepository_Post
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to verify the repository after creation.
        explode: true
        in: query
        name: verify
        required: false
        schema:
          description: Whether to verify the repository after creation.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotCreateRepository_BodyParams'
        required: true
      responses:
        "200":
          description: SnapshotCreateRepository_Post 200 response
      x-operation-group: snapshot.create_repository
      x-version-added: "1.0"
    put:
      description: Creates a repository.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/snapshots/create-repository/
      operationId: SnapshotCreateRepository_Put
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to verify the repository after creation.
        explode: true
        in: query
        name: verify
        required: false
        schema:
          description: Whether to verify the repository after creation.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotCreateRepository_BodyParams'
        required: true
      responses:
        "200":
          description: SnapshotCreateRepository_Put 200 response
      x-operation-group: snapshot.create_repository
      x-version-added: "1.0"
  /_snapshot/{repository}/_cleanup:
    post:
      description: Removes stale data from repository.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: SnapshotCleanupRepository
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: SnapshotCleanupRepository 200 response
      x-operation-group: snapshot.cleanup_repository
      x-version-added: "1.0"
  /_snapshot/{repository}/_status:
    get:
      description: Returns information about the status of a snapshot.
      operationId: SnapshotStatus_WithRepository
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Whether to ignore unavailable snapshots, defaults to false which\
          \ means a SnapshotMissingException is thrown."
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: "Whether to ignore unavailable snapshots, defaults to false\
            \ which means a SnapshotMissingException is thrown."
          type: boolean
        style: form
      responses:
        "200":
          description: SnapshotStatus_WithRepository 200 response
      x-operation-group: snapshot.status
      x-version-added: "1.0"
  /_snapshot/{repository}/_verify:
    post:
      description: Verifies a repository.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/snapshots/verify-snapshot-repository/
      operationId: SnapshotVerifyRepository
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: SnapshotVerifyRepository 200 response
      x-operation-group: snapshot.verify_repository
      x-version-added: "1.0"
  /_snapshot/{repository}/{snapshot}:
    delete:
      description: Deletes a snapshot.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/snapshots/delete-snapshot/
      operationId: SnapshotDelete
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Snapshot name.
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          description: Snapshot name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: SnapshotDelete 200 response
      x-operation-group: snapshot.delete
      x-version-added: "1.0"
    get:
      description: Returns information about a snapshot.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: SnapshotGet
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Comma-separated list of snapshot names.
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          description: Comma-separated list of snapshot names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Whether to ignore unavailable snapshots, defaults to false which\
          \ means a SnapshotMissingException is thrown."
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: "Whether to ignore unavailable snapshots, defaults to false\
            \ which means a SnapshotMissingException is thrown."
          type: boolean
        style: form
      - description: Whether to show verbose snapshot info or only show the basic
          info found in the repository index blob.
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          description: Whether to show verbose snapshot info or only show the basic
            info found in the repository index blob.
          type: boolean
        style: form
      responses:
        "200":
          description: SnapshotGet 200 response
      x-operation-group: snapshot.get
      x-version-added: "1.0"
    post:
      description: Creates a snapshot in a repository.
      operationId: SnapshotCreate_Post
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Snapshot name.
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          description: Snapshot name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotCreate_BodyParams'
      responses:
        "200":
          description: SnapshotCreate_Post 200 response
      x-operation-group: snapshot.create
      x-version-added: "1.0"
    put:
      description: Creates a snapshot in a repository.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/snapshots/create-snapshot/
      operationId: SnapshotCreate_Put
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Snapshot name.
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          description: Snapshot name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotCreate_BodyParams'
      responses:
        "200":
          description: SnapshotCreate_Put 200 response
      x-operation-group: snapshot.create
      x-version-added: "1.0"
  /_snapshot/{repository}/{snapshot}/_clone/{target_snapshot}:
    put:
      description: Clones indices from one snapshot into another snapshot in the same
        repository.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: SnapshotClone
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Snapshot name.
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          description: Snapshot name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the cloned snapshot to create.
        explode: false
        in: path
        name: target_snapshot
        required: true
        schema:
          description: The name of the cloned snapshot to create.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotClone_BodyParams'
        required: true
      responses:
        "200":
          description: SnapshotClone 200 response
      x-operation-group: snapshot.clone
      x-version-added: "1.0"
  /_snapshot/{repository}/{snapshot}/_restore:
    post:
      description: Restores a snapshot.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/snapshots/restore-snapshot/
      operationId: SnapshotRestore
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Snapshot name.
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          description: Snapshot name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotRestore_BodyParams'
      responses:
        "200":
          description: SnapshotRestore 200 response
      x-operation-group: snapshot.restore
      x-version-added: "1.0"
  /_snapshot/{repository}/{snapshot}/_status:
    get:
      description: Returns information about the status of a snapshot.
      operationId: SnapshotStatus_WithRepositorySnapshot
      parameters:
      - description: Repository name.
        explode: false
        in: path
        name: repository
        required: true
        schema:
          description: Repository name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Comma-separated list of snapshot names.
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          description: Comma-separated list of snapshot names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Whether to ignore unavailable snapshots, defaults to false which\
          \ means a SnapshotMissingException is thrown."
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: "Whether to ignore unavailable snapshots, defaults to false\
            \ which means a SnapshotMissingException is thrown."
          type: boolean
        style: form
      responses:
        "200":
          description: SnapshotStatus_WithRepositorySnapshot 200 response
      x-operation-group: snapshot.status
      x-version-added: "1.0"
  /_stats:
    get:
      description: Provides statistics on operations happening in an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesStats
      parameters:
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return stats aggregated at cluster, index or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/IndiciesStatLevel'
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      - description: If set to true segment stats will include stats for segments
          that are not currently loaded into memory.
        explode: true
        in: query
        name: include_unloaded_segments
        required: false
        schema:
          default: false
          description: If set to true segment stats will include stats for segments
            that are not currently loaded into memory.
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: If set to false stats will also collected from closed indices
          if explicitly specified or if expand_wildcards expands to closed indices.
        explode: true
        in: query
        name: forbid_closed_indices
        required: false
        schema:
          default: true
          description: If set to false stats will also collected from closed indices
            if explicitly specified or if expand_wildcards expands to closed indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesStats 200 response
      x-operation-group: indices.stats
      x-version-added: "1.0"
  /_stats/{metric}:
    get:
      description: Provides statistics on operations happening in an index.
      operationId: IndicesStats_WithMetric
      parameters:
      - description: Limit the information returned the specific metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned the specific metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - store
          - indexing
          - get
          - search
          - merge
          - flush
          - refresh
          - query_cache
          - fielddata
          - docs
          - warmer
          - completion
          - segments
          - translog
          - suggest
          - request_cache
          - recovery
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return stats aggregated at cluster, index or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/IndiciesStatLevel'
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      - description: If set to true segment stats will include stats for segments
          that are not currently loaded into memory.
        explode: true
        in: query
        name: include_unloaded_segments
        required: false
        schema:
          default: false
          description: If set to true segment stats will include stats for segments
            that are not currently loaded into memory.
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: If set to false stats will also collected from closed indices
          if explicitly specified or if expand_wildcards expands to closed indices.
        explode: true
        in: query
        name: forbid_closed_indices
        required: false
        schema:
          default: true
          description: If set to false stats will also collected from closed indices
            if explicitly specified or if expand_wildcards expands to closed indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesStats_WithMetric 200 response
      x-operation-group: indices.stats
      x-version-added: "1.0"
  /_tasks:
    get:
      description: Returns a list of tasks.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/tasks/
      operationId: TasksList
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: true
        in: query
        name: nodes
        required: false
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of actions that should be returned. Leave
          empty to return all.
        explode: true
        in: query
        name: actions
        required: false
        schema:
          description: Comma-separated list of actions that should be returned. Leave
            empty to return all.
          items:
            type: string
          type: array
        style: form
      - description: Return detailed task information.
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          description: Return detailed task information.
          type: boolean
        style: form
      - description: Return tasks with specified parent task id (node_id:task_number).
          Set to -1 to return all.
        explode: true
        in: query
        name: parent_task_id
        required: false
        schema:
          description: Return tasks with specified parent task id (node_id:task_number).
            Set to -1 to return all.
          type: string
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      - description: Group tasks by nodes or parent/child relationships.
        explode: true
        in: query
        name: group_by
        required: false
        schema:
          $ref: '#/components/schemas/GroupBy'
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: TasksList 200 response
      x-operation-group: tasks.list
      x-version-added: "1.0"
  /_tasks/_cancel:
    post:
      description: "Cancels a task, if it can be cancelled through an API."
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/tasks/#task-canceling
      operationId: TasksCancel
      parameters:
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: true
        in: query
        name: nodes
        required: false
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of actions that should be cancelled. Leave
          empty to cancel all.
        explode: true
        in: query
        name: actions
        required: false
        schema:
          description: Comma-separated list of actions that should be cancelled. Leave
            empty to cancel all.
          items:
            type: string
          type: array
        style: form
      - description: Cancel tasks with specified parent task id (node_id:task_number).
          Set to -1 to cancel all.
        explode: true
        in: query
        name: parent_task_id
        required: false
        schema:
          description: Cancel tasks with specified parent task id (node_id:task_number).
            Set to -1 to cancel all.
          type: string
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      responses:
        "200":
          description: TasksCancel 200 response
      x-operation-group: tasks.cancel
      x-version-added: "1.0"
  /_tasks/{task_id}:
    get:
      description: Returns information about a task.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/tasks/
      operationId: TasksGet
      parameters:
      - description: Return the task with specified id (node_id:task_number).
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          description: Return the task with specified id (node_id:task_number).
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      responses:
        "200":
          description: TasksGet 200 response
      x-operation-group: tasks.get
      x-version-added: "1.0"
  /_tasks/{task_id}/_cancel:
    post:
      description: "Cancels a task, if it can be cancelled through an API."
      operationId: TasksCancel_WithTaskId
      parameters:
      - description: Cancel the task with specified task id (node_id:task_number).
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          description: Cancel the task with specified task id (node_id:task_number).
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Comma-separated list of node IDs or names to limit the returned\
          \ information; use `_local` to return information from the node you're connecting\
          \ to, leave empty to get information from all nodes."
        explode: true
        in: query
        name: nodes
        required: false
        schema:
          description: "Comma-separated list of node IDs or names to limit the returned\
            \ information; use `_local` to return information from the node you're\
            \ connecting to, leave empty to get information from all nodes."
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of actions that should be cancelled. Leave
          empty to cancel all.
        explode: true
        in: query
        name: actions
        required: false
        schema:
          description: Comma-separated list of actions that should be cancelled. Leave
            empty to cancel all.
          items:
            type: string
          type: array
        style: form
      - description: Cancel tasks with specified parent task id (node_id:task_number).
          Set to -1 to cancel all.
        explode: true
        in: query
        name: parent_task_id
        required: false
        schema:
          description: Cancel tasks with specified parent task id (node_id:task_number).
            Set to -1 to cancel all.
          type: string
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      responses:
        "200":
          description: TasksCancel_WithTaskId 200 response
      x-operation-group: tasks.cancel
      x-version-added: "1.0"
  /_template:
    get:
      description: Returns an index template.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesGetTemplate
      parameters:
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetTemplate 200 response
      x-operation-group: indices.get_template
      x-version-added: "1.0"
  /_template/{name}:
    delete:
      description: Deletes an index template.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesDeleteTemplate
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: IndicesDeleteTemplate 200 response
      x-operation-group: indices.delete_template
      x-version-added: "1.0"
    get:
      description: Returns an index template.
      operationId: IndicesGetTemplate_WithName
      parameters:
      - description: Comma-separated names of the index templates.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated names of the index templates.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetTemplate_WithName 200 response
      x-operation-group: indices.get_template
      x-version-added: "1.0"
    head:
      description: Returns information about whether a particular index template exists.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesExistsTemplate
      parameters:
      - description: Comma-separated names of the index templates.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated names of the index templates.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesExistsTemplate 200 response
      x-operation-group: indices.exists_template
      x-version-added: "1.0"
    post:
      description: Creates or updates an index template.
      operationId: IndicesPutTemplate_Post
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "The order for this template when merging multiple matching ones\
          \ (higher numbers are merged later, overriding the lower numbers)."
        explode: true
        in: query
        name: order
        required: false
        schema:
          description: "The order for this template when merging multiple matching\
            \ ones (higher numbers are merged later, overriding the lower numbers)."
          format: int32
          type: integer
        style: form
      - description: Whether the index template should only be added if new or can
          also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template should only be added if new or can
            also replace an existing one.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: IndicesPutTemplate_Post 200 response
      x-operation-group: indices.put_template
      x-version-added: "1.0"
    put:
      description: Creates or updates an index template.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-templates/
      operationId: IndicesPutTemplate_Put
      parameters:
      - description: The name of the template.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the template.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "The order for this template when merging multiple matching ones\
          \ (higher numbers are merged later, overriding the lower numbers)."
        explode: true
        in: query
        name: order
        required: false
        schema:
          description: "The order for this template when merging multiple matching\
            \ ones (higher numbers are merged later, overriding the lower numbers)."
          format: int32
          type: integer
        style: form
      - description: Whether the index template should only be added if new or can
          also replace an existing one.
        explode: true
        in: query
        name: create
        required: false
        schema:
          default: false
          description: Whether the index template should only be added if new or can
            also replace an existing one.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: IndicesPutTemplate_Put 200 response
      x-operation-group: indices.put_template
      x-version-added: "1.0"
  /_update_by_query/{task_id}/_rethrottle:
    post:
      description: Changes the number of requests per second for a particular Update
        By Query operation.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: UpdateByQueryRethrottle
      parameters:
      - description: The task id to rethrottle.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          description: The task id to rethrottle.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The throttle for this request in sub-requests per second. -1
          means no throttle.
        explode: true
        in: query
        name: requests_per_second
        required: true
        schema:
          description: The throttle for this request in sub-requests per second. -1
            means no throttle.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: UpdateByQueryRethrottle 200 response
      x-operation-group: update_by_query_rethrottle
      x-version-added: "1.0"
  /_upgrade:
    get:
      description: The _upgrade API is no longer useful and will be removed.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesGetUpgrade
      parameters:
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesGetUpgrade 200 response
      x-operation-group: indices.get_upgrade
      x-version-added: "1.0"
    post:
      description: The _upgrade API is no longer useful and will be removed.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesUpgrade
      parameters:
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      - description: "If true, only ancient (an older Lucene major release) segments\
          \ will be upgraded."
        explode: true
        in: query
        name: only_ancient_segments
        required: false
        schema:
          description: "If true, only ancient (an older Lucene major release) segments\
            \ will be upgraded."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesUpgrade 200 response
      x-operation-group: indices.upgrade
      x-version-added: "1.0"
  /_validate/query:
    get:
      description: Allows a user to validate a potentially expensive query without
        executing it.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesValidateQuery_Get
      parameters:
      - description: Return detailed information about the error.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Return detailed information about the error.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Provide a more detailed explanation showing the actual Lucene
          query that will be executed.
        explode: true
        in: query
        name: rewrite
        required: false
        schema:
          description: Provide a more detailed explanation showing the actual Lucene
            query that will be executed.
          type: boolean
        style: form
      - description: Execute validation on all shards instead of one random shard
          per index.
        explode: true
        in: query
        name: all_shards
        required: false
        schema:
          description: Execute validation on all shards instead of one random shard
            per index.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesValidateQuery_Get 200 response
      x-operation-group: indices.validate_query
      x-version-added: "1.0"
    post:
      description: Allows a user to validate a potentially expensive query without
        executing it.
      operationId: IndicesValidateQuery_Post
      parameters:
      - description: Return detailed information about the error.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Return detailed information about the error.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Provide a more detailed explanation showing the actual Lucene
          query that will be executed.
        explode: true
        in: query
        name: rewrite
        required: false
        schema:
          description: Provide a more detailed explanation showing the actual Lucene
            query that will be executed.
          type: boolean
        style: form
      - description: Execute validation on all shards instead of one random shard
          per index.
        explode: true
        in: query
        name: all_shards
        required: false
        schema:
          description: Execute validation on all shards instead of one random shard
            per index.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesValidateQuery_BodyParams'
      responses:
        "200":
          description: IndicesValidateQuery_Post 200 response
      x-operation-group: indices.validate_query
      x-version-added: "1.0"
  /{alias}/_rollover:
    post:
      description: |-
        Updates an alias to point to a new index when the existing index
        is considered to be too large or too old.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/dashboards/im-dashboards/rollover/
      operationId: IndicesRollover
      parameters:
      - description: The name of the alias to rollover.
        explode: false
        in: path
        name: alias
        required: true
        schema:
          description: The name of the alias to rollover.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: If set to true the rollover action will only be validated but
          not actually performed even if a condition matches.
        explode: true
        in: query
        name: dry_run
        required: false
        schema:
          default: false
          description: If set to true the rollover action will only be validated but
            not actually performed even if a condition matches.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Set the number of active shards to wait for on the newly created
          rollover index before the operation returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for on the newly created
            rollover index before the operation returns.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesRollover_BodyParams'
      responses:
        "200":
          description: IndicesRollover 200 response
      x-operation-group: indices.rollover
      x-version-added: "1.0"
  /{alias}/_rollover/{new_index}:
    post:
      description: |-
        Updates an alias to point to a new index when the existing index
        is considered to be too large or too old.
      operationId: IndicesRollover_WithNewIndex
      parameters:
      - description: The name of the alias to rollover.
        explode: false
        in: path
        name: alias
        required: true
        schema:
          description: The name of the alias to rollover.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the rollover index.
        explode: false
        in: path
        name: new_index
        required: true
        schema:
          description: The name of the rollover index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: If set to true the rollover action will only be validated but
          not actually performed even if a condition matches.
        explode: true
        in: query
        name: dry_run
        required: false
        schema:
          default: false
          description: If set to true the rollover action will only be validated but
            not actually performed even if a condition matches.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Set the number of active shards to wait for on the newly created
          rollover index before the operation returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for on the newly created
            rollover index before the operation returns.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesRollover_BodyParams'
      responses:
        "200":
          description: IndicesRollover_WithNewIndex 200 response
      x-operation-group: indices.rollover
      x-version-added: "1.0"
  /{index}:
    delete:
      description: Deletes an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/delete-index/
      operationId: IndicesDelete
      parameters:
      - description: Comma-separated list of indices to delete; use `_all` or `*`
          string to delete all indices.
        examples:
          IndicesDelete_example1:
            description: ""
            summary: Examples for Delete Index Operation.
            value: books
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to delete; use `_all` or `*`
            string to delete all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          default: false
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                IndicesDelete_example1:
                  description: ""
                  summary: Examples for Delete Index Operation.
                  value:
                    acknowledged: true
              schema:
                $ref: '#/components/schemas/IndicesDeleteResponseContent'
          description: IndicesDelete 200 response
      x-operation-group: indices.delete
      x-version-added: "1.0"
    get:
      description: Returns information about one or more indices.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/get-index/
      operationId: IndicesGet
      parameters:
      - description: Comma-separated list of indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          default: false
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Whether to return all default setting for each of the indices.
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          default: false
          description: Whether to return all default setting for each of the indices.
          type: boolean
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: IndicesGet 200 response
      x-operation-group: indices.get
      x-version-added: "1.0"
    head:
      description: Returns information about whether a particular index exists.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/exists/
      operationId: IndicesExists
      parameters:
      - description: Comma-separated list of indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          default: false
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          default: false
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: Whether to return all default setting for each of the indices.
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          default: false
          description: Whether to return all default setting for each of the indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesExists 200 response
      x-operation-group: indices.exists
      x-version-added: "1.0"
    put:
      description: Creates an index with optional settings and mappings.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/create-index/
      operationId: IndicesCreate
      parameters:
      - description: Index name.
        examples:
          IndicesCreate_example1:
            description: ""
            summary: Examples for Create Index Operation.
            value: books
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Set the number of active shards to wait for before the operation
          returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for before the operation
            returns.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesCreate_BodyParams'
      responses:
        "200":
          content:
            application/json:
              examples:
                IndicesCreate_example1:
                  description: ""
                  summary: Examples for Create Index Operation.
                  value:
                    index: books
                    shards_acknowledged: true
                    acknowledged: true
              schema:
                $ref: '#/components/schemas/IndicesCreateResponseContent'
          description: IndicesCreate 200 response
      x-operation-group: indices.create
      x-version-added: "1.0"
  /{index}/_alias:
    get:
      description: Returns an alias.
      operationId: IndicesGetAlias_WithIndex
      parameters:
      - description: Comma-separated list of indices to filter aliases.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to filter aliases.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetAlias_WithIndex 200 response
      x-operation-group: indices.get_alias
      x-version-added: "1.0"
  /{index}/_alias/{name}:
    delete:
      description: Deletes an alias.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-alias/#delete-aliases
      operationId: IndicesDeleteAlias
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of aliases to delete (supports wildcards);
          use `_all` to delete all aliases for the specified indices.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of aliases to delete (supports wildcards);
            use `_all` to delete all aliases for the specified indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: IndicesDeleteAlias 200 response
      x-operation-group: indices.delete_alias
      x-version-added: "1.0"
    get:
      description: Returns an alias.
      operationId: IndicesGetAlias_WithIndexName
      parameters:
      - description: Comma-separated list of indices to filter aliases.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to filter aliases.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of alias names.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of alias names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetAlias_WithIndexName 200 response
      x-operation-group: indices.get_alias
      x-version-added: "1.0"
    head:
      description: Returns information about whether a particular alias exists.
      operationId: IndicesExistsAlias_WithIndex
      parameters:
      - description: Comma-separated list of indices to filter aliases.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to filter aliases.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of alias names.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of alias names.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesExistsAlias_WithIndex 200 response
      x-operation-group: indices.exists_alias
      x-version-added: "1.0"
    post:
      description: Creates or updates an alias.
      operationId: IndicesPutAlias_Post
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The name of the alias to be created or updated.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the alias to be created or updated.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutAlias_BodyParams'
      responses:
        "200":
          description: IndicesPutAlias_Post 200 response
      x-operation-group: indices.put_alias
      x-version-added: "1.0"
    put:
      description: Creates or updates an alias.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/im-plugin/index-alias/#create-aliases
      operationId: IndicesPutAlias_Put
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The name of the alias to be created or updated.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the alias to be created or updated.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutAlias_BodyParams'
      responses:
        "200":
          description: IndicesPutAlias_Put 200 response
      x-operation-group: indices.put_alias
      x-version-added: "1.0"
  /{index}/_aliases/{name}:
    delete:
      description: Deletes an alias.
      operationId: IndicesDeleteAlias_Plural
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of aliases to delete (supports wildcards);
          use `_all` to delete all aliases for the specified indices.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of aliases to delete (supports wildcards);
            use `_all` to delete all aliases for the specified indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      responses:
        "200":
          description: IndicesDeleteAlias_Plural 200 response
      x-operation-group: indices.delete_alias
      x-version-added: "1.0"
    post:
      description: Creates or updates an alias.
      operationId: IndicesPutAlias_Post_Plural
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The name of the alias to be created or updated.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the alias to be created or updated.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutAlias_BodyParams'
      responses:
        "200":
          description: IndicesPutAlias_Post_Plural 200 response
      x-operation-group: indices.put_alias
      x-version-added: "1.0"
    put:
      description: Creates or updates an alias.
      operationId: IndicesPutAlias_Put_Plural
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The name of the alias to be created or updated.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The name of the alias to be created or updated.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutAlias_BodyParams'
      responses:
        "200":
          description: IndicesPutAlias_Put_Plural 200 response
      x-operation-group: indices.put_alias
      x-version-added: "1.0"
  /{index}/_analyze:
    get:
      description: Performs the analysis process on a text and return the tokens breakdown
        of the text.
      operationId: IndicesAnalyze_Get_WithIndex
      parameters:
      - description: The name of the index to scope the operation.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The name of the index to scope the operation.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the index to scope the operation.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: The name of the index to scope the operation.
          type: string
        style: form
      responses:
        "200":
          description: IndicesAnalyze_Get_WithIndex 200 response
      x-operation-group: indices.analyze
      x-version-added: "1.0"
    post:
      description: Performs the analysis process on a text and return the tokens breakdown
        of the text.
      operationId: IndicesAnalyze_Post_WithIndex
      parameters:
      - description: The name of the index to scope the operation.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The name of the index to scope the operation.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the index to scope the operation.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: The name of the index to scope the operation.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesAnalyze_BodyParams'
      responses:
        "200":
          description: IndicesAnalyze_Post_WithIndex 200 response
      x-operation-group: indices.analyze
      x-version-added: "1.0"
  /{index}/_block/{block}:
    put:
      description: Adds a block to an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: IndicesAddBlock
      parameters:
      - description: Comma-separated list of indices to add a block to.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to add a block to.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: "The block to add (one of read, write, read_only or metadata)."
        explode: false
        in: path
        name: block
        required: true
        schema:
          description: "The block to add (one of read, write, read_only or metadata)."
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesAddBlock 200 response
      x-operation-group: indices.add_block
      x-version-added: "1.0"
  /{index}/_bulk:
    post:
      description: Allows to perform multiple index/update/delete operations in a
        single request.
      operationId: Bulk_Post_WithIndex
      parameters:
      - description: Default index for items which don't provide one.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Default index for items which don't provide one.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Default document type for items which don't provide one.
        explode: true
        in: query
        name: type
        required: false
        schema:
          description: Default document type for items which don't provide one.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or default\
          \ list of fields to return, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or default\
            \ list of fields to return, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: "Default list of fields to exclude from the returned _source\
          \ field, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: "Default list of fields to exclude from the returned _source\
            \ field, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: "Default list of fields to extract and return from the _source\
          \ field, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: "Default list of fields to extract and return from the _source\
            \ field, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      - description: Sets require_alias for all incoming documents.
        explode: true
        in: query
        name: require_alias
        required: false
        schema:
          default: false
          description: Sets require_alias for all incoming documents.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bulk_BodyParams'
        required: true
      responses:
        "200":
          description: Bulk_Post_WithIndex 200 response
      x-operation-group: bulk
      x-version-added: "1.0"
    put:
      description: Allows to perform multiple index/update/delete operations in a
        single request.
      operationId: Bulk_Put_WithIndex
      parameters:
      - description: Default index for items which don't provide one.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Default index for items which don't provide one.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Default document type for items which don't provide one.
        explode: true
        in: query
        name: type
        required: false
        schema:
          description: Default document type for items which don't provide one.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or default\
          \ list of fields to return, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or default\
            \ list of fields to return, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: "Default list of fields to exclude from the returned _source\
          \ field, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: "Default list of fields to exclude from the returned _source\
            \ field, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: "Default list of fields to extract and return from the _source\
          \ field, can be overridden on each sub-request."
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: "Default list of fields to extract and return from the _source\
            \ field, can be overridden on each sub-request."
          items:
            type: string
          type: array
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      - description: Sets require_alias for all incoming documents.
        explode: true
        in: query
        name: require_alias
        required: false
        schema:
          default: false
          description: Sets require_alias for all incoming documents.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bulk_BodyParams'
        required: true
      responses:
        "200":
          description: Bulk_Put_WithIndex 200 response
      x-operation-group: bulk
      x-version-added: "1.0"
  /{index}/_cache/clear:
    post:
      description: Clears all or specific caches for one or more indices.
      operationId: IndicesClearCache_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Clear field data.
        explode: true
        in: query
        name: fielddata
        required: false
        schema:
          description: Clear field data.
          type: boolean
        style: form
      - description: "Comma-separated list of fields to clear when using the `fielddata`\
          \ parameter (default: all)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: "Comma-separated list of fields to clear when using the `fielddata`\
            \ parameter (default: all)."
          items:
            type: string
          type: array
        style: form
      - description: Clear query caches.
        explode: true
        in: query
        name: query
        required: false
        schema:
          description: Clear query caches.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: true
        in: query
        name: index
        required: false
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          items:
            type: string
          type: array
        style: form
      - description: Clear request cache.
        explode: true
        in: query
        name: request
        required: false
        schema:
          description: Clear request cache.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesClearCache_WithIndex 200 response
      x-operation-group: indices.clear_cache
      x-version-added: "1.0"
  /{index}/_clone/{target}:
    post:
      description: Clones an index.
      operationId: IndicesClone_Post
      parameters:
      - description: The name of the source index to clone.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The name of the source index to clone.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the target index.
        explode: false
        in: path
        name: target
        required: true
        schema:
          description: The name of the target index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Set the number of active shards to wait for on the cloned index
          before the operation returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for on the cloned index
            before the operation returns.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesClone_BodyParams'
      responses:
        "200":
          description: IndicesClone_Post 200 response
      x-operation-group: indices.clone
      x-version-added: "1.0"
    put:
      description: Clones an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/clone/
      operationId: IndicesClone_Put
      parameters:
      - description: The name of the source index to clone.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The name of the source index to clone.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the target index.
        explode: false
        in: path
        name: target
        required: true
        schema:
          description: The name of the target index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Set the number of active shards to wait for on the cloned index
          before the operation returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for on the cloned index
            before the operation returns.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesClone_BodyParams'
      responses:
        "200":
          description: IndicesClone_Put 200 response
      x-operation-group: indices.clone
      x-version-added: "1.0"
  /{index}/_close:
    post:
      description: Closes an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/close-index/
      operationId: IndicesClose
      parameters:
      - description: Comma-separated list of indices to close.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to close.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Sets the number of active shards to wait for before the operation
          returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Sets the number of active shards to wait for before the operation
            returns.
          type: string
        style: form
      responses:
        "200":
          description: IndicesClose 200 response
      x-operation-group: indices.close
      x-version-added: "1.0"
  /{index}/_count:
    get:
      description: Returns number of documents matching a query.
      operationId: Count_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices to restrict the results.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to restrict the results.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Include only documents with a specific `_score` value in the
          result.
        explode: true
        in: query
        name: min_score
        required: false
        schema:
          description: Include only documents with a specific `_score` value in the
            result.
          format: int32
          type: integer
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: Count_Get_WithIndex 200 response
      x-operation-group: count
      x-version-added: "1.0"
    post:
      description: Returns number of documents matching a query.
      operationId: Count_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices to restrict the results.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to restrict the results.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Include only documents with a specific `_score` value in the
          result.
        explode: true
        in: query
        name: min_score
        required: false
        schema:
          description: Include only documents with a specific `_score` value in the
            result.
          format: int32
          type: integer
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Count_BodyParams'
      responses:
        "200":
          description: Count_Post_WithIndex 200 response
      x-operation-group: count
      x-version-added: "1.0"
  /{index}/_create/{id}:
    post:
      description: |-
        Creates a new document in the index.

        Returns a 409 response when a document with a same ID already exists in the index.
      operationId: Create_Post
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_BodyParams'
        required: true
      responses:
        "200":
          description: Create_Post 200 response
      x-operation-group: create
      x-version-added: "1.0"
    put:
      description: |-
        Creates a new document in the index.

        Returns a 409 response when a document with a same ID already exists in the index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/index-document/
      operationId: Create_Put
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_BodyParams'
        required: true
      responses:
        "200":
          description: Create_Put 200 response
      x-operation-group: create
      x-version-added: "1.0"
  /{index}/_delete_by_query:
    post:
      description: Deletes documents matching the provided query.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/delete-by-query/
      operationId: DeleteByQuery
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Starting offset.
        explode: true
        in: query
        name: from
        required: false
        schema:
          default: 0
          description: Starting offset.
          format: int32
          type: integer
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: What to do when the operation encounters version conflicts?.
        explode: true
        in: query
        name: conflicts
        required: false
        schema:
          $ref: '#/components/schemas/Conflicts'
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      - description: Explicit timeout for each search request. Defaults to no timeout.
        explode: true
        in: query
        name: search_timeout
        required: false
        schema:
          description: Explicit timeout for each search request. Defaults to no timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: "Deprecated, please use `max_docs` instead."
        explode: true
        in: query
        name: size
        required: false
        schema:
          description: "Deprecated, please use `max_docs` instead."
          format: int32
          type: integer
        style: form
      - description: "Maximum number of documents to process (default: all documents)."
        explode: true
        in: query
        name: max_docs
        required: false
        schema:
          description: "Maximum number of documents to process (default: all documents)."
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of <field>:<direction> pairs.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: Comma-separated list of <field>:<direction> pairs.
          items:
            type: string
          type: array
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      - description: Specific 'tag' of the request for logging and statistical purposes.
        explode: true
        in: query
        name: stats
        required: false
        schema:
          description: Specific 'tag' of the request for logging and statistical purposes.
          items:
            type: string
          type: array
        style: form
      - description: Whether to return document version as part of a hit.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Whether to return document version as part of a hit.
          type: boolean
        style: form
      - description: "Specify if request cache should be used for this request or\
          \ not, defaults to index level setting."
        explode: true
        in: query
        name: request_cache
        required: false
        schema:
          description: "Specify if request cache should be used for this request or\
            \ not, defaults to index level setting."
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Time each individual bulk request should wait for shards that
          are unavailable.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 1m
          description: Time each individual bulk request should wait for shards that
            are unavailable.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: Size on the scroll request powering the operation.
        explode: true
        in: query
        name: scroll_size
        required: false
        schema:
          default: 100
          description: Size on the scroll request powering the operation.
          format: int32
          type: integer
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: true
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      - description: The throttle for this request in sub-requests per second. -1
          means no throttle.
        explode: true
        in: query
        name: requests_per_second
        required: false
        schema:
          default: 0
          description: The throttle for this request in sub-requests per second. -1
            means no throttle.
          format: int32
          type: integer
        style: form
      - description: "The number of slices this task should be divided into. Defaults\
          \ to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
        explode: true
        in: query
        name: slices
        required: false
        schema:
          default: "1"
          description: "The number of slices this task should be divided into. Defaults\
            \ to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteByQuery_BodyParams'
        required: true
      responses:
        "200":
          description: DeleteByQuery 200 response
      x-operation-group: delete_by_query
      x-version-added: "1.0"
  /{index}/_doc:
    post:
      description: Creates or updates a document in an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/index-document/
      operationId: Index_Post
      parameters:
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "Explicit operation type. Defaults to `index` for requests with\
          \ an explicit document ID, and to `create`for requests without an explicit\
          \ document ID."
        explode: true
        in: query
        name: op_type
        required: false
        schema:
          $ref: '#/components/schemas/OpType'
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified sequence number.
        explode: true
        in: query
        name: if_seq_no
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified sequence number.
          format: int32
          type: integer
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified primary term.
        explode: true
        in: query
        name: if_primary_term
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified primary term.
          format: int32
          type: integer
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      - description: "When true, requires destination to be an alias."
        explode: true
        in: query
        name: require_alias
        required: false
        schema:
          default: false
          description: "When true, requires destination to be an alias."
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Index_BodyParams'
        required: true
      responses:
        "200":
          description: Index_Post 200 response
      x-operation-group: index
      x-version-added: "1.0"
  /{index}/_doc/{id}:
    delete:
      description: Removes a document from the index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/delete-document/
      operationId: Delete
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified sequence number.
        explode: true
        in: query
        name: if_seq_no
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified sequence number.
          format: int32
          type: integer
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified primary term.
        explode: true
        in: query
        name: if_primary_term
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified primary term.
          format: int32
          type: integer
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          description: Delete 200 response
      x-operation-group: delete
      x-version-added: "1.0"
    get:
      description: Returns a document.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/get-documents/
      operationId: Get
      parameters:
      - description: Document ID.
        examples:
          Get_example1:
            description: ""
            summary: Examples for Get document doc Operation.
            value: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        examples:
          Get_example1:
            description: ""
            summary: Examples for Get document doc Operation.
            value: books
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Specify whether to perform the operation in realtime or search
          mode.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          description: Specify whether to perform the operation in realtime or search
            mode.
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Get_example1:
                  description: ""
                  summary: Examples for Get document doc Operation.
                  value:
                    _index: books
                    _id: "1"
                    found: true
              schema:
                $ref: '#/components/schemas/GetResponseContent'
          description: Get 200 response
      x-operation-group: get
      x-version-added: "1.0"
    head:
      description: Returns information about whether a document exists in an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/get-documents/
      operationId: Exists
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Specify whether to perform the operation in realtime or search
          mode.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          description: Specify whether to perform the operation in realtime or search
            mode.
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          description: Exists 200 response
      x-operation-group: exists
      x-version-added: "1.0"
    post:
      description: Creates or updates a document in an index.
      operationId: Index_Post_WithId
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "Explicit operation type. Defaults to `index` for requests with\
          \ an explicit document ID, and to `create`for requests without an explicit\
          \ document ID."
        explode: true
        in: query
        name: op_type
        required: false
        schema:
          $ref: '#/components/schemas/OpType'
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified sequence number.
        explode: true
        in: query
        name: if_seq_no
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified sequence number.
          format: int32
          type: integer
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified primary term.
        explode: true
        in: query
        name: if_primary_term
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified primary term.
          format: int32
          type: integer
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      - description: "When true, requires destination to be an alias."
        explode: true
        in: query
        name: require_alias
        required: false
        schema:
          default: false
          description: "When true, requires destination to be an alias."
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Index_BodyParams'
        required: true
      responses:
        "200":
          description: Index_Post_WithId 200 response
      x-operation-group: index
      x-version-added: "1.0"
    put:
      description: Creates or updates a document in an index.
      operationId: Index_Put_WithId
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "Explicit operation type. Defaults to `index` for requests with\
          \ an explicit document ID, and to `create`for requests without an explicit\
          \ document ID."
        explode: true
        in: query
        name: op_type
        required: false
        schema:
          $ref: '#/components/schemas/OpType'
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified sequence number.
        explode: true
        in: query
        name: if_seq_no
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified sequence number.
          format: int32
          type: integer
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified primary term.
        explode: true
        in: query
        name: if_primary_term
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified primary term.
          format: int32
          type: integer
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      - description: "When true, requires destination to be an alias."
        explode: true
        in: query
        name: require_alias
        required: false
        schema:
          default: false
          description: "When true, requires destination to be an alias."
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Index_BodyParams'
        required: true
      responses:
        "200":
          description: Index_Put_WithId 200 response
      x-operation-group: index
      x-version-added: "1.0"
  /{index}/_explain/{id}:
    get:
      description: Returns information about why a specific matches (or doesn't match)
        a query.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/explain/
      operationId: Explain_Get
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specify whether wildcards and prefix queries in the query string
          query should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcards and prefix queries in the query string
            query should be analyzed.
          type: boolean
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The default field for query string query.
        explode: true
        in: query
        name: df
        required: false
        schema:
          default: _all
          description: The default field for query string query.
          type: string
        style: form
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          description: Explain_Get 200 response
      x-operation-group: explain
      x-version-added: "1.0"
    post:
      description: Returns information about why a specific matches (or doesn't match)
        a query.
      operationId: Explain_Post
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specify whether wildcards and prefix queries in the query string
          query should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcards and prefix queries in the query string
            query should be analyzed.
          type: boolean
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The default field for query string query.
        explode: true
        in: query
        name: df
        required: false
        schema:
          default: _all
          description: The default field for query string query.
          type: string
        style: form
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Explain_BodyParams'
      responses:
        "200":
          description: Explain_Post 200 response
      x-operation-group: explain
      x-version-added: "1.0"
  /{index}/_field_caps:
    get:
      description: Returns the information about the capabilities of fields among
        multiple indices.
      operationId: FieldCaps_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of field names.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of field names.
          items:
            type: string
          type: array
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Indicates whether unmapped fields should be included in the response.
        explode: true
        in: query
        name: include_unmapped
        required: false
        schema:
          default: false
          description: Indicates whether unmapped fields should be included in the
            response.
          type: boolean
        style: form
      responses:
        "200":
          description: FieldCaps_Get_WithIndex 200 response
      x-operation-group: field_caps
      x-version-added: "1.0"
    post:
      description: Returns the information about the capabilities of fields among
        multiple indices.
      operationId: FieldCaps_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of field names.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of field names.
          items:
            type: string
          type: array
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Indicates whether unmapped fields should be included in the response.
        explode: true
        in: query
        name: include_unmapped
        required: false
        schema:
          default: false
          description: Indicates whether unmapped fields should be included in the
            response.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldCaps_BodyParams'
      responses:
        "200":
          description: FieldCaps_Post_WithIndex 200 response
      x-operation-group: field_caps
      x-version-added: "1.0"
  /{index}/_flush:
    get:
      description: Performs the flush operation on one or more indices.
      operationId: IndicesFlush_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether a flush should be forced even if it is not necessarily
          needed ie. if no changes will be committed to the index. This is useful
          if transaction log IDs should be incremented even if no uncommitted changes
          are present. (This setting can be considered as internal).
        explode: true
        in: query
        name: force
        required: false
        schema:
          description: Whether a flush should be forced even if it is not necessarily
            needed ie. if no changes will be committed to the index. This is useful
            if transaction log IDs should be incremented even if no uncommitted changes
            are present. (This setting can be considered as internal).
          type: boolean
        style: form
      - description: If set to true the flush operation will block until the flush
          can be executed if another flush operation is already executing. If set
          to false the flush will be skipped iff if another flush operation is already
          running.
        explode: true
        in: query
        name: wait_if_ongoing
        required: false
        schema:
          default: true
          description: If set to true the flush operation will block until the flush
            can be executed if another flush operation is already executing. If set
            to false the flush will be skipped iff if another flush operation is already
            running.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesFlush_Get_WithIndex 200 response
      x-operation-group: indices.flush
      x-version-added: "1.0"
    post:
      description: Performs the flush operation on one or more indices.
      operationId: IndicesFlush_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether a flush should be forced even if it is not necessarily
          needed ie. if no changes will be committed to the index. This is useful
          if transaction log IDs should be incremented even if no uncommitted changes
          are present. (This setting can be considered as internal).
        explode: true
        in: query
        name: force
        required: false
        schema:
          description: Whether a flush should be forced even if it is not necessarily
            needed ie. if no changes will be committed to the index. This is useful
            if transaction log IDs should be incremented even if no uncommitted changes
            are present. (This setting can be considered as internal).
          type: boolean
        style: form
      - description: If set to true the flush operation will block until the flush
          can be executed if another flush operation is already executing. If set
          to false the flush will be skipped iff if another flush operation is already
          running.
        explode: true
        in: query
        name: wait_if_ongoing
        required: false
        schema:
          default: true
          description: If set to true the flush operation will block until the flush
            can be executed if another flush operation is already executing. If set
            to false the flush will be skipped iff if another flush operation is already
            running.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesFlush_Post_WithIndex 200 response
      x-operation-group: indices.flush
      x-version-added: "1.0"
  /{index}/_forcemerge:
    post:
      description: Performs the force merge operation on one or more indices.
      operationId: IndicesForcemerge_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Specify whether the index should be flushed after performing
          the operation.
        explode: true
        in: query
        name: flush
        required: false
        schema:
          default: true
          description: Specify whether the index should be flushed after performing
            the operation.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "The number of segments the index should be merged into (default:\
          \ dynamic)."
        explode: true
        in: query
        name: max_num_segments
        required: false
        schema:
          description: "The number of segments the index should be merged into (default:\
            \ dynamic)."
          format: int32
          type: integer
        style: form
      - description: Specify whether the operation should only expunge deleted documents.
        explode: true
        in: query
        name: only_expunge_deletes
        required: false
        schema:
          description: Specify whether the operation should only expunge deleted documents.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesForcemerge_WithIndex 200 response
      x-operation-group: indices.forcemerge
      x-version-added: "1.0"
  /{index}/_mapping:
    get:
      description: Returns mappings for one or more indices.
      operationId: IndicesGetMapping_WithIndex
      parameters:
      - description: Comma-separated list of indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          deprecated: true
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
          x-version-deprecated: "1.0"
          x-deprecation-message: This parameter is a no-op and field mappings are
            always retrieved locally.
        style: form
      responses:
        "200":
          description: IndicesGetMapping_WithIndex 200 response
      x-operation-group: indices.get_mapping
      x-version-added: "1.0"
    post:
      description: Updates the index mappings.
      operationId: IndicesPutMapping_Post
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "When true, applies mappings only to the write index of an alias\
          \ or data stream."
        explode: true
        in: query
        name: write_index_only
        required: false
        schema:
          default: false
          description: "When true, applies mappings only to the write index of an\
            \ alias or data stream."
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutMapping_BodyParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicesPutMapping_PostResponseContent'
          description: IndicesPutMapping_Post 200 response
      x-operation-group: indices.put_mapping
      x-version-added: "1.0"
    put:
      description: Updates the index mappings.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/put-mapping/
      operationId: IndicesPutMapping_Put
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "When true, applies mappings only to the write index of an alias\
          \ or data stream."
        explode: true
        in: query
        name: write_index_only
        required: false
        schema:
          default: false
          description: "When true, applies mappings only to the write index of an\
            \ alias or data stream."
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutMapping_BodyParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicesPutMapping_PutResponseContent'
          description: IndicesPutMapping_Put 200 response
      x-operation-group: indices.put_mapping
      x-version-added: "1.0"
  /{index}/_mapping/field/{fields}:
    get:
      description: Returns mapping for one or more fields.
      operationId: IndicesGetFieldMapping_WithIndex
      parameters:
      - description: Comma-separated list of indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields.
        explode: false
        in: path
        name: fields
        required: true
        schema:
          description: Comma-separated list of fields.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether the default mapping values should be returned as well.
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          description: Whether the default mapping values should be returned as well.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetFieldMapping_WithIndex 200 response
      x-operation-group: indices.get_field_mapping
      x-version-added: "1.0"
  /{index}/_mget:
    get:
      description: Allows to get multiple documents in one request.
      operationId: Mget_Get_WithIndex
      parameters:
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Specify whether to perform the operation in realtime or search
          mode.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          description: Specify whether to perform the operation in realtime or search
            mode.
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          description: Mget_Get_WithIndex 200 response
      x-operation-group: mget
      x-version-added: "1.0"
    post:
      description: Allows to get multiple documents in one request.
      operationId: Mget_Post_WithIndex
      parameters:
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Specify whether to perform the operation in realtime or search
          mode.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          description: Specify whether to perform the operation in realtime or search
            mode.
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mget_BodyParams'
        required: true
      responses:
        "200":
          description: Mget_Post_WithIndex 200 response
      x-operation-group: mget
      x-version-added: "1.0"
  /{index}/_msearch:
    get:
      description: Allows to execute several search operations in one request.
      operationId: Msearch_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices to use as default.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to use as default.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Controls the maximum number of concurrent searches the multi
          search api will execute.
        explode: true
        in: query
        name: max_concurrent_searches
        required: false
        schema:
          description: Controls the maximum number of concurrent searches the multi
            search api will execute.
          format: int32
          type: integer
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Threshold that enforces a pre-filter round-trip to prefilter
          search shards based on query rewriting if the number of shards the search
          request expands to exceeds the threshold. This filter round-trip can limit
          the number of shards significantly if for instance a shard can not match
          any documents based on its rewrite method ie. if date filters are mandatory
          to match but the shard bounds and the query are disjoint.
        explode: true
        in: query
        name: pre_filter_shard_size
        required: false
        schema:
          description: Threshold that enforces a pre-filter round-trip to prefilter
            search shards based on query rewriting if the number of shards the search
            request expands to exceeds the threshold. This filter round-trip can limit
            the number of shards significantly if for instance a shard can not match
            any documents based on its rewrite method ie. if date filters are mandatory
            to match but the shard bounds and the query are disjoint.
          format: int32
          type: integer
        style: form
      - description: The number of concurrent shard requests each sub search executes
          concurrently per node. This value should be used to limit the impact of
          the search on the cluster in order to limit the number of concurrent shard
          requests.
        explode: true
        in: query
        name: max_concurrent_shard_requests
        required: false
        schema:
          default: 5
          description: The number of concurrent shard requests each sub search executes
            concurrently per node. This value should be used to limit the impact of
            the search on the cluster in order to limit the number of concurrent shard
            requests.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      responses:
        "200":
          description: Msearch_Get_WithIndex 200 response
      x-operation-group: msearch
      x-version-added: "1.0"
    post:
      description: Allows to execute several search operations in one request.
      operationId: Msearch_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices to use as default.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to use as default.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Controls the maximum number of concurrent searches the multi
          search api will execute.
        explode: true
        in: query
        name: max_concurrent_searches
        required: false
        schema:
          description: Controls the maximum number of concurrent searches the multi
            search api will execute.
          format: int32
          type: integer
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Threshold that enforces a pre-filter round-trip to prefilter
          search shards based on query rewriting if the number of shards the search
          request expands to exceeds the threshold. This filter round-trip can limit
          the number of shards significantly if for instance a shard can not match
          any documents based on its rewrite method ie. if date filters are mandatory
          to match but the shard bounds and the query are disjoint.
        explode: true
        in: query
        name: pre_filter_shard_size
        required: false
        schema:
          description: Threshold that enforces a pre-filter round-trip to prefilter
            search shards based on query rewriting if the number of shards the search
            request expands to exceeds the threshold. This filter round-trip can limit
            the number of shards significantly if for instance a shard can not match
            any documents based on its rewrite method ie. if date filters are mandatory
            to match but the shard bounds and the query are disjoint.
          format: int32
          type: integer
        style: form
      - description: The number of concurrent shard requests each sub search executes
          concurrently per node. This value should be used to limit the impact of
          the search on the cluster in order to limit the number of concurrent shard
          requests.
        explode: true
        in: query
        name: max_concurrent_shard_requests
        required: false
        schema:
          default: 5
          description: The number of concurrent shard requests each sub search executes
            concurrently per node. This value should be used to limit the impact of
            the search on the cluster in order to limit the number of concurrent shard
            requests.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Msearch_BodyParams'
        required: true
      responses:
        "200":
          description: Msearch_Post_WithIndex 200 response
      x-operation-group: msearch
      x-version-added: "1.0"
  /{index}/_msearch/template:
    get:
      description: Allows to execute several search template operations in one request.
      operationId: MsearchTemplate_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices to use as default.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to use as default.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Controls the maximum number of concurrent searches the multi
          search api will execute.
        explode: true
        in: query
        name: max_concurrent_searches
        required: false
        schema:
          description: Controls the maximum number of concurrent searches the multi
            search api will execute.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      responses:
        "200":
          description: MsearchTemplate_Get_WithIndex 200 response
      x-operation-group: msearch_template
      x-version-added: "1.0"
    post:
      description: Allows to execute several search template operations in one request.
      operationId: MsearchTemplate_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices to use as default.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to use as default.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Controls the maximum number of concurrent searches the multi
          search api will execute.
        explode: true
        in: query
        name: max_concurrent_searches
        required: false
        schema:
          description: Controls the maximum number of concurrent searches the multi
            search api will execute.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsearchTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: MsearchTemplate_Post_WithIndex 200 response
      x-operation-group: msearch_template
      x-version-added: "1.0"
  /{index}/_mtermvectors:
    get:
      description: Returns multiple termvectors in one request.
      operationId: Mtermvectors_Get_WithIndex
      parameters:
      - description: The index in which the document resides.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The index in which the document resides.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Comma-separated list of documents ids. You must define ids as
          parameter or set 'ids' or 'docs' in the request body.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          description: Comma-separated list of documents ids. You must define ids
            as parameter or set 'ids' or 'docs' in the request body.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if total term frequency and document frequency should
          be returned. Applies to all returned documents unless otherwise specified
          in body 'params' or 'docs'.
        explode: true
        in: query
        name: term_statistics
        required: false
        schema:
          default: false
          description: Specifies if total term frequency and document frequency should
            be returned. Applies to all returned documents unless otherwise specified
            in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: "Specifies if document count, sum of document frequencies and\
          \ sum of total term frequencies should be returned. Applies to all returned\
          \ documents unless otherwise specified in body 'params' or 'docs'."
        explode: true
        in: query
        name: field_statistics
        required: false
        schema:
          default: true
          description: "Specifies if document count, sum of document frequencies and\
            \ sum of total term frequencies should be returned. Applies to all returned\
            \ documents unless otherwise specified in body 'params' or 'docs'."
          type: boolean
        style: form
      - description: Comma-separated list of fields to return. Applies to all returned
          documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return. Applies to all returned
            documents unless otherwise specified in body 'params' or 'docs'.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if term offsets should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: offsets
        required: false
        schema:
          default: true
          description: Specifies if term offsets should be returned. Applies to all
            returned documents unless otherwise specified in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: Specifies if term positions should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: positions
        required: false
        schema:
          default: true
          description: Specifies if term positions should be returned. Applies to
            all returned documents unless otherwise specified in body 'params' or
            'docs'.
          type: boolean
        style: form
      - description: Specifies if term payloads should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: payloads
        required: false
        schema:
          default: true
          description: Specifies if term payloads should be returned. Applies to all
            returned documents unless otherwise specified in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
          Applies to all returned documents unless otherwise specified in body 'params'
          or 'docs'.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on. Applies to all returned documents unless otherwise specified in body
            'params' or 'docs'.
          type: string
        style: form
      - description: Routing value. Applies to all returned documents unless otherwise
          specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value. Applies to all returned documents unless otherwise
            specified in body 'params' or 'docs'.
          type: string
        style: form
      - description: Specifies if requests are real-time as opposed to near-real-time.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          default: true
          description: Specifies if requests are real-time as opposed to near-real-time.
          type: boolean
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          description: Mtermvectors_Get_WithIndex 200 response
      x-operation-group: mtermvectors
      x-version-added: "1.0"
    post:
      description: Returns multiple termvectors in one request.
      operationId: Mtermvectors_Post_WithIndex
      parameters:
      - description: The index in which the document resides.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The index in which the document resides.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Comma-separated list of documents ids. You must define ids as
          parameter or set 'ids' or 'docs' in the request body.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          description: Comma-separated list of documents ids. You must define ids
            as parameter or set 'ids' or 'docs' in the request body.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if total term frequency and document frequency should
          be returned. Applies to all returned documents unless otherwise specified
          in body 'params' or 'docs'.
        explode: true
        in: query
        name: term_statistics
        required: false
        schema:
          default: false
          description: Specifies if total term frequency and document frequency should
            be returned. Applies to all returned documents unless otherwise specified
            in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: "Specifies if document count, sum of document frequencies and\
          \ sum of total term frequencies should be returned. Applies to all returned\
          \ documents unless otherwise specified in body 'params' or 'docs'."
        explode: true
        in: query
        name: field_statistics
        required: false
        schema:
          default: true
          description: "Specifies if document count, sum of document frequencies and\
            \ sum of total term frequencies should be returned. Applies to all returned\
            \ documents unless otherwise specified in body 'params' or 'docs'."
          type: boolean
        style: form
      - description: Comma-separated list of fields to return. Applies to all returned
          documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return. Applies to all returned
            documents unless otherwise specified in body 'params' or 'docs'.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if term offsets should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: offsets
        required: false
        schema:
          default: true
          description: Specifies if term offsets should be returned. Applies to all
            returned documents unless otherwise specified in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: Specifies if term positions should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: positions
        required: false
        schema:
          default: true
          description: Specifies if term positions should be returned. Applies to
            all returned documents unless otherwise specified in body 'params' or
            'docs'.
          type: boolean
        style: form
      - description: Specifies if term payloads should be returned. Applies to all
          returned documents unless otherwise specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: payloads
        required: false
        schema:
          default: true
          description: Specifies if term payloads should be returned. Applies to all
            returned documents unless otherwise specified in body 'params' or 'docs'.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
          Applies to all returned documents unless otherwise specified in body 'params'
          or 'docs'.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on. Applies to all returned documents unless otherwise specified in body
            'params' or 'docs'.
          type: string
        style: form
      - description: Routing value. Applies to all returned documents unless otherwise
          specified in body 'params' or 'docs'.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value. Applies to all returned documents unless otherwise
            specified in body 'params' or 'docs'.
          type: string
        style: form
      - description: Specifies if requests are real-time as opposed to near-real-time.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          default: true
          description: Specifies if requests are real-time as opposed to near-real-time.
          type: boolean
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mtermvectors_BodyParams'
      responses:
        "200":
          description: Mtermvectors_Post_WithIndex 200 response
      x-operation-group: mtermvectors
      x-version-added: "1.0"
  /{index}/_open:
    post:
      description: Opens an index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/open-index/
      operationId: IndicesOpen
      parameters:
      - description: Comma-separated list of indices to open.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices to open.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Sets the number of active shards to wait for before the operation
          returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Sets the number of active shards to wait for before the operation
            returns.
          type: string
        style: form
      responses:
        "200":
          description: IndicesOpen 200 response
      x-operation-group: indices.open
      x-version-added: "1.0"
  /{index}/_rank_eval:
    get:
      description: Allows to evaluate the quality of ranked search results over a
        set of typical search queries.
      operationId: RankEval_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      responses:
        "200":
          description: RankEval_Get_WithIndex 200 response
      x-operation-group: rank_eval
      x-version-added: "1.0"
    post:
      description: Allows to evaluate the quality of ranked search results over a
        set of typical search queries.
      operationId: RankEval_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankEval_BodyParams'
        required: true
      responses:
        "200":
          description: RankEval_Post_WithIndex 200 response
      x-operation-group: rank_eval
      x-version-added: "1.0"
  /{index}/_recovery:
    get:
      description: Returns information about ongoing index shard recoveries.
      operationId: IndicesRecovery_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether to display detailed information about shard recovery.
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          description: Whether to display detailed information about shard recovery.
          type: boolean
        style: form
      - description: Display only those recoveries that are currently on-going.
        explode: true
        in: query
        name: active_only
        required: false
        schema:
          default: false
          description: Display only those recoveries that are currently on-going.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesRecovery_WithIndex 200 response
      x-operation-group: indices.recovery
      x-version-added: "1.0"
  /{index}/_refresh:
    get:
      description: Performs the refresh operation in one or more indices.
      operationId: IndicesRefresh_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesRefresh_Get_WithIndex 200 response
      x-operation-group: indices.refresh
      x-version-added: "1.0"
    post:
      description: Performs the refresh operation in one or more indices.
      operationId: IndicesRefresh_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesRefresh_Post_WithIndex 200 response
      x-operation-group: indices.refresh
      x-version-added: "1.0"
  /{index}/_search:
    get:
      description: Returns results matching a query.
      operationId: Search_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether to return detailed information about score computation
          as part of a hit.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Specify whether to return detailed information about score
            computation as part of a hit.
          type: boolean
        style: form
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields to return as the docvalue representation
          of a field for each hit.
        explode: true
        in: query
        name: docvalue_fields
        required: false
        schema:
          description: Comma-separated list of fields to return as the docvalue representation
            of a field for each hit.
          items:
            type: string
          type: array
        style: form
      - description: Starting offset.
        explode: true
        in: query
        name: from
        required: false
        schema:
          default: 0
          description: Starting offset.
          format: int32
          type: integer
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      - description: Number of hits to return.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          description: Number of hits to return.
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of <field>:<direction> pairs.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: Comma-separated list of <field>:<direction> pairs.
          items:
            type: string
          type: array
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      - description: Specific 'tag' of the request for logging and statistical purposes.
        explode: true
        in: query
        name: stats
        required: false
        schema:
          description: Specific 'tag' of the request for logging and statistical purposes.
          items:
            type: string
          type: array
        style: form
      - description: Specify which field to use for suggestions.
        explode: true
        in: query
        name: suggest_field
        required: false
        schema:
          description: Specify which field to use for suggestions.
          type: string
        style: form
      - description: Specify suggest mode.
        explode: true
        in: query
        name: suggest_mode
        required: false
        schema:
          $ref: '#/components/schemas/SuggestMode'
        style: form
      - description: How many suggestions to return in response.
        explode: true
        in: query
        name: suggest_size
        required: false
        schema:
          description: How many suggestions to return in response.
          format: int32
          type: integer
        style: form
      - description: The source text for which the suggestions should be returned.
        explode: true
        in: query
        name: suggest_text
        required: false
        schema:
          description: The source text for which the suggestions should be returned.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to calculate and return scores even if they are not used
          for sorting.
        explode: true
        in: query
        name: track_scores
        required: false
        schema:
          description: Whether to calculate and return scores even if they are not
            used for sorting.
          type: boolean
        style: form
      - description: Indicate if the number of documents that match the query should
          be tracked.
        explode: true
        in: query
        name: track_total_hits
        required: false
        schema:
          description: Indicate if the number of documents that match the query should
            be tracked.
          type: boolean
        style: form
      - description: Indicate if an error should be returned if there is a partial
          search failure or timeout.
        explode: true
        in: query
        name: allow_partial_search_results
        required: false
        schema:
          default: true
          description: Indicate if an error should be returned if there is a partial
            search failure or timeout.
          type: boolean
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Whether to return document version as part of a hit.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Whether to return document version as part of a hit.
          type: boolean
        style: form
      - description: Specify whether to return sequence number and primary term of
          the last modification of each hit.
        explode: true
        in: query
        name: seq_no_primary_term
        required: false
        schema:
          description: Specify whether to return sequence number and primary term
            of the last modification of each hit.
          type: boolean
        style: form
      - description: "Specify if request cache should be used for this request or\
          \ not, defaults to index level setting."
        explode: true
        in: query
        name: request_cache
        required: false
        schema:
          description: "Specify if request cache should be used for this request or\
            \ not, defaults to index level setting."
          type: boolean
        style: form
      - description: The number of shard results that should be reduced at once on
          the coordinating node. This value should be used as a protection mechanism
          to reduce the memory overhead per search request if the potential number
          of shards in the request can be large.
        explode: true
        in: query
        name: batched_reduce_size
        required: false
        schema:
          default: 512
          description: The number of shard results that should be reduced at once
            on the coordinating node. This value should be used as a protection mechanism
            to reduce the memory overhead per search request if the potential number
            of shards in the request can be large.
          format: int32
          type: integer
        style: form
      - description: The number of concurrent shard requests per node this search
          executes concurrently. This value should be used to limit the impact of
          the search on the cluster in order to limit the number of concurrent shard
          requests.
        explode: true
        in: query
        name: max_concurrent_shard_requests
        required: false
        schema:
          default: 5
          description: The number of concurrent shard requests per node this search
            executes concurrently. This value should be used to limit the impact of
            the search on the cluster in order to limit the number of concurrent shard
            requests.
          format: int32
          type: integer
        style: form
      - description: Threshold that enforces a pre-filter round-trip to prefilter
          search shards based on query rewriting if the number of shards the search
          request expands to exceeds the threshold. This filter round-trip can limit
          the number of shards significantly if for instance a shard can not match
          any documents based on its rewrite method ie. if date filters are mandatory
          to match but the shard bounds and the query are disjoint.
        explode: true
        in: query
        name: pre_filter_shard_size
        required: false
        schema:
          description: Threshold that enforces a pre-filter round-trip to prefilter
            search shards based on query rewriting if the number of shards the search
            request expands to exceeds the threshold. This filter round-trip can limit
            the number of shards significantly if for instance a shard can not match
            any documents based on its rewrite method ie. if date filters are mandatory
            to match but the shard bounds and the query are disjoint.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search_Get_WithIndexResponseContent'
          description: Search_Get_WithIndex 200 response
      x-operation-group: search
      x-version-added: "1.0"
    post:
      description: Returns results matching a query.
      operationId: Search_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        examples:
          Search_Post_WithIndex_example1:
            description: ""
            summary: Examples for Post Search With Index Operation.
            value: books
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether to return detailed information about score computation
          as part of a hit.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Specify whether to return detailed information about score
            computation as part of a hit.
          type: boolean
        style: form
      - description: Comma-separated list of stored fields to return.
        explode: true
        in: query
        name: stored_fields
        required: false
        schema:
          description: Comma-separated list of stored fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields to return as the docvalue representation
          of a field for each hit.
        explode: true
        in: query
        name: docvalue_fields
        required: false
        schema:
          description: Comma-separated list of fields to return as the docvalue representation
            of a field for each hit.
          items:
            type: string
          type: array
        style: form
      - description: Starting offset.
        explode: true
        in: query
        name: from
        required: false
        schema:
          default: 0
          description: Starting offset.
          format: int32
          type: integer
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        examples:
          Search_Post_WithIndex_example1:
            description: ""
            summary: Examples for Post Search With Index Operation.
            value: 1d
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      - description: Number of hits to return.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          description: Number of hits to return.
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of <field>:<direction> pairs.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: Comma-separated list of <field>:<direction> pairs.
          items:
            type: string
          type: array
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      - description: Specific 'tag' of the request for logging and statistical purposes.
        explode: true
        in: query
        name: stats
        required: false
        schema:
          description: Specific 'tag' of the request for logging and statistical purposes.
          items:
            type: string
          type: array
        style: form
      - description: Specify which field to use for suggestions.
        explode: true
        in: query
        name: suggest_field
        required: false
        schema:
          description: Specify which field to use for suggestions.
          type: string
        style: form
      - description: Specify suggest mode.
        explode: true
        in: query
        name: suggest_mode
        required: false
        schema:
          $ref: '#/components/schemas/SuggestMode'
        style: form
      - description: How many suggestions to return in response.
        explode: true
        in: query
        name: suggest_size
        required: false
        schema:
          description: How many suggestions to return in response.
          format: int32
          type: integer
        style: form
      - description: The source text for which the suggestions should be returned.
        explode: true
        in: query
        name: suggest_text
        required: false
        schema:
          description: The source text for which the suggestions should be returned.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to calculate and return scores even if they are not used
          for sorting.
        explode: true
        in: query
        name: track_scores
        required: false
        schema:
          description: Whether to calculate and return scores even if they are not
            used for sorting.
          type: boolean
        style: form
      - description: Indicate if the number of documents that match the query should
          be tracked.
        explode: true
        in: query
        name: track_total_hits
        required: false
        schema:
          description: Indicate if the number of documents that match the query should
            be tracked.
          type: boolean
        style: form
      - description: Indicate if an error should be returned if there is a partial
          search failure or timeout.
        explode: true
        in: query
        name: allow_partial_search_results
        required: false
        schema:
          default: true
          description: Indicate if an error should be returned if there is a partial
            search failure or timeout.
          type: boolean
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Whether to return document version as part of a hit.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Whether to return document version as part of a hit.
          type: boolean
        style: form
      - description: Specify whether to return sequence number and primary term of
          the last modification of each hit.
        explode: true
        in: query
        name: seq_no_primary_term
        required: false
        schema:
          description: Specify whether to return sequence number and primary term
            of the last modification of each hit.
          type: boolean
        style: form
      - description: "Specify if request cache should be used for this request or\
          \ not, defaults to index level setting."
        explode: true
        in: query
        name: request_cache
        required: false
        schema:
          description: "Specify if request cache should be used for this request or\
            \ not, defaults to index level setting."
          type: boolean
        style: form
      - description: The number of shard results that should be reduced at once on
          the coordinating node. This value should be used as a protection mechanism
          to reduce the memory overhead per search request if the potential number
          of shards in the request can be large.
        explode: true
        in: query
        name: batched_reduce_size
        required: false
        schema:
          default: 512
          description: The number of shard results that should be reduced at once
            on the coordinating node. This value should be used as a protection mechanism
            to reduce the memory overhead per search request if the potential number
            of shards in the request can be large.
          format: int32
          type: integer
        style: form
      - description: The number of concurrent shard requests per node this search
          executes concurrently. This value should be used to limit the impact of
          the search on the cluster in order to limit the number of concurrent shard
          requests.
        explode: true
        in: query
        name: max_concurrent_shard_requests
        required: false
        schema:
          default: 5
          description: The number of concurrent shard requests per node this search
            executes concurrently. This value should be used to limit the impact of
            the search on the cluster in order to limit the number of concurrent shard
            requests.
          format: int32
          type: integer
        style: form
      - description: Threshold that enforces a pre-filter round-trip to prefilter
          search shards based on query rewriting if the number of shards the search
          request expands to exceeds the threshold. This filter round-trip can limit
          the number of shards significantly if for instance a shard can not match
          any documents based on its rewrite method ie. if date filters are mandatory
          to match but the shard bounds and the query are disjoint.
        explode: true
        in: query
        name: pre_filter_shard_size
        required: false
        schema:
          description: Threshold that enforces a pre-filter round-trip to prefilter
            search shards based on query rewriting if the number of shards the search
            request expands to exceeds the threshold. This filter round-trip can limit
            the number of shards significantly if for instance a shard can not match
            any documents based on its rewrite method ie. if date filters are mandatory
            to match but the shard bounds and the query are disjoint.
          format: int32
          type: integer
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Search_Post_WithIndex_example1:
                description: ""
                summary: Examples for Post Search With Index Operation.
                value:
                  query:
                    match_all: {}
                  fields:
                  - '*'
            schema:
              $ref: '#/components/schemas/Search_BodyParams'
      responses:
        "200":
          content:
            application/json:
              examples:
                Search_Post_WithIndex_example1:
                  description: ""
                  summary: Examples for Post Search With Index Operation.
                  value:
                    timed_out: false
                    _shards:
                      total: 1
                      successful: 1
                      skipped: 0
                      failed: 0
                    hits:
                      total:
                        value: 0
                        relation: eq
                      hits: []
              schema:
                $ref: '#/components/schemas/Search_Post_WithIndexResponseContent'
          description: Search_Post_WithIndex 200 response
      x-operation-group: search
      x-version-added: "1.0"
  /{index}/_search/point_in_time:
    post:
      description: Creates point in time context.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/search-plugins/point-in-time-api/#create-a-pit
      operationId: CreatePit
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Allow if point in time can be created with partial failures.
        explode: true
        in: query
        name: allow_partial_pit_creation
        required: false
        schema:
          description: Allow if point in time can be created with partial failures.
          type: boolean
        style: form
      - description: Specify the keep alive for point in time.
        explode: true
        in: query
        name: keep_alive
        required: false
        schema:
          description: Specify the keep alive for point in time.
          type: string
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePitResponseContent'
          description: CreatePit 200 response
      x-operation-group: create_pit
      x-version-added: "2.4"
  /{index}/_search/template:
    get:
      description: Allows to use the Mustache language to pre-render a search definition.
      operationId: SearchTemplate_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Specify whether to return detailed information about score computation
          as part of a hit.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Specify whether to return detailed information about score
            computation as part of a hit.
          type: boolean
        style: form
      - description: Specify whether to profile the query execution.
        explode: true
        in: query
        name: profile
        required: false
        schema:
          description: Specify whether to profile the query execution.
          type: boolean
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      responses:
        "200":
          description: SearchTemplate_Get_WithIndex 200 response
      x-operation-group: search_template
      x-version-added: "1.0"
    post:
      description: Allows to use the Mustache language to pre-render a search definition.
      operationId: SearchTemplate_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: "Whether specified concrete, expanded or aliased indices should\
          \ be ignored when throttled."
        explode: true
        in: query
        name: ignore_throttled
        required: false
        schema:
          description: "Whether specified concrete, expanded or aliased indices should\
            \ be ignored when throttled."
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchTypeMulti'
        style: form
      - description: Specify whether to return detailed information about score computation
          as part of a hit.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Specify whether to return detailed information about score
            computation as part of a hit.
          type: boolean
        style: form
      - description: Specify whether to profile the query execution.
        explode: true
        in: query
        name: profile
        required: false
        schema:
          description: Specify whether to profile the query execution.
          type: boolean
        style: form
      - description: Specify whether aggregation and suggester names should be prefixed
          by their respective types in the response.
        explode: true
        in: query
        name: typed_keys
        required: false
        schema:
          description: Specify whether aggregation and suggester names should be prefixed
            by their respective types in the response.
          type: boolean
        style: form
      - description: Indicates whether hits.total should be rendered as an integer
          or an object in the rest search response.
        explode: true
        in: query
        name: rest_total_hits_as_int
        required: false
        schema:
          default: false
          description: Indicates whether hits.total should be rendered as an integer
            or an object in the rest search response.
          type: boolean
        style: form
      - description: Indicates whether network round-trips should be minimized as
          part of cross-cluster search requests execution.
        explode: true
        in: query
        name: ccs_minimize_roundtrips
        required: false
        schema:
          default: true
          description: Indicates whether network round-trips should be minimized as
            part of cross-cluster search requests execution.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTemplate_BodyParams'
        required: true
      responses:
        "200":
          description: SearchTemplate_Post_WithIndex 200 response
      x-operation-group: search_template
      x-version-added: "1.0"
  /{index}/_search_shards:
    get:
      description: Returns information about the indices and shards that a search
        request would be executed against.
      operationId: SearchShards_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: SearchShards_Get_WithIndex 200 response
      x-operation-group: search_shards
      x-version-added: "1.0"
    post:
      description: Returns information about the indices and shards that a search
        request would be executed against.
      operationId: SearchShards_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: SearchShards_Post_WithIndex 200 response
      x-operation-group: search_shards
      x-version-added: "1.0"
  /{index}/_segments:
    get:
      description: Provides low-level information about segments in a Lucene index.
      operationId: IndicesSegments_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Includes detailed memory usage by Lucene.
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: false
          description: Includes detailed memory usage by Lucene.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesSegments_WithIndex 200 response
      x-operation-group: indices.segments
      x-version-added: "1.0"
  /{index}/_settings:
    get:
      description: Returns settings for one or more indices.
      operationId: IndicesGetSettings_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        examples:
          IndicesGetSettings_WithIndex_example1:
            description: ""
            summary: Examples for Get settings Index Operation.
            value: books
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether to return all default setting for each of the indices.
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          default: false
          description: Whether to return all default setting for each of the indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetSettings_WithIndex 200 response
      x-operation-group: indices.get_settings
      x-version-added: "1.0"
    put:
      description: Updates the index settings.
      operationId: IndicesPutSettings_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Whether to update existing settings. If set to `true` existing
          settings on an index remain unchanged.
        explode: true
        in: query
        name: preserve_existing
        required: false
        schema:
          default: false
          description: Whether to update existing settings. If set to `true` existing
            settings on an index remain unchanged.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesPutSettings_BodyParams'
        required: true
      responses:
        "200":
          description: IndicesPutSettings_WithIndex 200 response
      x-operation-group: indices.put_settings
      x-version-added: "1.0"
  /{index}/_settings/{name}:
    get:
      description: Returns settings for one or more indices.
      operationId: IndicesGetSettings_WithIndexName
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        examples:
          IndicesGetSettings_WithIndexName_example1:
            description: ""
            summary: Examples for Get settings Index-setting Operation.
            value: books
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of settings.
        examples:
          IndicesGetSettings_WithIndexName_example1:
            description: ""
            summary: Examples for Get settings Index-setting Operation.
            value: index
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Comma-separated list of settings.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Return settings in flat format.
        explode: true
        in: query
        name: flat_settings
        required: false
        schema:
          default: false
          description: Return settings in flat format.
          type: boolean
        style: form
      - description: "Return local information, do not retrieve the state from cluster-manager\
          \ node."
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          description: "Return local information, do not retrieve the state from cluster-manager\
            \ node."
          type: boolean
        style: form
      - description: Whether to return all default setting for each of the indices.
        explode: true
        in: query
        name: include_defaults
        required: false
        schema:
          default: false
          description: Whether to return all default setting for each of the indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesGetSettings_WithIndexName 200 response
      x-operation-group: indices.get_settings
      x-version-added: "1.0"
  /{index}/_shard_stores:
    get:
      description: Provides store information for shard copies of indices.
      operationId: IndicesShardStores_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of statuses used to filter on shards to
          get store information for.
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: Comma-separated list of statuses used to filter on shards to
            get store information for.
          items:
            $ref: '#/components/schemas/Status_Member'
          type: array
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesShardStores_WithIndex 200 response
      x-operation-group: indices.shard_stores
      x-version-added: "1.0"
  /{index}/_shrink/{target}:
    post:
      description: Allow to shrink an existing index into a new index with fewer primary
        shards.
      operationId: IndicesShrink_Post
      parameters:
      - description: The name of the source index to shrink.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The name of the source index to shrink.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the target index.
        explode: false
        in: path
        name: target
        required: true
        schema:
          description: The name of the target index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: whether or not to copy settings from the source index.
        explode: true
        in: query
        name: copy_settings
        required: false
        schema:
          default: false
          description: whether or not to copy settings from the source index.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Set the number of active shards to wait for on the shrunken index
          before the operation returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for on the shrunken
            index before the operation returns.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesShrink_BodyParams'
      responses:
        "200":
          description: IndicesShrink_Post 200 response
      x-operation-group: indices.shrink
      x-version-added: "1.0"
    put:
      description: Allow to shrink an existing index into a new index with fewer primary
        shards.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/shrink-index/
      operationId: IndicesShrink_Put
      parameters:
      - description: The name of the source index to shrink.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The name of the source index to shrink.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the target index.
        explode: false
        in: path
        name: target
        required: true
        schema:
          description: The name of the target index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: whether or not to copy settings from the source index.
        explode: true
        in: query
        name: copy_settings
        required: false
        schema:
          default: false
          description: whether or not to copy settings from the source index.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Set the number of active shards to wait for on the shrunken index
          before the operation returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for on the shrunken
            index before the operation returns.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesShrink_BodyParams'
      responses:
        "200":
          description: IndicesShrink_Put 200 response
      x-operation-group: indices.shrink
      x-version-added: "1.0"
  /{index}/_source/{id}:
    get:
      description: Returns the source of a document.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/get-documents/
      operationId: GetSource
      parameters:
      - description: Document ID.
        examples:
          GetSource_example1:
            description: ""
            summary: Examples for Get document source Operation.
            value: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        examples:
          GetSource_example1:
            description: ""
            summary: Examples for Get document source Operation.
            value: books
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Specify whether to perform the operation in realtime or search
          mode.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          description: Specify whether to perform the operation in realtime or search
            mode.
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          description: GetSource 200 response
      x-operation-group: get_source
      x-version-added: "1.0"
    head:
      description: Returns information about whether a document source exists in an
        index.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/get-documents/
      operationId: ExistsSource
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Specify whether to perform the operation in realtime or search
          mode.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          description: Specify whether to perform the operation in realtime or search
            mode.
          type: boolean
        style: form
      - description: Refresh the shard containing the document before performing the
          operation.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Refresh the shard containing the document before performing
            the operation.
          type: boolean
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          description: ExistsSource 200 response
      x-operation-group: exists_source
      x-version-added: "1.0"
  /{index}/_split/{target}:
    post:
      description: Allows you to split an existing index into a new index with more
        primary shards.
      operationId: IndicesSplit_Post
      parameters:
      - description: The name of the source index to split.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The name of the source index to split.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the target index.
        explode: false
        in: path
        name: target
        required: true
        schema:
          description: The name of the target index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: whether or not to copy settings from the source index.
        explode: true
        in: query
        name: copy_settings
        required: false
        schema:
          default: false
          description: whether or not to copy settings from the source index.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Set the number of active shards to wait for on the shrunken index
          before the operation returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for on the shrunken
            index before the operation returns.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesSplit_BodyParams'
      responses:
        "200":
          description: IndicesSplit_Post 200 response
      x-operation-group: indices.split
      x-version-added: "1.0"
    put:
      description: Allows you to split an existing index into a new index with more
        primary shards.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/index-apis/split/
      operationId: IndicesSplit_Put
      parameters:
      - description: The name of the source index to split.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The name of the source index to split.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: The name of the target index.
        explode: false
        in: path
        name: target
        required: true
        schema:
          description: The name of the target index.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: whether or not to copy settings from the source index.
        explode: true
        in: query
        name: copy_settings
        required: false
        schema:
          default: false
          description: whether or not to copy settings from the source index.
          type: boolean
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Operation timeout for connection to master node.
        explode: true
        in: query
        name: master_timeout
        required: false
        schema:
          deprecated: true
          description: Operation timeout for connection to master node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-deprecated: 2.0.0
          x-data-type: time
          x-deprecation-message: "To promote inclusive language, use 'cluster_manager_timeout'\
            \ instead."
        style: form
      - description: Operation timeout for connection to cluster-manager node.
        explode: true
        in: query
        name: cluster_manager_timeout
        required: false
        schema:
          description: Operation timeout for connection to cluster-manager node.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-version-added: 2.0.0
          x-data-type: time
        style: form
      - description: Set the number of active shards to wait for on the shrunken index
          before the operation returns.
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          description: Set the number of active shards to wait for on the shrunken
            index before the operation returns.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesSplit_BodyParams'
      responses:
        "200":
          description: IndicesSplit_Put 200 response
      x-operation-group: indices.split
      x-version-added: "1.0"
  /{index}/_stats:
    get:
      description: Provides statistics on operations happening in an index.
      operationId: IndicesStats_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return stats aggregated at cluster, index or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/IndiciesStatLevel'
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      - description: If set to true segment stats will include stats for segments
          that are not currently loaded into memory.
        explode: true
        in: query
        name: include_unloaded_segments
        required: false
        schema:
          default: false
          description: If set to true segment stats will include stats for segments
            that are not currently loaded into memory.
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: If set to false stats will also collected from closed indices
          if explicitly specified or if expand_wildcards expands to closed indices.
        explode: true
        in: query
        name: forbid_closed_indices
        required: false
        schema:
          default: true
          description: If set to false stats will also collected from closed indices
            if explicitly specified or if expand_wildcards expands to closed indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesStats_WithIndex 200 response
      x-operation-group: indices.stats
      x-version-added: "1.0"
  /{index}/_stats/{metric}:
    get:
      description: Provides statistics on operations happening in an index.
      operationId: IndicesStats_WithIndexMetric
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Limit the information returned the specific metrics.
        explode: false
        in: path
        name: metric
        required: true
        schema:
          description: Limit the information returned the specific metrics.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-enum-options:
          - _all
          - store
          - indexing
          - get
          - search
          - merge
          - flush
          - refresh
          - query_cache
          - fielddata
          - docs
          - warmer
          - completion
          - segments
          - translog
          - suggest
          - request_cache
          - recovery
          x-data-type: array
        style: simple
      - description: Comma-separated list of fields for `fielddata` and `suggest`
          index metric (supports wildcards).
        explode: true
        in: query
        name: completion_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `suggest`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` index metric (supports
          wildcards).
        explode: true
        in: query
        name: fielddata_fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` index metric
            (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of fields for `fielddata` and `completion`
          index metric (supports wildcards).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields for `fielddata` and `completion`
            index metric (supports wildcards).
          items:
            type: string
          type: array
        style: form
      - description: Comma-separated list of search groups for `search` index metric.
        explode: true
        in: query
        name: groups
        required: false
        schema:
          description: Comma-separated list of search groups for `search` index metric.
          items:
            type: string
          type: array
        style: form
      - description: "Return stats aggregated at cluster, index or shard level."
        explode: true
        in: query
        name: level
        required: false
        schema:
          $ref: '#/components/schemas/IndiciesStatLevel'
        style: form
      - description: Whether to report the aggregated disk usage of each one of the
          Lucene index files (only applies if segment stats are requested).
        explode: true
        in: query
        name: include_segment_file_sizes
        required: false
        schema:
          default: false
          description: Whether to report the aggregated disk usage of each one of
            the Lucene index files (only applies if segment stats are requested).
          type: boolean
        style: form
      - description: If set to true segment stats will include stats for segments
          that are not currently loaded into memory.
        explode: true
        in: query
        name: include_unloaded_segments
        required: false
        schema:
          default: false
          description: If set to true segment stats will include stats for segments
            that are not currently loaded into memory.
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: If set to false stats will also collected from closed indices
          if explicitly specified or if expand_wildcards expands to closed indices.
        explode: true
        in: query
        name: forbid_closed_indices
        required: false
        schema:
          default: true
          description: If set to false stats will also collected from closed indices
            if explicitly specified or if expand_wildcards expands to closed indices.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesStats_WithIndexMetric 200 response
      x-operation-group: indices.stats
      x-version-added: "1.0"
  /{index}/_termvectors:
    get:
      description: Returns information and statistics about terms in the fields of
        a particular document.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest
      operationId: Termvectors_Get
      parameters:
      - description: The index in which the document resides.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The index in which the document resides.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specifies if total term frequency and document frequency should
          be returned.
        explode: true
        in: query
        name: term_statistics
        required: false
        schema:
          default: false
          description: Specifies if total term frequency and document frequency should
            be returned.
          type: boolean
        style: form
      - description: "Specifies if document count, sum of document frequencies and\
          \ sum of total term frequencies should be returned."
        explode: true
        in: query
        name: field_statistics
        required: false
        schema:
          default: true
          description: "Specifies if document count, sum of document frequencies and\
            \ sum of total term frequencies should be returned."
          type: boolean
        style: form
      - description: Comma-separated list of fields to return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if term offsets should be returned.
        explode: true
        in: query
        name: offsets
        required: false
        schema:
          default: true
          description: Specifies if term offsets should be returned.
          type: boolean
        style: form
      - description: Specifies if term positions should be returned.
        explode: true
        in: query
        name: positions
        required: false
        schema:
          default: true
          description: Specifies if term positions should be returned.
          type: boolean
        style: form
      - description: Specifies if term payloads should be returned.
        explode: true
        in: query
        name: payloads
        required: false
        schema:
          default: true
          description: Specifies if term payloads should be returned.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Specifies if request is real-time as opposed to near-real-time.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          default: true
          description: Specifies if request is real-time as opposed to near-real-time.
          type: boolean
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          description: Termvectors_Get 200 response
      x-operation-group: termvectors
      x-version-added: "1.0"
    post:
      description: Returns information and statistics about terms in the fields of
        a particular document.
      operationId: Termvectors_Post
      parameters:
      - description: The index in which the document resides.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The index in which the document resides.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specifies if total term frequency and document frequency should
          be returned.
        explode: true
        in: query
        name: term_statistics
        required: false
        schema:
          default: false
          description: Specifies if total term frequency and document frequency should
            be returned.
          type: boolean
        style: form
      - description: "Specifies if document count, sum of document frequencies and\
          \ sum of total term frequencies should be returned."
        explode: true
        in: query
        name: field_statistics
        required: false
        schema:
          default: true
          description: "Specifies if document count, sum of document frequencies and\
            \ sum of total term frequencies should be returned."
          type: boolean
        style: form
      - description: Comma-separated list of fields to return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if term offsets should be returned.
        explode: true
        in: query
        name: offsets
        required: false
        schema:
          default: true
          description: Specifies if term offsets should be returned.
          type: boolean
        style: form
      - description: Specifies if term positions should be returned.
        explode: true
        in: query
        name: positions
        required: false
        schema:
          default: true
          description: Specifies if term positions should be returned.
          type: boolean
        style: form
      - description: Specifies if term payloads should be returned.
        explode: true
        in: query
        name: payloads
        required: false
        schema:
          default: true
          description: Specifies if term payloads should be returned.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Specifies if request is real-time as opposed to near-real-time.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          default: true
          description: Specifies if request is real-time as opposed to near-real-time.
          type: boolean
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Termvectors_BodyParams'
      responses:
        "200":
          description: Termvectors_Post 200 response
      x-operation-group: termvectors
      x-version-added: "1.0"
  /{index}/_termvectors/{id}:
    get:
      description: Returns information and statistics about terms in the fields of
        a particular document.
      operationId: Termvectors_Get_WithId
      parameters:
      - description: The index in which the document resides.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The index in which the document resides.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Document ID. When not specified a doc param should be supplied.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID. When not specified a doc param should be supplied.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specifies if total term frequency and document frequency should
          be returned.
        explode: true
        in: query
        name: term_statistics
        required: false
        schema:
          default: false
          description: Specifies if total term frequency and document frequency should
            be returned.
          type: boolean
        style: form
      - description: "Specifies if document count, sum of document frequencies and\
          \ sum of total term frequencies should be returned."
        explode: true
        in: query
        name: field_statistics
        required: false
        schema:
          default: true
          description: "Specifies if document count, sum of document frequencies and\
            \ sum of total term frequencies should be returned."
          type: boolean
        style: form
      - description: Comma-separated list of fields to return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if term offsets should be returned.
        explode: true
        in: query
        name: offsets
        required: false
        schema:
          default: true
          description: Specifies if term offsets should be returned.
          type: boolean
        style: form
      - description: Specifies if term positions should be returned.
        explode: true
        in: query
        name: positions
        required: false
        schema:
          default: true
          description: Specifies if term positions should be returned.
          type: boolean
        style: form
      - description: Specifies if term payloads should be returned.
        explode: true
        in: query
        name: payloads
        required: false
        schema:
          default: true
          description: Specifies if term payloads should be returned.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Specifies if request is real-time as opposed to near-real-time.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          default: true
          description: Specifies if request is real-time as opposed to near-real-time.
          type: boolean
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      responses:
        "200":
          description: Termvectors_Get_WithId 200 response
      x-operation-group: termvectors
      x-version-added: "1.0"
    post:
      description: Returns information and statistics about terms in the fields of
        a particular document.
      operationId: Termvectors_Post_WithId
      parameters:
      - description: The index in which the document resides.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: The index in which the document resides.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Document ID. When not specified a doc param should be supplied.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID. When not specified a doc param should be supplied.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Specifies if total term frequency and document frequency should
          be returned.
        explode: true
        in: query
        name: term_statistics
        required: false
        schema:
          default: false
          description: Specifies if total term frequency and document frequency should
            be returned.
          type: boolean
        style: form
      - description: "Specifies if document count, sum of document frequencies and\
          \ sum of total term frequencies should be returned."
        explode: true
        in: query
        name: field_statistics
        required: false
        schema:
          default: true
          description: "Specifies if document count, sum of document frequencies and\
            \ sum of total term frequencies should be returned."
          type: boolean
        style: form
      - description: Comma-separated list of fields to return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          description: Comma-separated list of fields to return.
          items:
            type: string
          type: array
        style: form
      - description: Specifies if term offsets should be returned.
        explode: true
        in: query
        name: offsets
        required: false
        schema:
          default: true
          description: Specifies if term offsets should be returned.
          type: boolean
        style: form
      - description: Specifies if term positions should be returned.
        explode: true
        in: query
        name: positions
        required: false
        schema:
          default: true
          description: Specifies if term positions should be returned.
          type: boolean
        style: form
      - description: Specifies if term payloads should be returned.
        explode: true
        in: query
        name: payloads
        required: false
        schema:
          default: true
          description: Specifies if term payloads should be returned.
          type: boolean
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Specifies if request is real-time as opposed to near-real-time.
        explode: true
        in: query
        name: realtime
        required: false
        schema:
          default: true
          description: Specifies if request is real-time as opposed to near-real-time.
          type: boolean
        style: form
      - description: Explicit version number for concurrency control.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Explicit version number for concurrency control.
          format: int32
          type: integer
        style: form
      - description: Specific version type.
        explode: true
        in: query
        name: version_type
        required: false
        schema:
          $ref: '#/components/schemas/VersionType'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Termvectors_BodyParams'
      responses:
        "200":
          description: Termvectors_Post_WithId 200 response
      x-operation-group: termvectors
      x-version-added: "1.0"
  /{index}/_update/{id}:
    post:
      description: Updates a document with a script or partial document.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/update-document/
      operationId: Update
      parameters:
      - description: Document ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Document ID.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: Index name.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Index name.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
        style: simple
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: The script language.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          default: painless
          description: The script language.
          type: string
        style: form
      - description: "If `true` then refresh the affected shards to make this operation\
          \ visible to search, if `wait_for` then wait for a refresh to make this\
          \ operation visible to search, if `false` (the default) then do nothing\
          \ with refreshes."
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          $ref: '#/components/schemas/RefreshEnum'
        style: form
      - description: Specify how many times should the operation be retried when a
          conflict occurs.
        explode: true
        in: query
        name: retry_on_conflict
        required: false
        schema:
          default: 0
          description: Specify how many times should the operation be retried when
            a conflict occurs.
          format: int32
          type: integer
        style: form
      - description: Routing value.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Routing value.
          type: string
        style: form
      - description: Operation timeout.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          description: Operation timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified sequence number.
        explode: true
        in: query
        name: if_seq_no
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified sequence number.
          format: int32
          type: integer
        style: form
      - description: only perform the operation if the last operation that has changed
          the document has the specified primary term.
        explode: true
        in: query
        name: if_primary_term
        required: false
        schema:
          description: only perform the operation if the last operation that has changed
            the document has the specified primary term.
          format: int32
          type: integer
        style: form
      - description: "When true, requires destination to be an alias."
        explode: true
        in: query
        name: require_alias
        required: false
        schema:
          default: false
          description: "When true, requires destination to be an alias."
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_BodyParams'
        required: true
      responses:
        "200":
          description: Update 200 response
      x-operation-group: update
      x-version-added: "1.0"
  /{index}/_update_by_query:
    post:
      description: |-
        Performs an update on every document in the index without changing the source,
        for example to pick up a mapping change.
      externalDocs:
        description: API Reference
        url: https://opensearch.org/docs/latest/api-reference/document-apis/update-by-query/
      operationId: UpdateByQuery
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Starting offset.
        explode: true
        in: query
        name: from
        required: false
        schema:
          default: 0
          description: Starting offset.
          format: int32
          type: integer
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: What to do when the operation encounters version conflicts?.
        explode: true
        in: query
        name: conflicts
        required: false
        schema:
          $ref: '#/components/schemas/Conflicts'
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: The pipeline id to preprocess incoming documents with.
        explode: true
        in: query
        name: pipeline
        required: false
        schema:
          description: The pipeline id to preprocess incoming documents with.
          type: string
        style: form
      - description: Specify the node or shard the operation should be performed on.
        explode: true
        in: query
        name: preference
        required: false
        schema:
          default: random
          description: Specify the node or shard the operation should be performed
            on.
          type: string
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: Comma-separated list of specific routing values.
        explode: true
        in: query
        name: routing
        required: false
        schema:
          description: Comma-separated list of specific routing values.
          items:
            type: string
          type: array
        style: form
      - description: Specify how long a consistent view of the index should be maintained
          for scrolled search.
        explode: true
        in: query
        name: scroll
        required: false
        schema:
          description: Specify how long a consistent view of the index should be maintained
            for scrolled search.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: Search operation type.
        explode: true
        in: query
        name: search_type
        required: false
        schema:
          $ref: '#/components/schemas/SearchType'
        style: form
      - description: Explicit timeout for each search request. Defaults to no timeout.
        explode: true
        in: query
        name: search_timeout
        required: false
        schema:
          description: Explicit timeout for each search request. Defaults to no timeout.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: "Deprecated, please use `max_docs` instead."
        explode: true
        in: query
        name: size
        required: false
        schema:
          description: "Deprecated, please use `max_docs` instead."
          format: int32
          type: integer
        style: form
      - description: "Maximum number of documents to process (default: all documents)."
        explode: true
        in: query
        name: max_docs
        required: false
        schema:
          description: "Maximum number of documents to process (default: all documents)."
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of <field>:<direction> pairs.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: Comma-separated list of <field>:<direction> pairs.
          items:
            type: string
          type: array
        style: form
      - description: "True or false to return the _source field or not, or a list\
          \ of fields to return."
        explode: true
        in: query
        name: _source
        required: false
        schema:
          description: "True or false to return the _source field or not, or a list\
            \ of fields to return."
          items:
            type: string
          type: array
        style: form
      - description: List of fields to exclude from the returned _source field.
        explode: true
        in: query
        name: _source_excludes
        required: false
        schema:
          description: List of fields to exclude from the returned _source field.
          items:
            type: string
          type: array
        style: form
      - description: List of fields to extract and return from the _source field.
        explode: true
        in: query
        name: _source_includes
        required: false
        schema:
          description: List of fields to extract and return from the _source field.
          items:
            type: string
          type: array
        style: form
      - description: "The maximum number of documents to collect for each shard, upon\
          \ reaching which the query execution will terminate early."
        explode: true
        in: query
        name: terminate_after
        required: false
        schema:
          description: "The maximum number of documents to collect for each shard,\
            \ upon reaching which the query execution will terminate early."
          format: int32
          type: integer
        style: form
      - description: Specific 'tag' of the request for logging and statistical purposes.
        explode: true
        in: query
        name: stats
        required: false
        schema:
          description: Specific 'tag' of the request for logging and statistical purposes.
          items:
            type: string
          type: array
        style: form
      - description: Whether to return document version as part of a hit.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: Whether to return document version as part of a hit.
          type: boolean
        style: form
      - description: "Specify if request cache should be used for this request or\
          \ not, defaults to index level setting."
        explode: true
        in: query
        name: request_cache
        required: false
        schema:
          description: "Specify if request cache should be used for this request or\
            \ not, defaults to index level setting."
          type: boolean
        style: form
      - description: Should the affected indexes be refreshed?.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          description: Should the affected indexes be refreshed?.
          type: boolean
        style: form
      - description: Time each individual bulk request should wait for shards that
          are unavailable.
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 1m
          description: Time each individual bulk request should wait for shards that
            are unavailable.
          pattern: "^([0-9]+)(?:d|h|m|s|ms|micros|nanos)$"
          type: string
          x-data-type: time
        style: form
      - description: "Sets the number of shard copies that must be active before proceeding\
          \ with the operation. Defaults to 1, meaning the primary shard only. Set\
          \ to `all` for all shard copies, otherwise set to any non-negative value\
          \ less than or equal to the total number of copies for the shard (number\
          \ of replicas + 1)."
        explode: true
        in: query
        name: wait_for_active_shards
        required: false
        schema:
          default: "1"
          description: "Sets the number of shard copies that must be active before\
            \ proceeding with the operation. Defaults to 1, meaning the primary shard\
            \ only. Set to `all` for all shard copies, otherwise set to any non-negative\
            \ value less than or equal to the total number of copies for the shard\
            \ (number of replicas + 1)."
          type: string
        style: form
      - description: Size on the scroll request powering the operation.
        explode: true
        in: query
        name: scroll_size
        required: false
        schema:
          default: 100
          description: Size on the scroll request powering the operation.
          format: int32
          type: integer
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: true
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      - description: The throttle for this request in sub-requests per second. -1
          means no throttle.
        explode: true
        in: query
        name: requests_per_second
        required: false
        schema:
          default: 0
          description: The throttle for this request in sub-requests per second. -1
            means no throttle.
          format: int32
          type: integer
        style: form
      - description: "The number of slices this task should be divided into. Defaults\
          \ to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
        explode: true
        in: query
        name: slices
        required: false
        schema:
          default: "1"
          description: "The number of slices this task should be divided into. Defaults\
            \ to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateByQuery_BodyParams'
      responses:
        "200":
          description: UpdateByQuery 200 response
      x-operation-group: update_by_query
      x-version-added: "1.0"
  /{index}/_upgrade:
    get:
      description: The _upgrade API is no longer useful and will be removed.
      operationId: IndicesGetUpgrade_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      responses:
        "200":
          description: IndicesGetUpgrade_WithIndex 200 response
      x-operation-group: indices.get_upgrade
      x-version-added: "1.0"
    post:
      description: The _upgrade API is no longer useful and will be removed.
      operationId: IndicesUpgrade_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Should this request wait until the operation has completed before
          returning.
        explode: true
        in: query
        name: wait_for_completion
        required: false
        schema:
          default: false
          description: Should this request wait until the operation has completed
            before returning.
          type: boolean
        style: form
      - description: "If true, only ancient (an older Lucene major release) segments\
          \ will be upgraded."
        explode: true
        in: query
        name: only_ancient_segments
        required: false
        schema:
          description: "If true, only ancient (an older Lucene major release) segments\
            \ will be upgraded."
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesUpgrade_WithIndex 200 response
      x-operation-group: indices.upgrade
      x-version-added: "1.0"
  /{index}/_validate/query:
    get:
      description: Allows a user to validate a potentially expensive query without
        executing it.
      operationId: IndicesValidateQuery_Get_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Return detailed information about the error.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Return detailed information about the error.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Provide a more detailed explanation showing the actual Lucene
          query that will be executed.
        explode: true
        in: query
        name: rewrite
        required: false
        schema:
          description: Provide a more detailed explanation showing the actual Lucene
            query that will be executed.
          type: boolean
        style: form
      - description: Execute validation on all shards instead of one random shard
          per index.
        explode: true
        in: query
        name: all_shards
        required: false
        schema:
          description: Execute validation on all shards instead of one random shard
            per index.
          type: boolean
        style: form
      responses:
        "200":
          description: IndicesValidateQuery_Get_WithIndex 200 response
      x-operation-group: indices.validate_query
      x-version-added: "1.0"
    post:
      description: Allows a user to validate a potentially expensive query without
        executing it.
      operationId: IndicesValidateQuery_Post_WithIndex
      parameters:
      - description: Comma-separated list of indices; use `_all` or empty string to
          perform the operation on all indices.
        explode: false
        in: path
        name: index
        required: true
        schema:
          description: Comma-separated list of indices; use `_all` or empty string
            to perform the operation on all indices.
          pattern: ^(?!_|template|query|field|point|clear|usage|stats|hot|reload|painless).+$
          type: string
          x-data-type: array
        style: simple
      - description: Return detailed information about the error.
        explode: true
        in: query
        name: explain
        required: false
        schema:
          description: Return detailed information about the error.
          type: boolean
        style: form
      - description: Whether specified concrete indices should be ignored when unavailable
          (missing or closed).
        explode: true
        in: query
        name: ignore_unavailable
        required: false
        schema:
          description: Whether specified concrete indices should be ignored when unavailable
            (missing or closed).
          type: boolean
        style: form
      - description: Whether to ignore if a wildcard indices expression resolves into
          no concrete indices. (This includes `_all` string or when no indices have
          been specified).
        explode: true
        in: query
        name: allow_no_indices
        required: false
        schema:
          description: Whether to ignore if a wildcard indices expression resolves
            into no concrete indices. (This includes `_all` string or when no indices
            have been specified).
          type: boolean
        style: form
      - description: "Whether to expand wildcard expression to concrete indices that\
          \ are open, closed or both."
        explode: true
        in: query
        name: expand_wildcards
        required: false
        schema:
          $ref: '#/components/schemas/ExpandWildcards'
        style: form
      - description: Query in the Lucene query string syntax.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Query in the Lucene query string syntax.
          type: string
        style: form
      - description: The analyzer to use for the query string.
        explode: true
        in: query
        name: analyzer
        required: false
        schema:
          description: The analyzer to use for the query string.
          type: string
        style: form
      - description: Specify whether wildcard and prefix queries should be analyzed.
        explode: true
        in: query
        name: analyze_wildcard
        required: false
        schema:
          default: false
          description: Specify whether wildcard and prefix queries should be analyzed.
          type: boolean
        style: form
      - description: The default operator for query string query (AND or OR).
        explode: true
        in: query
        name: default_operator
        required: false
        schema:
          $ref: '#/components/schemas/DefaultOperator'
        style: form
      - description: The field to use as default where no field prefix is given in
          the query string.
        explode: true
        in: query
        name: df
        required: false
        schema:
          description: The field to use as default where no field prefix is given
            in the query string.
          type: string
        style: form
      - description: Specify whether format-based query failures (such as providing
          text to a numeric field) should be ignored.
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          description: Specify whether format-based query failures (such as providing
            text to a numeric field) should be ignored.
          type: boolean
        style: form
      - description: Provide a more detailed explanation showing the actual Lucene
          query that will be executed.
        explode: true
        in: query
        name: rewrite
        required: false
        schema:
          description: Provide a more detailed explanation showing the actual Lucene
            query that will be executed.
          type: boolean
        style: form
      - description: Execute validation on all shards instead of one random shard
          per index.
        explode: true
        in: query
        name: all_shards
        required: false
        schema:
          description: Execute validation on all shards instead of one random shard
            per index.
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicesValidateQuery_BodyParams'
      responses:
        "200":
          description: IndicesValidateQuery_Post_WithIndex 200 response
      x-operation-group: indices.validate_query
      x-version-added: "1.0"
components:
  schemas:
    AccountDetails:
      example:
        is_reserved: true
        backend_roles:
        - backend_roles
        - backend_roles
        tenants:
          global_tenant: true
          admin_tenant: true
          admin: true
        user_name: user_name
        custom_attribute_names:
        - custom_attribute_names
        - custom_attribute_names
        roles:
        - roles
        - roles
        is_hidden: true
        user_requested_tenant: user_requested_tenant
        is_internal_user: true
      properties:
        user_name:
          type: string
        is_reserved:
          type: boolean
        is_hidden:
          type: boolean
        is_internal_user:
          type: boolean
        user_requested_tenant:
          type: string
        backend_roles:
          items:
            type: string
          type: array
        custom_attribute_names:
          items:
            type: string
          type: array
        tenants:
          $ref: '#/components/schemas/UserTenants'
        roles:
          items:
            type: string
          type: array
      type: object
    ActionGroupsMap:
      additionalProperties:
        $ref: '#/components/schemas/Action_Group'
      type: object
    ActionObjectStructure:
      properties:
        add:
          $ref: '#/components/schemas/UserDefinedStructure'
        remove:
          $ref: '#/components/schemas/UserDefinedStructure'
        remove_index:
          $ref: '#/components/schemas/UserDefinedStructure'
      type: object
    Action_Group:
      properties:
        reserved:
          type: boolean
        hidden:
          type: boolean
        allowed_actions:
          items:
            type: string
          type: array
        type:
          type: string
        description:
          type: string
        static:
          type: boolean
      type: object
    AuditConfig:
      example:
        compliance:
          read_watched_fields: ""
          read_ignore_users:
          - read_ignore_users
          - read_ignore_users
          write_ignore_users:
          - write_ignore_users
          - write_ignore_users
          internal_config: true
          external_config: true
          write_metadata_only: true
          write_watched_indices:
          - write_watched_indices
          - write_watched_indices
          enabled: true
          read_metadata_only: true
          write_log_diffs: true
        audit:
          ignore_users:
          - ignore_users
          - ignore_users
          ignore_requests:
          - ignore_requests
          - ignore_requests
          log_request_body: true
          disabled_transport_categories:
          - disabled_transport_categories
          - disabled_transport_categories
          enable_rest: true
          disabled_rest_categories:
          - disabled_rest_categories
          - disabled_rest_categories
          exclude_sensitive_headers: true
          resolve_indices: true
          enable_transport: true
          resolve_bulk_requests: true
        enabled: true
      properties:
        compliance:
          $ref: '#/components/schemas/ComplianceConfig'
        enabled:
          type: boolean
        audit:
          $ref: '#/components/schemas/AuditLogsConfig'
      type: object
    AuditConfigWithReadOnly:
      example:
        _readonly:
        - _readonly
        - _readonly
        config:
          compliance:
            read_watched_fields: ""
            read_ignore_users:
            - read_ignore_users
            - read_ignore_users
            write_ignore_users:
            - write_ignore_users
            - write_ignore_users
            internal_config: true
            external_config: true
            write_metadata_only: true
            write_watched_indices:
            - write_watched_indices
            - write_watched_indices
            enabled: true
            read_metadata_only: true
            write_log_diffs: true
          audit:
            ignore_users:
            - ignore_users
            - ignore_users
            ignore_requests:
            - ignore_requests
            - ignore_requests
            log_request_body: true
            disabled_transport_categories:
            - disabled_transport_categories
            - disabled_transport_categories
            enable_rest: true
            disabled_rest_categories:
            - disabled_rest_categories
            - disabled_rest_categories
            exclude_sensitive_headers: true
            resolve_indices: true
            enable_transport: true
            resolve_bulk_requests: true
          enabled: true
      properties:
        _readonly:
          items:
            type: string
          type: array
        config:
          $ref: '#/components/schemas/AuditConfig'
      type: object
    AuditLogsConfig:
      example:
        ignore_users:
        - ignore_users
        - ignore_users
        ignore_requests:
        - ignore_requests
        - ignore_requests
        log_request_body: true
        disabled_transport_categories:
        - disabled_transport_categories
        - disabled_transport_categories
        enable_rest: true
        disabled_rest_categories:
        - disabled_rest_categories
        - disabled_rest_categories
        exclude_sensitive_headers: true
        resolve_indices: true
        enable_transport: true
        resolve_bulk_requests: true
      properties:
        ignore_users:
          items:
            type: string
          type: array
        ignore_requests:
          items:
            type: string
          type: array
        disabled_rest_categories:
          items:
            type: string
          type: array
        disabled_transport_categories:
          items:
            type: string
          type: array
        log_request_body:
          type: boolean
        resolve_indices:
          type: boolean
        resolve_bulk_requests:
          type: boolean
        exclude_sensitive_headers:
          type: boolean
        enable_transport:
          type: boolean
        enable_rest:
          type: boolean
      type: object
    Bulk_BodyParams:
      description: "The operation definition and data (action-data pairs), separated\
        \ by newlines"
      type: object
      x-serialize: bulk
    Bytes:
      description: The unit in which to display byte values.
      enum:
      - b
      - k
      - kb
      - m
      - mb
      - g
      - gb
      - t
      - tb
      - p
      - pb
      type: string
    CatAllPitSegmentsResponseContent:
      example:
        content:
          prirep: true
          generation: 6
          committed: true
          ip: ip
          index: index
          docs_count: 1
          version: version
          compound: true
          searchable: true
          size: size
          segment: segment
          docs_deleted: 5
          shard: 0
          size_memory: 5
      properties:
        content:
          $ref: '#/components/schemas/CatPitSegment'
      type: object
    CatPitSegment:
      example:
        prirep: true
        generation: 6
        committed: true
        ip: ip
        index: index
        docs_count: 1
        version: version
        compound: true
        searchable: true
        size: size
        segment: segment
        docs_deleted: 5
        shard: 0
        size_memory: 5
      properties:
        index:
          type: string
        shard:
          format: int32
          type: integer
        prirep:
          description: Set to true to return stats only for primary shards.
          type: boolean
        ip:
          type: string
        segment:
          type: string
        generation:
          format: int32
          type: integer
        docs_count:
          format: int32
          type: integer
        docs_deleted:
          format: int32
          type: integer
        size:
          type: string
        size_memory:
          format: int32
          type: integer
        committed:
          type: boolean
        searchable:
          type: boolean
        version:
          type: string
        compound:
          type: boolean
      type: object
    CatPitSegmentsResponseContent:
      example:
        content:
          prirep: true
          generation: 6
          committed: true
          ip: ip
          index: index
          docs_count: 1
          version: version
          compound: true
          searchable: true
          size: size
          segment: segment
          docs_deleted: 5
          shard: 0
          size_memory: 5
      properties:
        content:
          $ref: '#/components/schemas/CatPitSegment'
      type: object
    CatPitSegments_BodyParams:
      properties:
        pit_id:
          items:
            type: string
          type: array
      required:
      - pit_id
      type: object
    CertificatesDetail:
      example:
        issuer_dn: issuer_dn
        not_after: not_after
        san: san
        subject_dn: subject_dn
        not_before: not_before
      properties:
        issuer_dn:
          type: string
        subject_dn:
          type: string
        san:
          type: string
        not_before:
          type: string
        not_after:
          type: string
      type: object
    ChangePasswordRequestContent:
      example:
        password: password
        current_password: current_password
      properties:
        current_password:
          description: The current password
          type: string
        password:
          description: The new password to set
          type: string
      required:
      - current_password
      - password
      type: object
    ChangePasswordResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    ClearScroll_BodyParams:
      description: Comma-separated list of scroll IDs to clear if none was specified
        via the scroll_id parameter
      type: object
    ClusterAllocationExplain_BodyParams:
      description: "The index, shard, and primary flag to explain. Empty means 'explain\
        \ the first unassigned shard'"
      type: object
    ClusterGetSettingsResponseContent:
      example:
        defaults:
          key: ""
        transient:
          key: ""
        persistent:
          key: ""
      properties:
        persistent:
          additionalProperties: {}
          type: object
        transient:
          additionalProperties: {}
          type: object
        defaults:
          additionalProperties: {}
          type: object
      type: object
    ClusterHealthLevel:
      description: Specify the level of detail for returned information.
      enum:
      - cluster
      - indices
      - shards
      - awareness_attributes
      type: string
    ClusterPutComponentTemplate_BodyParams:
      description: The template definition
      type: object
    ClusterPutSettingsResponseContent:
      example:
        acknowledged: true
        transient:
          key: ""
        persistent:
          key: ""
      properties:
        acknowledged:
          type: boolean
        persistent:
          additionalProperties: {}
          type: object
        transient:
          additionalProperties: {}
          type: object
      type: object
    ClusterPutSettings_BodyParams:
      description: The settings to be updated. Can be either `transient` or `persistent`
        (survives cluster restart).
      properties:
        persistent:
          additionalProperties: {}
          type: object
        transient:
          additionalProperties: {}
          type: object
      type: object
    ClusterRerouteMetric_Member:
      enum:
      - _all
      - blocks
      - metadata
      - nodes
      - routing_table
      - master_node
      - cluster_manager_node
      - version
      type: string
    ClusterReroute_BodyParams:
      description: "The definition of `commands` to perform (`move`, `cancel`, `allocate`)"
      type: object
    ComplianceConfig:
      example:
        read_watched_fields: ""
        read_ignore_users:
        - read_ignore_users
        - read_ignore_users
        write_ignore_users:
        - write_ignore_users
        - write_ignore_users
        internal_config: true
        external_config: true
        write_metadata_only: true
        write_watched_indices:
        - write_watched_indices
        - write_watched_indices
        enabled: true
        read_metadata_only: true
        write_log_diffs: true
      properties:
        enabled:
          type: boolean
        write_log_diffs:
          type: boolean
        read_watched_fields: {}
        read_ignore_users:
          items:
            type: string
          type: array
        write_watched_indices:
          items:
            type: string
          type: array
        write_ignore_users:
          items:
            type: string
          type: array
        read_metadata_only:
          type: boolean
        write_metadata_only:
          type: boolean
        external_config:
          type: boolean
        internal_config:
          type: boolean
      type: object
    Conflicts:
      description: What to do when the operation encounters version conflicts?.
      enum:
      - abort
      - proceed
      type: string
    Count_BodyParams:
      description: Query to restrict the results specified with the Query DSL (optional)
      type: object
    CreateActionGroupResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    CreatePitResponseContent:
      example:
        creation_time: 0
        pit_id: pit_id
        _shard:
          total: 6
          failed: 5
          successful: 1
          skipped: 5
      properties:
        pit_id:
          type: string
        _shard:
          $ref: '#/components/schemas/ShardStatistics'
        creation_time:
          format: int64
          type: integer
      type: object
    CreateRoleMappingResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    CreateRoleResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    CreateTenantParams:
      example:
        description: description
      properties:
        description:
          type: string
      type: object
    CreateTenantResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    CreateUserResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    Create_BodyParams:
      description: The document
      type: object
    DataStream:
      example:
        generation: 0
        template: template
        indices:
        - index_uuid: index_uuid
          index_name: index_name
        - index_uuid: index_uuid
          index_name: index_name
        name: name
        timestamp_field:
          name: name
        status: null
      properties:
        name:
          type: string
        timestamp_field:
          $ref: '#/components/schemas/DataStreamTimestampField'
        indices:
          items:
            $ref: '#/components/schemas/DataStreamIndex'
          type: array
        generation:
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/DataStreamStatus'
        template:
          type: string
      type: object
    DataStreamIndex:
      example:
        index_uuid: index_uuid
        index_name: index_name
      properties:
        index_name:
          type: string
        index_uuid:
          type: string
      type: object
    DataStreamStatus:
      enum:
      - green
      - yellow
      - red
      type: string
    DataStreamTimestampField:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    DefaultOperator:
      description: The default operator for query string query (AND or OR).
      enum:
      - AND
      - OR
      type: string
    DeleteActionGroupResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    DeleteAllPitsResponseContent:
      example:
        pits:
        - pit_id: pit_id
          successful: true
        - pit_id: pit_id
          successful: true
      properties:
        pits:
          items:
            $ref: '#/components/schemas/PitsDetailsDeleteAll'
          type: array
      type: object
    DeleteByQuery_BodyParams:
      description: The search definition using the Query DSL
      type: object
    DeleteDistinguishedNamesResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    DeletePitResponseContent:
      example:
        pits:
        - pit_id: pit_id
          successful: true
        - pit_id: pit_id
          successful: true
      properties:
        pits:
          items:
            $ref: '#/components/schemas/DeletedPit'
          type: array
      type: object
    DeletePit_BodyParams:
      properties:
        pit_id:
          items:
            type: string
          type: array
      required:
      - pit_id
      type: object
    DeleteRoleMappingResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    DeleteRoleResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    DeleteTenantResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    DeleteUserResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    DeletedPit:
      example:
        pit_id: pit_id
        successful: true
      properties:
        successful:
          type: boolean
        pit_id:
          type: string
      type: object
    DistinguishedNames:
      example:
        nodes_dn:
        - nodes_dn
        - nodes_dn
      properties:
        nodes_dn:
          items:
            type: string
          type: array
      type: object
    DistinguishedNamesMap:
      additionalProperties:
        $ref: '#/components/schemas/DistinguishedNames'
      type: object
    DynamicConfig:
      example:
        dynamic:
          doNotFailOnForbidden: true
          filteredAliasMode: filteredAliasMode
          disableIntertransportAuth: true
          multiRolespanEnabled: true
          hostsResolverMode: hostsResolverMode
          disableRestAuth: true
          respectRequestIndicesOptions: true
          authc: ""
          http: ""
          kibana: ""
          authFailureListeners: ""
          doNotFailOnForbiddenEmpty: true
          authz: ""
      properties:
        dynamic:
          $ref: '#/components/schemas/DynamicOptions'
      type: object
    DynamicOptions:
      example:
        doNotFailOnForbidden: true
        filteredAliasMode: filteredAliasMode
        disableIntertransportAuth: true
        multiRolespanEnabled: true
        hostsResolverMode: hostsResolverMode
        disableRestAuth: true
        respectRequestIndicesOptions: true
        authc: ""
        http: ""
        kibana: ""
        authFailureListeners: ""
        doNotFailOnForbiddenEmpty: true
        authz: ""
      properties:
        filteredAliasMode:
          type: string
        disableRestAuth:
          type: boolean
        disableIntertransportAuth:
          type: boolean
        respectRequestIndicesOptions:
          type: boolean
        kibana: {}
        http: {}
        authc: {}
        authz: {}
        authFailureListeners: {}
        doNotFailOnForbidden:
          type: boolean
        multiRolespanEnabled:
          type: boolean
        hostsResolverMode:
          type: string
        doNotFailOnForbiddenEmpty:
          type: boolean
      type: object
    ExpandWildcards:
      description: "Whether to expand wildcard expression to concrete indices that\
        \ are open, closed or both."
      enum:
      - all
      - open
      - closed
      - hidden
      - none
      type: string
    Explain_BodyParams:
      description: The query definition using the Query DSL
      type: object
    FieldCaps_BodyParams:
      description: An index filter specified with the Query DSL
      type: object
    FlushCacheResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    GetAllPitsResponseContent:
      example:
        pits:
        - creation_time: 0
          pit_id: pit_id
          keep_alive: 6
        - creation_time: 0
          pit_id: pit_id
          keep_alive: 6
      properties:
        pits:
          items:
            $ref: '#/components/schemas/PitDetail'
          type: array
      type: object
    GetCertificatesResponseContent:
      example:
        http_certificates_list:
        - issuer_dn: issuer_dn
          not_after: not_after
          san: san
          subject_dn: subject_dn
          not_before: not_before
        - issuer_dn: issuer_dn
          not_after: not_after
          san: san
          subject_dn: subject_dn
          not_before: not_before
        transport_certificates_list:
        - issuer_dn: issuer_dn
          not_after: not_after
          san: san
          subject_dn: subject_dn
          not_before: not_before
        - issuer_dn: issuer_dn
          not_after: not_after
          san: san
          subject_dn: subject_dn
          not_before: not_before
      properties:
        http_certificates_list:
          items:
            $ref: '#/components/schemas/CertificatesDetail'
          type: array
        transport_certificates_list:
          items:
            $ref: '#/components/schemas/CertificatesDetail'
          type: array
      type: object
    GetResponseContent:
      example:
        seq_no: 6
        _routing: _routing
        found: true
        _index: _index
        _type: _type
        _source:
          key: ""
        _id: _id
        version: 0
        _fields:
          key: ""
        primary_term: 1
      properties:
        _index:
          type: string
        _type:
          type: string
        _id:
          type: string
        version:
          format: int32
          type: integer
        seq_no:
          format: int64
          type: integer
        primary_term:
          format: int64
          type: integer
        found:
          type: boolean
        _routing:
          type: string
        _source:
          additionalProperties: {}
          type: object
        _fields:
          additionalProperties: {}
          type: object
      required:
      - _id
      - _index
      - found
      type: object
    GroupBy:
      description: Group tasks by nodes or parent/child relationships.
      enum:
      - nodes
      - parents
      - none
      type: string
    Health:
      description: "Health status ('green', 'yellow', or 'red') to filter only indices\
        \ matching the specified health status."
      enum:
      - green
      - yellow
      - red
      type: string
    Hits:
      example:
        _index: _index
        _type: _type
        _source: ""
        _id: _id
        _score: 9.301444
        fields: ""
      properties:
        _index:
          type: string
        _type:
          type: string
        _id:
          type: string
        _score:
          format: float
          type: number
        _source: {}
        fields: {}
      type: object
    HitsMetadata:
      example:
        hits:
        - _index: _index
          _type: _type
          _source: ""
          _id: _id
          _score: 9.301444
          fields: ""
        - _index: _index
          _type: _type
          _source: ""
          _id: _id
          _score: 9.301444
          fields: ""
        total:
          value: 2
          relation: null
        max_score: 7.061401241503109
      properties:
        total:
          $ref: '#/components/schemas/Total'
        max_score:
          format: double
          type: number
        hits:
          items:
            $ref: '#/components/schemas/Hits'
          type: array
      type: object
    IndexPermission:
      example:
        allowed_actions:
        - allowed_actions
        - allowed_actions
        index_patterns:
        - index_patterns
        - index_patterns
        fls:
        - fls
        - fls
        masked_fields:
        - masked_fields
        - masked_fields
      properties:
        index_patterns:
          items:
            type: string
          type: array
        fls:
          items:
            type: string
          type: array
        masked_fields:
          items:
            type: string
          type: array
        allowed_actions:
          items:
            type: string
          type: array
      type: object
    Index_BodyParams:
      description: The document
      type: object
    IndicesAnalyze_BodyParams:
      description: Define analyzer/tokenizer parameters and the text on which the
        analysis should be performed
      type: object
    IndicesClone_BodyParams:
      description: The configuration for the target index (`settings` and `aliases`)
      type: object
    IndicesCreateDataStreamResponseContent:
      example:
        acknowledged: true
      properties:
        acknowledged:
          type: boolean
      type: object
    IndicesCreateDataStream_BodyParams:
      description: The data stream definition
      type: object
    IndicesCreateResponseContent:
      example:
        shards_acknowledged: true
        acknowledged: true
        index: index
      properties:
        index:
          type: string
        shards_acknowledged:
          type: boolean
        acknowledged:
          type: boolean
      required:
      - acknowledged
      - index
      - shards_acknowledged
      type: object
    IndicesCreate_BodyParams:
      description: The configuration for the index (`settings` and `mappings`)
      properties:
        aliases:
          additionalProperties: {}
          type: object
        mapping:
          additionalProperties: {}
          type: object
        settings:
          additionalProperties: {}
          type: object
      type: object
    IndicesDeleteDataStreamResponseContent:
      example:
        acknowledged: true
      properties:
        acknowledged:
          type: boolean
      type: object
    IndicesDeleteResponseContent:
      example:
        acknowledged: true
      properties:
        acknowledged:
          type: boolean
      type: object
    IndicesGetDataStreamResponseContent:
      example:
        data_streams:
        - generation: 0
          template: template
          indices:
          - index_uuid: index_uuid
            index_name: index_name
          - index_uuid: index_uuid
            index_name: index_name
          name: name
          timestamp_field:
            name: name
          status: null
        - generation: 0
          template: template
          indices:
          - index_uuid: index_uuid
            index_name: index_name
          - index_uuid: index_uuid
            index_name: index_name
          name: name
          timestamp_field:
            name: name
          status: null
      properties:
        data_streams:
          items:
            $ref: '#/components/schemas/DataStream'
          type: array
      type: object
    IndicesGetDataStream_WithNameResponseContent:
      example:
        data_streams:
        - generation: 0
          template: template
          indices:
          - index_uuid: index_uuid
            index_name: index_name
          - index_uuid: index_uuid
            index_name: index_name
          name: name
          timestamp_field:
            name: name
          status: null
        - generation: 0
          template: template
          indices:
          - index_uuid: index_uuid
            index_name: index_name
          - index_uuid: index_uuid
            index_name: index_name
          name: name
          timestamp_field:
            name: name
          status: null
      properties:
        data_streams:
          items:
            $ref: '#/components/schemas/DataStream'
          type: array
      type: object
    IndicesPutAlias_BodyParams:
      description: "The settings for the alias, such as `routing` or `filter`"
      type: object
    IndicesPutIndexTemplate_BodyParams:
      description: The template definition
      type: object
    IndicesPutMapping_BodyParams:
      description: The mapping definition
      type: object
    IndicesPutMapping_PostResponseContent:
      example:
        acknowledged: true
      properties:
        acknowledged:
          type: boolean
      type: object
    IndicesPutMapping_PutResponseContent:
      example:
        acknowledged: true
      properties:
        acknowledged:
          type: boolean
      type: object
    IndicesPutSettings_BodyParams:
      description: The index settings to be updated
      type: object
    IndicesPutTemplate_BodyParams:
      description: The template definition
      type: object
    IndicesRollover_BodyParams:
      description: The conditions that needs to be met for executing rollover
      type: object
    IndicesShrink_BodyParams:
      description: The configuration for the target index (`settings` and `aliases`)
      type: object
    IndicesSimulateIndexTemplate_BodyParams:
      description: "New index template definition, which will be included in the simulation,\
        \ as if it already exists in the system"
      type: object
    IndicesSimulateTemplate_BodyParams:
      description: "New index template definition to be simulated, if no index template\
        \ name is specified"
      type: object
    IndicesSplit_BodyParams:
      description: The configuration for the target index (`settings` and `aliases`)
      type: object
    IndicesUpdateAliasesResponseContent:
      example:
        acknowledged: true
      properties:
        acknowledged:
          type: boolean
      required:
      - acknowledged
      type: object
    IndicesUpdateAliases_BodyParams:
      description: The definition of `actions` to perform
      properties:
        actions:
          $ref: '#/components/schemas/ActionObjectStructure'
      type: object
    IndicesValidateQuery_BodyParams:
      description: The query definition specified with the Query DSL
      type: object
    IndiciesStatLevel:
      description: "Return stats aggregated at cluster, index or shard level."
      enum:
      - cluster
      - indices
      - shards
      type: string
    InfoResponseContent:
      example:
        cluster_name: cluster_name
        cluster_uuid: cluster_uuid
        name: name
        tagline: tagline
        version:
          number: number
          build_date: build_date
          build_snapshot: true
          lucene_version: lucene_version
          distribution: distribution
          minimum_wire_compatibility_version: minimum_wire_compatibility_version
          minimum_index_compatibility_version: minimum_index_compatibility_version
          build_type: build_type
          build_hash: build_hash
      properties:
        name:
          type: string
        cluster_name:
          type: string
        cluster_uuid:
          type: string
        version:
          $ref: '#/components/schemas/InfoVersion'
        tagline:
          type: string
      type: object
    InfoVersion:
      example:
        number: number
        build_date: build_date
        build_snapshot: true
        lucene_version: lucene_version
        distribution: distribution
        minimum_wire_compatibility_version: minimum_wire_compatibility_version
        minimum_index_compatibility_version: minimum_index_compatibility_version
        build_type: build_type
        build_hash: build_hash
      properties:
        distribution:
          type: string
        number:
          type: string
        build_type:
          type: string
        build_hash:
          type: string
        build_date:
          type: string
        build_snapshot:
          type: boolean
        lucene_version:
          type: string
        minimum_wire_compatibility_version:
          type: string
        minimum_index_compatibility_version:
          type: string
      type: object
    IngestPutPipeline_BodyParams:
      description: The ingest definition
      type: object
    IngestSimulate_BodyParams:
      description: The simulate definition
      type: object
    Mget_BodyParams:
      description: Document identifiers; can be either `docs` (containing full document
        information) or `ids` (when index is provided in the URL.
      type: object
    MsearchTemplate_BodyParams:
      description: "The request definitions (metadata-search request definition pairs),\
        \ separated by newlines"
      type: object
      x-serialize: bulk
    Msearch_BodyParams:
      description: "The request definitions (metadata-search request definition pairs),\
        \ separated by newlines"
      type: object
      x-serialize: bulk
    Mtermvectors_BodyParams:
      description: "Define ids, documents, parameters or a list of parameters per\
        \ document here. You must at least provide a list of document ids. See documentation."
      type: object
    NodesReloadSecureSettings_BodyParams:
      description: An object containing the password for the opensearch keystore
      type: object
    NodesStatLevel:
      description: "Return indices stats aggregated at index, node or shard level."
      enum:
      - indices
      - node
      - shards
      type: string
    OpType:
      description: "Explicit operation type. Defaults to `index` for requests with\
        \ an explicit document ID, and to `create`for requests without an explicit\
        \ document ID."
      enum:
      - index
      - create
      type: string
    PatchActionGroupInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchActionGroupResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchActionGroupsInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchActionGroupsResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchAuditConfigurationInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchConfigurationInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchConfigurationResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchDistinguishedNamesInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchDistinguishedNamesResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchOperation:
      example:
        op: op
        path: path
        value: ""
      properties:
        op:
          description: "The operation to perform. Possible values: remove,add, replace,\
            \ move, copy, test."
          type: string
        path:
          description: The path to the resource.
          type: string
        value:
          description: The new values used for the update.
      required:
      - op
      - path
      type: object
    PatchRoleInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchRoleMappingInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchRoleMappingResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchRoleMappingsInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchRoleMappingsResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchRoleResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchRolesInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchRolesResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchTenantInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchTenantResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchTenantsInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchTenantsResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchUserInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchUserResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PatchUsersInputPayload:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PatchUsersResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    PitDetail:
      example:
        creation_time: 0
        pit_id: pit_id
        keep_alive: 6
      properties:
        pit_id:
          type: string
        creation_time:
          format: int64
          type: integer
        keep_alive:
          format: int64
          type: integer
      type: object
    PitsDetailsDeleteAll:
      example:
        pit_id: pit_id
        successful: true
      properties:
        successful:
          type: boolean
        pit_id:
          type: string
      type: object
    PutScript_BodyParams:
      description: The document
      type: object
    RankEval_BodyParams:
      description: "The ranking evaluation search definition, including search requests,\
        \ document ratings and ranking metric definition."
      type: object
    RefreshEnum:
      description: "If `true` then refresh the affected shards to make this operation\
        \ visible to search, if `wait_for` then wait for a refresh to make this operation\
        \ visible to search, if `false` (the default) then do nothing with refreshes."
      enum:
      - "true"
      - "false"
      - wait_for
      type: string
    Reindex_BodyParams:
      description: The search definition using the Query DSL and the prototype for
        the index request.
      type: object
    Relation:
      enum:
      - eq
      - gte
      type: string
    ReloadHttpCertificatesResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    ReloadTransportCertificatesResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    RemoteStoreRestoreInfo:
      example:
        shards:
          total: 0
          failed: 6
          successful: 1
        indices:
        - indices
        - indices
        snapshot: snapshot
      properties:
        snapshot:
          type: string
        indices:
          items:
            type: string
          type: array
        shards:
          $ref: '#/components/schemas/RemoteStoreRestoreShardsInfo'
      type: object
    RemoteStoreRestoreResponseContent:
      example:
        remote_store:
          shards:
            total: 0
            failed: 6
            successful: 1
          indices:
          - indices
          - indices
          snapshot: snapshot
        accepted: true
      properties:
        accepted:
          type: boolean
        remote_store:
          $ref: '#/components/schemas/RemoteStoreRestoreInfo'
      type: object
    RemoteStoreRestoreShardsInfo:
      example:
        total: 0
        failed: 6
        successful: 1
      properties:
        total:
          format: int32
          type: integer
        failed:
          format: int32
          type: integer
        successful:
          format: int32
          type: integer
      type: object
    RemoteStoreRestore_BodyParams:
      description: Comma-separated list of index IDs
      properties:
        indices:
          items:
            type: string
          type: array
      required:
      - indices
      type: object
    RenderSearchTemplate_BodyParams:
      description: The search definition template and its params
      type: object
    Role:
      example:
        static: true
        hidden: true
        reserved: true
        index_permission:
          allowed_actions:
          - allowed_actions
          - allowed_actions
          index_patterns:
          - index_patterns
          - index_patterns
          fls:
          - fls
          - fls
          masked_fields:
          - masked_fields
          - masked_fields
        tenant_permissions:
        - tenant_permissions
        - tenant_permissions
        description: description
        cluster_permission:
        - cluster_permission
        - cluster_permission
      properties:
        reserved:
          type: boolean
        hidden:
          type: boolean
        description:
          type: string
        cluster_permission:
          items:
            type: string
          type: array
        index_permission:
          $ref: '#/components/schemas/IndexPermission'
        tenant_permissions:
          items:
            type: string
          type: array
        static:
          type: boolean
      type: object
    RoleMapping:
      example:
        backend_roles:
        - backend_roles
        - backend_roles
        hidden: true
        reserved: true
        hosts:
        - hosts
        - hosts
        description: description
        and_backend_roles:
        - and_backend_roles
        - and_backend_roles
        users:
        - users
        - users
      properties:
        hosts:
          items:
            type: string
          type: array
        users:
          items:
            type: string
          type: array
        reserved:
          type: boolean
        hidden:
          type: boolean
        backend_roles:
          items:
            type: string
          type: array
        and_backend_roles:
          items:
            type: string
          type: array
        description:
          type: string
      type: object
    RoleMappings:
      additionalProperties:
        $ref: '#/components/schemas/RoleMapping'
      type: object
    RolesMap:
      additionalProperties:
        $ref: '#/components/schemas/Role'
      type: object
    SampleType:
      description: The type to sample.
      enum:
      - cpu
      - wait
      - block
      type: string
    ScriptsPainlessExecute_BodyParams:
      description: The script to execute
      type: object
    Scroll_BodyParams:
      description: The scroll ID if not passed by URL or query parameter.
      type: object
    SearchTemplate_BodyParams:
      description: The search definition template and its params
      type: object
    SearchType:
      description: Search operation type.
      enum:
      - query_then_fetch
      - dfs_query_then_fetch
      type: string
    SearchTypeMulti:
      description: Search operation type.
      enum:
      - query_then_fetch
      - query_and_fetch
      - dfs_query_then_fetch
      - dfs_query_and_fetch
      type: string
    Search_BodyParams:
      description: The search definition using the Query DSL
      properties:
        docvalue_fields:
          type: string
        explain:
          type: boolean
        from:
          format: int32
          type: integer
        seq_no_primary_term:
          type: boolean
        size:
          format: int32
          type: integer
        source:
          type: string
        stats:
          type: string
        terminate_after:
          format: int32
          type: integer
        timeout:
          $ref: '#/components/schemas/Time'
        version:
          type: boolean
        fields:
          items:
            type: string
          type: array
        min_score:
          format: int32
          type: integer
        indices_boost:
          items: {}
          type: array
        query:
          $ref: '#/components/schemas/UserDefinedObjectStructure'
      type: object
    Search_GetResponseContent:
      example:
        _shards:
          total: 6
          failed: 5
          successful: 1
          skipped: 5
        hits:
          hits:
          - _index: _index
            _type: _type
            _source: ""
            _id: _id
            _score: 9.301444
            fields: ""
          - _index: _index
            _type: _type
            _source: ""
            _id: _id
            _score: 9.301444
            fields: ""
          total:
            value: 2
            relation: null
          max_score: 7.061401241503109
        took: 0
        _scroll_id: _scroll_id
        timed_out: true
      properties:
        _scroll_id:
          type: string
        took:
          format: int64
          type: integer
        timed_out:
          type: boolean
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
        hits:
          $ref: '#/components/schemas/HitsMetadata'
      type: object
    Search_Get_WithIndexResponseContent:
      example:
        _shards:
          total: 6
          failed: 5
          successful: 1
          skipped: 5
        hits:
          hits:
          - _index: _index
            _type: _type
            _source: ""
            _id: _id
            _score: 9.301444
            fields: ""
          - _index: _index
            _type: _type
            _source: ""
            _id: _id
            _score: 9.301444
            fields: ""
          total:
            value: 2
            relation: null
          max_score: 7.061401241503109
        took: 0
        _scroll_id: _scroll_id
        timed_out: true
      properties:
        _scroll_id:
          type: string
        took:
          format: int64
          type: integer
        timed_out:
          type: boolean
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
        hits:
          $ref: '#/components/schemas/HitsMetadata'
      type: object
    Search_PostResponseContent:
      example:
        _shards:
          total: 6
          failed: 5
          successful: 1
          skipped: 5
        hits:
          hits:
          - _index: _index
            _type: _type
            _source: ""
            _id: _id
            _score: 9.301444
            fields: ""
          - _index: _index
            _type: _type
            _source: ""
            _id: _id
            _score: 9.301444
            fields: ""
          total:
            value: 2
            relation: null
          max_score: 7.061401241503109
        took: 0
        _scroll_id: _scroll_id
        timed_out: true
      properties:
        _scroll_id:
          type: string
        took:
          format: int64
          type: integer
        timed_out:
          type: boolean
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
        hits:
          $ref: '#/components/schemas/HitsMetadata'
      type: object
    Search_Post_WithIndexResponseContent:
      example:
        _shards:
          total: 6
          failed: 5
          successful: 1
          skipped: 5
        hits:
          hits:
          - _index: _index
            _type: _type
            _source: ""
            _id: _id
            _score: 9.301444
            fields: ""
          - _index: _index
            _type: _type
            _source: ""
            _id: _id
            _score: 9.301444
            fields: ""
          total:
            value: 2
            relation: null
          max_score: 7.061401241503109
        took: 0
        _scroll_id: _scroll_id
        timed_out: true
      properties:
        _scroll_id:
          type: string
        took:
          format: int64
          type: integer
        timed_out:
          type: boolean
        _shards:
          $ref: '#/components/schemas/ShardStatistics'
        hits:
          $ref: '#/components/schemas/HitsMetadata'
      type: object
    SecurityHealthResponseContent:
      example:
        mode: mode
        message: message
        status: status
      properties:
        message:
          type: string
        mode:
          type: string
        status:
          type: string
      type: object
    ShardStatistics:
      example:
        total: 6
        failed: 5
        successful: 1
        skipped: 5
      properties:
        total:
          format: int32
          type: integer
        successful:
          format: int32
          type: integer
        skipped:
          format: int32
          type: integer
        failed:
          format: int32
          type: integer
      type: object
    SnapshotClone_BodyParams:
      description: The snapshot clone definition
      type: object
    SnapshotCreateRepository_BodyParams:
      description: The repository definition
      type: object
    SnapshotCreate_BodyParams:
      description: The snapshot definition
      type: object
    SnapshotRestore_BodyParams:
      description: Details of what to restore
      type: object
    Status_Member:
      enum:
      - green
      - yellow
      - red
      - all
      type: string
    SuggestMode:
      description: Specify suggest mode.
      enum:
      - missing
      - popular
      - always
      type: string
    Tenant:
      properties:
        reserved:
          type: boolean
        hidden:
          type: boolean
        description:
          type: string
        static:
          type: boolean
      type: object
    TenantsMap:
      additionalProperties:
        $ref: '#/components/schemas/Tenant'
      type: object
    Termvectors_BodyParams:
      description: Define parameters and or supply a document to get termvectors for.
        See documentation.
      type: object
    Time:
      description: The unit in which to display time values.
      enum:
      - d
      - h
      - m
      - s
      - ms
      - micros
      - nanos
      type: string
    Total:
      example:
        value: 2
        relation: null
      properties:
        value:
          format: int32
          type: integer
        relation:
          $ref: '#/components/schemas/Relation'
      type: object
    UpdateAuditConfigurationResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    UpdateByQuery_BodyParams:
      description: The search definition using the Query DSL
      type: object
    UpdateConfigurationResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    UpdateDistinguishedNamesResponseContent:
      example:
        message: message
        status: status
      properties:
        status:
          description: Security Operation Status
          type: string
        message:
          description: Security Operation Message
          type: string
      type: object
    Update_BodyParams:
      description: The request definition requires either `script` or partial `doc`
      type: object
    User:
      example:
        backend_roles:
        - backend_roles
        - backend_roles
        opendistro_security_roles:
        - opendistro_security_roles
        - opendistro_security_roles
        static: true
        hidden: true
        reserved: true
        description: description
        attributes:
          key: attributes
        hash: hash
      properties:
        hash:
          type: string
        reserved:
          type: boolean
        hidden:
          type: boolean
        backend_roles:
          items:
            type: string
          type: array
        attributes:
          additionalProperties:
            type: string
          type: object
        description:
          type: string
        opendistro_security_roles:
          items:
            type: string
          type: array
        static:
          type: boolean
      type: object
    UserAttributes:
      additionalProperties:
        type: string
      type: object
    UserDefinedObjectStructure:
      properties:
        bool: {}
        boosting: {}
        combined_fields: {}
        constant_score: {}
        dis_max: {}
        distance_feature: {}
        exists: {}
        function_score: {}
        fuzzy:
          additionalProperties: {}
          type: object
        geo_bounding_box: {}
        geo_distance: {}
        geo_polygon: {}
        geo_shape: {}
        has_child: {}
        has_parent: {}
        ids: {}
        intervals:
          additionalProperties: {}
          type: object
        knn: {}
        match:
          additionalProperties: {}
          type: object
        match_all: {}
        match_bool_prefix:
          additionalProperties: {}
          type: object
        match_none: {}
        match_phrase:
          additionalProperties: {}
          type: object
        match_phrase_prefix:
          additionalProperties: {}
          type: object
        more_like_this: {}
        multi_match: {}
        nested: {}
        parent_id: {}
        percolate: {}
        pinned: {}
        prefix:
          additionalProperties: {}
          type: object
        query_string: {}
        range:
          additionalProperties: {}
          type: object
        rank_feature: {}
        regexp:
          additionalProperties: {}
          type: object
        script: {}
        script_score: {}
        shape: {}
        simple_query_string: {}
        span_containing: {}
        field_masking_span: {}
        span_first: {}
        span_multi: {}
        span_near: {}
        span_not: {}
        span_or: {}
        span_term:
          additionalProperties: {}
          type: object
        span_within: {}
        term:
          additionalProperties: {}
          type: object
        terms: {}
        terms_set:
          additionalProperties: {}
          type: object
        wildcard:
          additionalProperties: {}
          type: object
        wrapper: {}
      type: object
    UserDefinedStructure:
      properties:
        alias:
          type: string
        aliases:
          items:
            type: string
          type: array
        filter: {}
        index:
          type: string
        indices:
          items:
            type: string
          type: array
        index_routing:
          type: string
        is_hidden:
          type: boolean
        is_write_index:
          type: boolean
        must_exist:
          type: string
        routing:
          type: string
        search_routing:
          type: string
      type: object
    UserDefinedValueMap:
      additionalProperties: {}
      type: object
    UserTenants:
      example:
        global_tenant: true
        admin_tenant: true
        admin: true
      properties:
        global_tenant:
          type: boolean
        admin_tenant:
          type: boolean
        admin:
          type: boolean
      type: object
    UsersMap:
      additionalProperties:
        $ref: '#/components/schemas/User'
      type: object
    VersionType:
      description: Specific version type.
      enum:
      - internal
      - external
      - external_gte
      - force
      type: string
    WaitForEvents:
      description: Wait until all currently queued events with the given priority
        are processed.
      enum:
      - immediate
      - urgent
      - high
      - normal
      - low
      - languid
      type: string
    WaitForStatus:
      description: Wait until cluster is in a specific state.
      enum:
      - green
      - yellow
      - red
      type: string
  securitySchemes:
    smithy.api.httpBasicAuth:
      description: HTTP Basic authentication
      scheme: Basic
      type: http
