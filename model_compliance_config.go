/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ComplianceConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComplianceConfig{}

// ComplianceConfig struct for ComplianceConfig
type ComplianceConfig struct {
	Enabled *bool `json:"enabled,omitempty"`
	WriteLogDiffs *bool `json:"write_log_diffs,omitempty"`
	ReadWatchedFields interface{} `json:"read_watched_fields,omitempty"`
	ReadIgnoreUsers []string `json:"read_ignore_users,omitempty"`
	WriteWatchedIndices []string `json:"write_watched_indices,omitempty"`
	WriteIgnoreUsers []string `json:"write_ignore_users,omitempty"`
	ReadMetadataOnly *bool `json:"read_metadata_only,omitempty"`
	WriteMetadataOnly *bool `json:"write_metadata_only,omitempty"`
	ExternalConfig *bool `json:"external_config,omitempty"`
	InternalConfig *bool `json:"internal_config,omitempty"`
}

// NewComplianceConfig instantiates a new ComplianceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComplianceConfig() *ComplianceConfig {
	this := ComplianceConfig{}
	return &this
}

// NewComplianceConfigWithDefaults instantiates a new ComplianceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComplianceConfigWithDefaults() *ComplianceConfig {
	this := ComplianceConfig{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ComplianceConfig) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ComplianceConfig) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ComplianceConfig) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetWriteLogDiffs returns the WriteLogDiffs field value if set, zero value otherwise.
func (o *ComplianceConfig) GetWriteLogDiffs() bool {
	if o == nil || IsNil(o.WriteLogDiffs) {
		var ret bool
		return ret
	}
	return *o.WriteLogDiffs
}

// GetWriteLogDiffsOk returns a tuple with the WriteLogDiffs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetWriteLogDiffsOk() (*bool, bool) {
	if o == nil || IsNil(o.WriteLogDiffs) {
		return nil, false
	}
	return o.WriteLogDiffs, true
}

// HasWriteLogDiffs returns a boolean if a field has been set.
func (o *ComplianceConfig) HasWriteLogDiffs() bool {
	if o != nil && !IsNil(o.WriteLogDiffs) {
		return true
	}

	return false
}

// SetWriteLogDiffs gets a reference to the given bool and assigns it to the WriteLogDiffs field.
func (o *ComplianceConfig) SetWriteLogDiffs(v bool) {
	o.WriteLogDiffs = &v
}

// GetReadWatchedFields returns the ReadWatchedFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceConfig) GetReadWatchedFields() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReadWatchedFields
}

// GetReadWatchedFieldsOk returns a tuple with the ReadWatchedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceConfig) GetReadWatchedFieldsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReadWatchedFields) {
		return nil, false
	}
	return &o.ReadWatchedFields, true
}

// HasReadWatchedFields returns a boolean if a field has been set.
func (o *ComplianceConfig) HasReadWatchedFields() bool {
	if o != nil && IsNil(o.ReadWatchedFields) {
		return true
	}

	return false
}

// SetReadWatchedFields gets a reference to the given interface{} and assigns it to the ReadWatchedFields field.
func (o *ComplianceConfig) SetReadWatchedFields(v interface{}) {
	o.ReadWatchedFields = v
}

// GetReadIgnoreUsers returns the ReadIgnoreUsers field value if set, zero value otherwise.
func (o *ComplianceConfig) GetReadIgnoreUsers() []string {
	if o == nil || IsNil(o.ReadIgnoreUsers) {
		var ret []string
		return ret
	}
	return o.ReadIgnoreUsers
}

// GetReadIgnoreUsersOk returns a tuple with the ReadIgnoreUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetReadIgnoreUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.ReadIgnoreUsers) {
		return nil, false
	}
	return o.ReadIgnoreUsers, true
}

// HasReadIgnoreUsers returns a boolean if a field has been set.
func (o *ComplianceConfig) HasReadIgnoreUsers() bool {
	if o != nil && !IsNil(o.ReadIgnoreUsers) {
		return true
	}

	return false
}

// SetReadIgnoreUsers gets a reference to the given []string and assigns it to the ReadIgnoreUsers field.
func (o *ComplianceConfig) SetReadIgnoreUsers(v []string) {
	o.ReadIgnoreUsers = v
}

// GetWriteWatchedIndices returns the WriteWatchedIndices field value if set, zero value otherwise.
func (o *ComplianceConfig) GetWriteWatchedIndices() []string {
	if o == nil || IsNil(o.WriteWatchedIndices) {
		var ret []string
		return ret
	}
	return o.WriteWatchedIndices
}

// GetWriteWatchedIndicesOk returns a tuple with the WriteWatchedIndices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetWriteWatchedIndicesOk() ([]string, bool) {
	if o == nil || IsNil(o.WriteWatchedIndices) {
		return nil, false
	}
	return o.WriteWatchedIndices, true
}

// HasWriteWatchedIndices returns a boolean if a field has been set.
func (o *ComplianceConfig) HasWriteWatchedIndices() bool {
	if o != nil && !IsNil(o.WriteWatchedIndices) {
		return true
	}

	return false
}

// SetWriteWatchedIndices gets a reference to the given []string and assigns it to the WriteWatchedIndices field.
func (o *ComplianceConfig) SetWriteWatchedIndices(v []string) {
	o.WriteWatchedIndices = v
}

// GetWriteIgnoreUsers returns the WriteIgnoreUsers field value if set, zero value otherwise.
func (o *ComplianceConfig) GetWriteIgnoreUsers() []string {
	if o == nil || IsNil(o.WriteIgnoreUsers) {
		var ret []string
		return ret
	}
	return o.WriteIgnoreUsers
}

// GetWriteIgnoreUsersOk returns a tuple with the WriteIgnoreUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetWriteIgnoreUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.WriteIgnoreUsers) {
		return nil, false
	}
	return o.WriteIgnoreUsers, true
}

// HasWriteIgnoreUsers returns a boolean if a field has been set.
func (o *ComplianceConfig) HasWriteIgnoreUsers() bool {
	if o != nil && !IsNil(o.WriteIgnoreUsers) {
		return true
	}

	return false
}

// SetWriteIgnoreUsers gets a reference to the given []string and assigns it to the WriteIgnoreUsers field.
func (o *ComplianceConfig) SetWriteIgnoreUsers(v []string) {
	o.WriteIgnoreUsers = v
}

// GetReadMetadataOnly returns the ReadMetadataOnly field value if set, zero value otherwise.
func (o *ComplianceConfig) GetReadMetadataOnly() bool {
	if o == nil || IsNil(o.ReadMetadataOnly) {
		var ret bool
		return ret
	}
	return *o.ReadMetadataOnly
}

// GetReadMetadataOnlyOk returns a tuple with the ReadMetadataOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetReadMetadataOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadMetadataOnly) {
		return nil, false
	}
	return o.ReadMetadataOnly, true
}

// HasReadMetadataOnly returns a boolean if a field has been set.
func (o *ComplianceConfig) HasReadMetadataOnly() bool {
	if o != nil && !IsNil(o.ReadMetadataOnly) {
		return true
	}

	return false
}

// SetReadMetadataOnly gets a reference to the given bool and assigns it to the ReadMetadataOnly field.
func (o *ComplianceConfig) SetReadMetadataOnly(v bool) {
	o.ReadMetadataOnly = &v
}

// GetWriteMetadataOnly returns the WriteMetadataOnly field value if set, zero value otherwise.
func (o *ComplianceConfig) GetWriteMetadataOnly() bool {
	if o == nil || IsNil(o.WriteMetadataOnly) {
		var ret bool
		return ret
	}
	return *o.WriteMetadataOnly
}

// GetWriteMetadataOnlyOk returns a tuple with the WriteMetadataOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetWriteMetadataOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.WriteMetadataOnly) {
		return nil, false
	}
	return o.WriteMetadataOnly, true
}

// HasWriteMetadataOnly returns a boolean if a field has been set.
func (o *ComplianceConfig) HasWriteMetadataOnly() bool {
	if o != nil && !IsNil(o.WriteMetadataOnly) {
		return true
	}

	return false
}

// SetWriteMetadataOnly gets a reference to the given bool and assigns it to the WriteMetadataOnly field.
func (o *ComplianceConfig) SetWriteMetadataOnly(v bool) {
	o.WriteMetadataOnly = &v
}

// GetExternalConfig returns the ExternalConfig field value if set, zero value otherwise.
func (o *ComplianceConfig) GetExternalConfig() bool {
	if o == nil || IsNil(o.ExternalConfig) {
		var ret bool
		return ret
	}
	return *o.ExternalConfig
}

// GetExternalConfigOk returns a tuple with the ExternalConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetExternalConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalConfig) {
		return nil, false
	}
	return o.ExternalConfig, true
}

// HasExternalConfig returns a boolean if a field has been set.
func (o *ComplianceConfig) HasExternalConfig() bool {
	if o != nil && !IsNil(o.ExternalConfig) {
		return true
	}

	return false
}

// SetExternalConfig gets a reference to the given bool and assigns it to the ExternalConfig field.
func (o *ComplianceConfig) SetExternalConfig(v bool) {
	o.ExternalConfig = &v
}

// GetInternalConfig returns the InternalConfig field value if set, zero value otherwise.
func (o *ComplianceConfig) GetInternalConfig() bool {
	if o == nil || IsNil(o.InternalConfig) {
		var ret bool
		return ret
	}
	return *o.InternalConfig
}

// GetInternalConfigOk returns a tuple with the InternalConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceConfig) GetInternalConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.InternalConfig) {
		return nil, false
	}
	return o.InternalConfig, true
}

// HasInternalConfig returns a boolean if a field has been set.
func (o *ComplianceConfig) HasInternalConfig() bool {
	if o != nil && !IsNil(o.InternalConfig) {
		return true
	}

	return false
}

// SetInternalConfig gets a reference to the given bool and assigns it to the InternalConfig field.
func (o *ComplianceConfig) SetInternalConfig(v bool) {
	o.InternalConfig = &v
}

func (o ComplianceConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComplianceConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.WriteLogDiffs) {
		toSerialize["write_log_diffs"] = o.WriteLogDiffs
	}
	if o.ReadWatchedFields != nil {
		toSerialize["read_watched_fields"] = o.ReadWatchedFields
	}
	if !IsNil(o.ReadIgnoreUsers) {
		toSerialize["read_ignore_users"] = o.ReadIgnoreUsers
	}
	if !IsNil(o.WriteWatchedIndices) {
		toSerialize["write_watched_indices"] = o.WriteWatchedIndices
	}
	if !IsNil(o.WriteIgnoreUsers) {
		toSerialize["write_ignore_users"] = o.WriteIgnoreUsers
	}
	if !IsNil(o.ReadMetadataOnly) {
		toSerialize["read_metadata_only"] = o.ReadMetadataOnly
	}
	if !IsNil(o.WriteMetadataOnly) {
		toSerialize["write_metadata_only"] = o.WriteMetadataOnly
	}
	if !IsNil(o.ExternalConfig) {
		toSerialize["external_config"] = o.ExternalConfig
	}
	if !IsNil(o.InternalConfig) {
		toSerialize["internal_config"] = o.InternalConfig
	}
	return toSerialize, nil
}

type NullableComplianceConfig struct {
	value *ComplianceConfig
	isSet bool
}

func (v NullableComplianceConfig) Get() *ComplianceConfig {
	return v.value
}

func (v *NullableComplianceConfig) Set(val *ComplianceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableComplianceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableComplianceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComplianceConfig(val *ComplianceConfig) *NullableComplianceConfig {
	return &NullableComplianceConfig{value: val, isSet: true}
}

func (v NullableComplianceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComplianceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


