/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetResponseContent{}

// GetResponseContent struct for GetResponseContent
type GetResponseContent struct {
	Index string `json:"_index"`
	Type *string `json:"_type,omitempty"`
	Id string `json:"_id"`
	Version *int32 `json:"version,omitempty"`
	SeqNo *int64 `json:"seq_no,omitempty"`
	PrimaryTerm *int64 `json:"primary_term,omitempty"`
	Found bool `json:"found"`
	Routing *string `json:"_routing,omitempty"`
	Source map[string]interface{} `json:"_source,omitempty"`
	Fields map[string]interface{} `json:"_fields,omitempty"`
}

// NewGetResponseContent instantiates a new GetResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetResponseContent(index string, id string, found bool) *GetResponseContent {
	this := GetResponseContent{}
	this.Index = index
	this.Id = id
	this.Found = found
	return &this
}

// NewGetResponseContentWithDefaults instantiates a new GetResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetResponseContentWithDefaults() *GetResponseContent {
	this := GetResponseContent{}
	return &this
}

// GetIndex returns the Index field value
func (o *GetResponseContent) GetIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *GetResponseContent) SetIndex(v string) {
	o.Index = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetResponseContent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetResponseContent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetResponseContent) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value
func (o *GetResponseContent) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetResponseContent) SetId(v string) {
	o.Id = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetResponseContent) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetResponseContent) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *GetResponseContent) SetVersion(v int32) {
	o.Version = &v
}

// GetSeqNo returns the SeqNo field value if set, zero value otherwise.
func (o *GetResponseContent) GetSeqNo() int64 {
	if o == nil || IsNil(o.SeqNo) {
		var ret int64
		return ret
	}
	return *o.SeqNo
}

// GetSeqNoOk returns a tuple with the SeqNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetSeqNoOk() (*int64, bool) {
	if o == nil || IsNil(o.SeqNo) {
		return nil, false
	}
	return o.SeqNo, true
}

// HasSeqNo returns a boolean if a field has been set.
func (o *GetResponseContent) HasSeqNo() bool {
	if o != nil && !IsNil(o.SeqNo) {
		return true
	}

	return false
}

// SetSeqNo gets a reference to the given int64 and assigns it to the SeqNo field.
func (o *GetResponseContent) SetSeqNo(v int64) {
	o.SeqNo = &v
}

// GetPrimaryTerm returns the PrimaryTerm field value if set, zero value otherwise.
func (o *GetResponseContent) GetPrimaryTerm() int64 {
	if o == nil || IsNil(o.PrimaryTerm) {
		var ret int64
		return ret
	}
	return *o.PrimaryTerm
}

// GetPrimaryTermOk returns a tuple with the PrimaryTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetPrimaryTermOk() (*int64, bool) {
	if o == nil || IsNil(o.PrimaryTerm) {
		return nil, false
	}
	return o.PrimaryTerm, true
}

// HasPrimaryTerm returns a boolean if a field has been set.
func (o *GetResponseContent) HasPrimaryTerm() bool {
	if o != nil && !IsNil(o.PrimaryTerm) {
		return true
	}

	return false
}

// SetPrimaryTerm gets a reference to the given int64 and assigns it to the PrimaryTerm field.
func (o *GetResponseContent) SetPrimaryTerm(v int64) {
	o.PrimaryTerm = &v
}

// GetFound returns the Found field value
func (o *GetResponseContent) GetFound() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Found
}

// GetFoundOk returns a tuple with the Found field value
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetFoundOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Found, true
}

// SetFound sets field value
func (o *GetResponseContent) SetFound(v bool) {
	o.Found = v
}

// GetRouting returns the Routing field value if set, zero value otherwise.
func (o *GetResponseContent) GetRouting() string {
	if o == nil || IsNil(o.Routing) {
		var ret string
		return ret
	}
	return *o.Routing
}

// GetRoutingOk returns a tuple with the Routing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetRoutingOk() (*string, bool) {
	if o == nil || IsNil(o.Routing) {
		return nil, false
	}
	return o.Routing, true
}

// HasRouting returns a boolean if a field has been set.
func (o *GetResponseContent) HasRouting() bool {
	if o != nil && !IsNil(o.Routing) {
		return true
	}

	return false
}

// SetRouting gets a reference to the given string and assigns it to the Routing field.
func (o *GetResponseContent) SetRouting(v string) {
	o.Routing = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *GetResponseContent) GetSource() map[string]interface{} {
	if o == nil || IsNil(o.Source) {
		var ret map[string]interface{}
		return ret
	}
	return o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetSourceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Source) {
		return map[string]interface{}{}, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *GetResponseContent) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given map[string]interface{} and assigns it to the Source field.
func (o *GetResponseContent) SetSource(v map[string]interface{}) {
	o.Source = v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *GetResponseContent) GetFields() map[string]interface{} {
	if o == nil || IsNil(o.Fields) {
		var ret map[string]interface{}
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResponseContent) GetFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Fields) {
		return map[string]interface{}{}, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *GetResponseContent) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]interface{} and assigns it to the Fields field.
func (o *GetResponseContent) SetFields(v map[string]interface{}) {
	o.Fields = v
}

func (o GetResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["_index"] = o.Index
	if !IsNil(o.Type) {
		toSerialize["_type"] = o.Type
	}
	toSerialize["_id"] = o.Id
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.SeqNo) {
		toSerialize["seq_no"] = o.SeqNo
	}
	if !IsNil(o.PrimaryTerm) {
		toSerialize["primary_term"] = o.PrimaryTerm
	}
	toSerialize["found"] = o.Found
	if !IsNil(o.Routing) {
		toSerialize["_routing"] = o.Routing
	}
	if !IsNil(o.Source) {
		toSerialize["_source"] = o.Source
	}
	if !IsNil(o.Fields) {
		toSerialize["_fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableGetResponseContent struct {
	value *GetResponseContent
	isSet bool
}

func (v NullableGetResponseContent) Get() *GetResponseContent {
	return v.value
}

func (v *NullableGetResponseContent) Set(val *GetResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableGetResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableGetResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetResponseContent(val *GetResponseContent) *NullableGetResponseContent {
	return &NullableGetResponseContent{value: val, isSet: true}
}

func (v NullableGetResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


