/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opensearch

import (
	"encoding/json"
)

// checks if the SearchBodyParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBodyParams{}

// SearchBodyParams The search definition using the Query DSL
type SearchBodyParams struct {
	DocvalueFields *string `json:"docvalue_fields,omitempty"`
	Explain *bool `json:"explain,omitempty"`
	From *int32 `json:"from,omitempty"`
	SeqNoPrimaryTerm *bool `json:"seq_no_primary_term,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Source *string `json:"source,omitempty"`
	Stats *string `json:"stats,omitempty"`
	TerminateAfter *int32 `json:"terminate_after,omitempty"`
	Timeout *Time `json:"timeout,omitempty"`
	Version *bool `json:"version,omitempty"`
	Fields []string `json:"fields,omitempty"`
	MinScore *int32 `json:"min_score,omitempty"`
	IndicesBoost []interface{} `json:"indices_boost,omitempty"`
	Query *UserDefinedObjectStructure `json:"query,omitempty"`
}

// NewSearchBodyParams instantiates a new SearchBodyParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBodyParams() *SearchBodyParams {
	this := SearchBodyParams{}
	return &this
}

// NewSearchBodyParamsWithDefaults instantiates a new SearchBodyParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBodyParamsWithDefaults() *SearchBodyParams {
	this := SearchBodyParams{}
	return &this
}

// GetDocvalueFields returns the DocvalueFields field value if set, zero value otherwise.
func (o *SearchBodyParams) GetDocvalueFields() string {
	if o == nil || IsNil(o.DocvalueFields) {
		var ret string
		return ret
	}
	return *o.DocvalueFields
}

// GetDocvalueFieldsOk returns a tuple with the DocvalueFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetDocvalueFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.DocvalueFields) {
		return nil, false
	}
	return o.DocvalueFields, true
}

// HasDocvalueFields returns a boolean if a field has been set.
func (o *SearchBodyParams) HasDocvalueFields() bool {
	if o != nil && !IsNil(o.DocvalueFields) {
		return true
	}

	return false
}

// SetDocvalueFields gets a reference to the given string and assigns it to the DocvalueFields field.
func (o *SearchBodyParams) SetDocvalueFields(v string) {
	o.DocvalueFields = &v
}

// GetExplain returns the Explain field value if set, zero value otherwise.
func (o *SearchBodyParams) GetExplain() bool {
	if o == nil || IsNil(o.Explain) {
		var ret bool
		return ret
	}
	return *o.Explain
}

// GetExplainOk returns a tuple with the Explain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetExplainOk() (*bool, bool) {
	if o == nil || IsNil(o.Explain) {
		return nil, false
	}
	return o.Explain, true
}

// HasExplain returns a boolean if a field has been set.
func (o *SearchBodyParams) HasExplain() bool {
	if o != nil && !IsNil(o.Explain) {
		return true
	}

	return false
}

// SetExplain gets a reference to the given bool and assigns it to the Explain field.
func (o *SearchBodyParams) SetExplain(v bool) {
	o.Explain = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *SearchBodyParams) GetFrom() int32 {
	if o == nil || IsNil(o.From) {
		var ret int32
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetFromOk() (*int32, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *SearchBodyParams) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int32 and assigns it to the From field.
func (o *SearchBodyParams) SetFrom(v int32) {
	o.From = &v
}

// GetSeqNoPrimaryTerm returns the SeqNoPrimaryTerm field value if set, zero value otherwise.
func (o *SearchBodyParams) GetSeqNoPrimaryTerm() bool {
	if o == nil || IsNil(o.SeqNoPrimaryTerm) {
		var ret bool
		return ret
	}
	return *o.SeqNoPrimaryTerm
}

// GetSeqNoPrimaryTermOk returns a tuple with the SeqNoPrimaryTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetSeqNoPrimaryTermOk() (*bool, bool) {
	if o == nil || IsNil(o.SeqNoPrimaryTerm) {
		return nil, false
	}
	return o.SeqNoPrimaryTerm, true
}

// HasSeqNoPrimaryTerm returns a boolean if a field has been set.
func (o *SearchBodyParams) HasSeqNoPrimaryTerm() bool {
	if o != nil && !IsNil(o.SeqNoPrimaryTerm) {
		return true
	}

	return false
}

// SetSeqNoPrimaryTerm gets a reference to the given bool and assigns it to the SeqNoPrimaryTerm field.
func (o *SearchBodyParams) SetSeqNoPrimaryTerm(v bool) {
	o.SeqNoPrimaryTerm = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *SearchBodyParams) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *SearchBodyParams) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *SearchBodyParams) SetSize(v int32) {
	o.Size = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *SearchBodyParams) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *SearchBodyParams) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *SearchBodyParams) SetSource(v string) {
	o.Source = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *SearchBodyParams) GetStats() string {
	if o == nil || IsNil(o.Stats) {
		var ret string
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetStatsOk() (*string, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *SearchBodyParams) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given string and assigns it to the Stats field.
func (o *SearchBodyParams) SetStats(v string) {
	o.Stats = &v
}

// GetTerminateAfter returns the TerminateAfter field value if set, zero value otherwise.
func (o *SearchBodyParams) GetTerminateAfter() int32 {
	if o == nil || IsNil(o.TerminateAfter) {
		var ret int32
		return ret
	}
	return *o.TerminateAfter
}

// GetTerminateAfterOk returns a tuple with the TerminateAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetTerminateAfterOk() (*int32, bool) {
	if o == nil || IsNil(o.TerminateAfter) {
		return nil, false
	}
	return o.TerminateAfter, true
}

// HasTerminateAfter returns a boolean if a field has been set.
func (o *SearchBodyParams) HasTerminateAfter() bool {
	if o != nil && !IsNil(o.TerminateAfter) {
		return true
	}

	return false
}

// SetTerminateAfter gets a reference to the given int32 and assigns it to the TerminateAfter field.
func (o *SearchBodyParams) SetTerminateAfter(v int32) {
	o.TerminateAfter = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *SearchBodyParams) GetTimeout() Time {
	if o == nil || IsNil(o.Timeout) {
		var ret Time
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetTimeoutOk() (*Time, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *SearchBodyParams) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given Time and assigns it to the Timeout field.
func (o *SearchBodyParams) SetTimeout(v Time) {
	o.Timeout = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SearchBodyParams) GetVersion() bool {
	if o == nil || IsNil(o.Version) {
		var ret bool
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetVersionOk() (*bool, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SearchBodyParams) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given bool and assigns it to the Version field.
func (o *SearchBodyParams) SetVersion(v bool) {
	o.Version = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *SearchBodyParams) GetFields() []string {
	if o == nil || IsNil(o.Fields) {
		var ret []string
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *SearchBodyParams) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []string and assigns it to the Fields field.
func (o *SearchBodyParams) SetFields(v []string) {
	o.Fields = v
}

// GetMinScore returns the MinScore field value if set, zero value otherwise.
func (o *SearchBodyParams) GetMinScore() int32 {
	if o == nil || IsNil(o.MinScore) {
		var ret int32
		return ret
	}
	return *o.MinScore
}

// GetMinScoreOk returns a tuple with the MinScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetMinScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.MinScore) {
		return nil, false
	}
	return o.MinScore, true
}

// HasMinScore returns a boolean if a field has been set.
func (o *SearchBodyParams) HasMinScore() bool {
	if o != nil && !IsNil(o.MinScore) {
		return true
	}

	return false
}

// SetMinScore gets a reference to the given int32 and assigns it to the MinScore field.
func (o *SearchBodyParams) SetMinScore(v int32) {
	o.MinScore = &v
}

// GetIndicesBoost returns the IndicesBoost field value if set, zero value otherwise.
func (o *SearchBodyParams) GetIndicesBoost() []interface{} {
	if o == nil || IsNil(o.IndicesBoost) {
		var ret []interface{}
		return ret
	}
	return o.IndicesBoost
}

// GetIndicesBoostOk returns a tuple with the IndicesBoost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetIndicesBoostOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.IndicesBoost) {
		return nil, false
	}
	return o.IndicesBoost, true
}

// HasIndicesBoost returns a boolean if a field has been set.
func (o *SearchBodyParams) HasIndicesBoost() bool {
	if o != nil && !IsNil(o.IndicesBoost) {
		return true
	}

	return false
}

// SetIndicesBoost gets a reference to the given []interface{} and assigns it to the IndicesBoost field.
func (o *SearchBodyParams) SetIndicesBoost(v []interface{}) {
	o.IndicesBoost = v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *SearchBodyParams) GetQuery() UserDefinedObjectStructure {
	if o == nil || IsNil(o.Query) {
		var ret UserDefinedObjectStructure
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBodyParams) GetQueryOk() (*UserDefinedObjectStructure, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *SearchBodyParams) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given UserDefinedObjectStructure and assigns it to the Query field.
func (o *SearchBodyParams) SetQuery(v UserDefinedObjectStructure) {
	o.Query = &v
}

func (o SearchBodyParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBodyParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DocvalueFields) {
		toSerialize["docvalue_fields"] = o.DocvalueFields
	}
	if !IsNil(o.Explain) {
		toSerialize["explain"] = o.Explain
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.SeqNoPrimaryTerm) {
		toSerialize["seq_no_primary_term"] = o.SeqNoPrimaryTerm
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.TerminateAfter) {
		toSerialize["terminate_after"] = o.TerminateAfter
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.MinScore) {
		toSerialize["min_score"] = o.MinScore
	}
	if !IsNil(o.IndicesBoost) {
		toSerialize["indices_boost"] = o.IndicesBoost
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	return toSerialize, nil
}

type NullableSearchBodyParams struct {
	value *SearchBodyParams
	isSet bool
}

func (v NullableSearchBodyParams) Get() *SearchBodyParams {
	return v.value
}

func (v *NullableSearchBodyParams) Set(val *SearchBodyParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBodyParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBodyParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBodyParams(val *SearchBodyParams) *NullableSearchBodyParams {
	return &NullableSearchBodyParams{value: val, isSet: true}
}

func (v NullableSearchBodyParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBodyParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


