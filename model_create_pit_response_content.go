/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opensearch

import (
	"encoding/json"
)

// checks if the CreatePitResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePitResponseContent{}

// CreatePitResponseContent struct for CreatePitResponseContent
type CreatePitResponseContent struct {
	PitId *string `json:"pit_id,omitempty"`
	Shard *ShardStatistics `json:"_shard,omitempty"`
	CreationTime *int64 `json:"creation_time,omitempty"`
}

// NewCreatePitResponseContent instantiates a new CreatePitResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePitResponseContent() *CreatePitResponseContent {
	this := CreatePitResponseContent{}
	return &this
}

// NewCreatePitResponseContentWithDefaults instantiates a new CreatePitResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePitResponseContentWithDefaults() *CreatePitResponseContent {
	this := CreatePitResponseContent{}
	return &this
}

// GetPitId returns the PitId field value if set, zero value otherwise.
func (o *CreatePitResponseContent) GetPitId() string {
	if o == nil || IsNil(o.PitId) {
		var ret string
		return ret
	}
	return *o.PitId
}

// GetPitIdOk returns a tuple with the PitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePitResponseContent) GetPitIdOk() (*string, bool) {
	if o == nil || IsNil(o.PitId) {
		return nil, false
	}
	return o.PitId, true
}

// HasPitId returns a boolean if a field has been set.
func (o *CreatePitResponseContent) HasPitId() bool {
	if o != nil && !IsNil(o.PitId) {
		return true
	}

	return false
}

// SetPitId gets a reference to the given string and assigns it to the PitId field.
func (o *CreatePitResponseContent) SetPitId(v string) {
	o.PitId = &v
}

// GetShard returns the Shard field value if set, zero value otherwise.
func (o *CreatePitResponseContent) GetShard() ShardStatistics {
	if o == nil || IsNil(o.Shard) {
		var ret ShardStatistics
		return ret
	}
	return *o.Shard
}

// GetShardOk returns a tuple with the Shard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePitResponseContent) GetShardOk() (*ShardStatistics, bool) {
	if o == nil || IsNil(o.Shard) {
		return nil, false
	}
	return o.Shard, true
}

// HasShard returns a boolean if a field has been set.
func (o *CreatePitResponseContent) HasShard() bool {
	if o != nil && !IsNil(o.Shard) {
		return true
	}

	return false
}

// SetShard gets a reference to the given ShardStatistics and assigns it to the Shard field.
func (o *CreatePitResponseContent) SetShard(v ShardStatistics) {
	o.Shard = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *CreatePitResponseContent) GetCreationTime() int64 {
	if o == nil || IsNil(o.CreationTime) {
		var ret int64
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePitResponseContent) GetCreationTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *CreatePitResponseContent) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given int64 and assigns it to the CreationTime field.
func (o *CreatePitResponseContent) SetCreationTime(v int64) {
	o.CreationTime = &v
}

func (o CreatePitResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePitResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PitId) {
		toSerialize["pit_id"] = o.PitId
	}
	if !IsNil(o.Shard) {
		toSerialize["_shard"] = o.Shard
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creation_time"] = o.CreationTime
	}
	return toSerialize, nil
}

type NullableCreatePitResponseContent struct {
	value *CreatePitResponseContent
	isSet bool
}

func (v NullableCreatePitResponseContent) Get() *CreatePitResponseContent {
	return v.value
}

func (v *NullableCreatePitResponseContent) Set(val *CreatePitResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePitResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePitResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePitResponseContent(val *CreatePitResponseContent) *NullableCreatePitResponseContent {
	return &NullableCreatePitResponseContent{value: val, isSet: true}
}

func (v NullableCreatePitResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePitResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


