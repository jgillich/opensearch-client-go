/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InfoResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfoResponseContent{}

// InfoResponseContent struct for InfoResponseContent
type InfoResponseContent struct {
	Name *string `json:"name,omitempty"`
	ClusterName *string `json:"cluster_name,omitempty"`
	ClusterUuid *string `json:"cluster_uuid,omitempty"`
	Version *InfoVersion `json:"version,omitempty"`
	Tagline *string `json:"tagline,omitempty"`
}

// NewInfoResponseContent instantiates a new InfoResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfoResponseContent() *InfoResponseContent {
	this := InfoResponseContent{}
	return &this
}

// NewInfoResponseContentWithDefaults instantiates a new InfoResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfoResponseContentWithDefaults() *InfoResponseContent {
	this := InfoResponseContent{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InfoResponseContent) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseContent) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InfoResponseContent) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InfoResponseContent) SetName(v string) {
	o.Name = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *InfoResponseContent) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseContent) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *InfoResponseContent) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *InfoResponseContent) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetClusterUuid returns the ClusterUuid field value if set, zero value otherwise.
func (o *InfoResponseContent) GetClusterUuid() string {
	if o == nil || IsNil(o.ClusterUuid) {
		var ret string
		return ret
	}
	return *o.ClusterUuid
}

// GetClusterUuidOk returns a tuple with the ClusterUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseContent) GetClusterUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterUuid) {
		return nil, false
	}
	return o.ClusterUuid, true
}

// HasClusterUuid returns a boolean if a field has been set.
func (o *InfoResponseContent) HasClusterUuid() bool {
	if o != nil && !IsNil(o.ClusterUuid) {
		return true
	}

	return false
}

// SetClusterUuid gets a reference to the given string and assigns it to the ClusterUuid field.
func (o *InfoResponseContent) SetClusterUuid(v string) {
	o.ClusterUuid = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InfoResponseContent) GetVersion() InfoVersion {
	if o == nil || IsNil(o.Version) {
		var ret InfoVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseContent) GetVersionOk() (*InfoVersion, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InfoResponseContent) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given InfoVersion and assigns it to the Version field.
func (o *InfoResponseContent) SetVersion(v InfoVersion) {
	o.Version = &v
}

// GetTagline returns the Tagline field value if set, zero value otherwise.
func (o *InfoResponseContent) GetTagline() string {
	if o == nil || IsNil(o.Tagline) {
		var ret string
		return ret
	}
	return *o.Tagline
}

// GetTaglineOk returns a tuple with the Tagline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseContent) GetTaglineOk() (*string, bool) {
	if o == nil || IsNil(o.Tagline) {
		return nil, false
	}
	return o.Tagline, true
}

// HasTagline returns a boolean if a field has been set.
func (o *InfoResponseContent) HasTagline() bool {
	if o != nil && !IsNil(o.Tagline) {
		return true
	}

	return false
}

// SetTagline gets a reference to the given string and assigns it to the Tagline field.
func (o *InfoResponseContent) SetTagline(v string) {
	o.Tagline = &v
}

func (o InfoResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfoResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !IsNil(o.ClusterUuid) {
		toSerialize["cluster_uuid"] = o.ClusterUuid
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Tagline) {
		toSerialize["tagline"] = o.Tagline
	}
	return toSerialize, nil
}

type NullableInfoResponseContent struct {
	value *InfoResponseContent
	isSet bool
}

func (v NullableInfoResponseContent) Get() *InfoResponseContent {
	return v.value
}

func (v *NullableInfoResponseContent) Set(val *InfoResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableInfoResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableInfoResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfoResponseContent(val *InfoResponseContent) *NullableInfoResponseContent {
	return &NullableInfoResponseContent{value: val, isSet: true}
}

func (v NullableInfoResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfoResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


