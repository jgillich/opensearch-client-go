/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opensearch

import (
	"encoding/json"
)

// checks if the GetAllPitsResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllPitsResponseContent{}

// GetAllPitsResponseContent struct for GetAllPitsResponseContent
type GetAllPitsResponseContent struct {
	Pits []PitDetail `json:"pits,omitempty"`
}

// NewGetAllPitsResponseContent instantiates a new GetAllPitsResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllPitsResponseContent() *GetAllPitsResponseContent {
	this := GetAllPitsResponseContent{}
	return &this
}

// NewGetAllPitsResponseContentWithDefaults instantiates a new GetAllPitsResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllPitsResponseContentWithDefaults() *GetAllPitsResponseContent {
	this := GetAllPitsResponseContent{}
	return &this
}

// GetPits returns the Pits field value if set, zero value otherwise.
func (o *GetAllPitsResponseContent) GetPits() []PitDetail {
	if o == nil || IsNil(o.Pits) {
		var ret []PitDetail
		return ret
	}
	return o.Pits
}

// GetPitsOk returns a tuple with the Pits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllPitsResponseContent) GetPitsOk() ([]PitDetail, bool) {
	if o == nil || IsNil(o.Pits) {
		return nil, false
	}
	return o.Pits, true
}

// HasPits returns a boolean if a field has been set.
func (o *GetAllPitsResponseContent) HasPits() bool {
	if o != nil && !IsNil(o.Pits) {
		return true
	}

	return false
}

// SetPits gets a reference to the given []PitDetail and assigns it to the Pits field.
func (o *GetAllPitsResponseContent) SetPits(v []PitDetail) {
	o.Pits = v
}

func (o GetAllPitsResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllPitsResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pits) {
		toSerialize["pits"] = o.Pits
	}
	return toSerialize, nil
}

type NullableGetAllPitsResponseContent struct {
	value *GetAllPitsResponseContent
	isSet bool
}

func (v NullableGetAllPitsResponseContent) Get() *GetAllPitsResponseContent {
	return v.value
}

func (v *NullableGetAllPitsResponseContent) Set(val *GetAllPitsResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllPitsResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllPitsResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllPitsResponseContent(val *GetAllPitsResponseContent) *NullableGetAllPitsResponseContent {
	return &NullableGetAllPitsResponseContent{value: val, isSet: true}
}

func (v NullableGetAllPitsResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllPitsResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


