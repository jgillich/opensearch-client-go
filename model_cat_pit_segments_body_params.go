/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatPitSegmentsBodyParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatPitSegmentsBodyParams{}

// CatPitSegmentsBodyParams struct for CatPitSegmentsBodyParams
type CatPitSegmentsBodyParams struct {
	PitId []string `json:"pit_id"`
}

// NewCatPitSegmentsBodyParams instantiates a new CatPitSegmentsBodyParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatPitSegmentsBodyParams(pitId []string) *CatPitSegmentsBodyParams {
	this := CatPitSegmentsBodyParams{}
	this.PitId = pitId
	return &this
}

// NewCatPitSegmentsBodyParamsWithDefaults instantiates a new CatPitSegmentsBodyParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatPitSegmentsBodyParamsWithDefaults() *CatPitSegmentsBodyParams {
	this := CatPitSegmentsBodyParams{}
	return &this
}

// GetPitId returns the PitId field value
func (o *CatPitSegmentsBodyParams) GetPitId() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PitId
}

// GetPitIdOk returns a tuple with the PitId field value
// and a boolean to check if the value has been set.
func (o *CatPitSegmentsBodyParams) GetPitIdOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PitId, true
}

// SetPitId sets field value
func (o *CatPitSegmentsBodyParams) SetPitId(v []string) {
	o.PitId = v
}

func (o CatPitSegmentsBodyParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatPitSegmentsBodyParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pit_id"] = o.PitId
	return toSerialize, nil
}

type NullableCatPitSegmentsBodyParams struct {
	value *CatPitSegmentsBodyParams
	isSet bool
}

func (v NullableCatPitSegmentsBodyParams) Get() *CatPitSegmentsBodyParams {
	return v.value
}

func (v *NullableCatPitSegmentsBodyParams) Set(val *CatPitSegmentsBodyParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCatPitSegmentsBodyParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCatPitSegmentsBodyParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatPitSegmentsBodyParams(val *CatPitSegmentsBodyParams) *NullableCatPitSegmentsBodyParams {
	return &NullableCatPitSegmentsBodyParams{value: val, isSet: true}
}

func (v NullableCatPitSegmentsBodyParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatPitSegmentsBodyParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


