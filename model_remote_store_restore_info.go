/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RemoteStoreRestoreInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteStoreRestoreInfo{}

// RemoteStoreRestoreInfo struct for RemoteStoreRestoreInfo
type RemoteStoreRestoreInfo struct {
	Snapshot *string `json:"snapshot,omitempty"`
	Indices []string `json:"indices,omitempty"`
	Shards *RemoteStoreRestoreShardsInfo `json:"shards,omitempty"`
}

// NewRemoteStoreRestoreInfo instantiates a new RemoteStoreRestoreInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteStoreRestoreInfo() *RemoteStoreRestoreInfo {
	this := RemoteStoreRestoreInfo{}
	return &this
}

// NewRemoteStoreRestoreInfoWithDefaults instantiates a new RemoteStoreRestoreInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteStoreRestoreInfoWithDefaults() *RemoteStoreRestoreInfo {
	this := RemoteStoreRestoreInfo{}
	return &this
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *RemoteStoreRestoreInfo) GetSnapshot() string {
	if o == nil || IsNil(o.Snapshot) {
		var ret string
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteStoreRestoreInfo) GetSnapshotOk() (*string, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *RemoteStoreRestoreInfo) HasSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given string and assigns it to the Snapshot field.
func (o *RemoteStoreRestoreInfo) SetSnapshot(v string) {
	o.Snapshot = &v
}

// GetIndices returns the Indices field value if set, zero value otherwise.
func (o *RemoteStoreRestoreInfo) GetIndices() []string {
	if o == nil || IsNil(o.Indices) {
		var ret []string
		return ret
	}
	return o.Indices
}

// GetIndicesOk returns a tuple with the Indices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteStoreRestoreInfo) GetIndicesOk() ([]string, bool) {
	if o == nil || IsNil(o.Indices) {
		return nil, false
	}
	return o.Indices, true
}

// HasIndices returns a boolean if a field has been set.
func (o *RemoteStoreRestoreInfo) HasIndices() bool {
	if o != nil && !IsNil(o.Indices) {
		return true
	}

	return false
}

// SetIndices gets a reference to the given []string and assigns it to the Indices field.
func (o *RemoteStoreRestoreInfo) SetIndices(v []string) {
	o.Indices = v
}

// GetShards returns the Shards field value if set, zero value otherwise.
func (o *RemoteStoreRestoreInfo) GetShards() RemoteStoreRestoreShardsInfo {
	if o == nil || IsNil(o.Shards) {
		var ret RemoteStoreRestoreShardsInfo
		return ret
	}
	return *o.Shards
}

// GetShardsOk returns a tuple with the Shards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteStoreRestoreInfo) GetShardsOk() (*RemoteStoreRestoreShardsInfo, bool) {
	if o == nil || IsNil(o.Shards) {
		return nil, false
	}
	return o.Shards, true
}

// HasShards returns a boolean if a field has been set.
func (o *RemoteStoreRestoreInfo) HasShards() bool {
	if o != nil && !IsNil(o.Shards) {
		return true
	}

	return false
}

// SetShards gets a reference to the given RemoteStoreRestoreShardsInfo and assigns it to the Shards field.
func (o *RemoteStoreRestoreInfo) SetShards(v RemoteStoreRestoreShardsInfo) {
	o.Shards = &v
}

func (o RemoteStoreRestoreInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteStoreRestoreInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	if !IsNil(o.Indices) {
		toSerialize["indices"] = o.Indices
	}
	if !IsNil(o.Shards) {
		toSerialize["shards"] = o.Shards
	}
	return toSerialize, nil
}

type NullableRemoteStoreRestoreInfo struct {
	value *RemoteStoreRestoreInfo
	isSet bool
}

func (v NullableRemoteStoreRestoreInfo) Get() *RemoteStoreRestoreInfo {
	return v.value
}

func (v *NullableRemoteStoreRestoreInfo) Set(val *RemoteStoreRestoreInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteStoreRestoreInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteStoreRestoreInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteStoreRestoreInfo(val *RemoteStoreRestoreInfo) *NullableRemoteStoreRestoreInfo {
	return &NullableRemoteStoreRestoreInfo{value: val, isSet: true}
}

func (v NullableRemoteStoreRestoreInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteStoreRestoreInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


