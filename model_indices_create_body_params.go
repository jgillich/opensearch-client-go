/*
OpenSearch

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-11-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opensearch

import (
	"encoding/json"
)

// checks if the IndicesCreateBodyParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndicesCreateBodyParams{}

// IndicesCreateBodyParams The configuration for the index (`settings` and `mappings`)
type IndicesCreateBodyParams struct {
	Aliases map[string]interface{} `json:"aliases,omitempty"`
	Mapping map[string]interface{} `json:"mapping,omitempty"`
	Settings map[string]interface{} `json:"settings,omitempty"`
}

// NewIndicesCreateBodyParams instantiates a new IndicesCreateBodyParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndicesCreateBodyParams() *IndicesCreateBodyParams {
	this := IndicesCreateBodyParams{}
	return &this
}

// NewIndicesCreateBodyParamsWithDefaults instantiates a new IndicesCreateBodyParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndicesCreateBodyParamsWithDefaults() *IndicesCreateBodyParams {
	this := IndicesCreateBodyParams{}
	return &this
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *IndicesCreateBodyParams) GetAliases() map[string]interface{} {
	if o == nil || IsNil(o.Aliases) {
		var ret map[string]interface{}
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndicesCreateBodyParams) GetAliasesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Aliases) {
		return map[string]interface{}{}, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *IndicesCreateBodyParams) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given map[string]interface{} and assigns it to the Aliases field.
func (o *IndicesCreateBodyParams) SetAliases(v map[string]interface{}) {
	o.Aliases = v
}

// GetMapping returns the Mapping field value if set, zero value otherwise.
func (o *IndicesCreateBodyParams) GetMapping() map[string]interface{} {
	if o == nil || IsNil(o.Mapping) {
		var ret map[string]interface{}
		return ret
	}
	return o.Mapping
}

// GetMappingOk returns a tuple with the Mapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndicesCreateBodyParams) GetMappingOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Mapping) {
		return map[string]interface{}{}, false
	}
	return o.Mapping, true
}

// HasMapping returns a boolean if a field has been set.
func (o *IndicesCreateBodyParams) HasMapping() bool {
	if o != nil && !IsNil(o.Mapping) {
		return true
	}

	return false
}

// SetMapping gets a reference to the given map[string]interface{} and assigns it to the Mapping field.
func (o *IndicesCreateBodyParams) SetMapping(v map[string]interface{}) {
	o.Mapping = v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *IndicesCreateBodyParams) GetSettings() map[string]interface{} {
	if o == nil || IsNil(o.Settings) {
		var ret map[string]interface{}
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndicesCreateBodyParams) GetSettingsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Settings) {
		return map[string]interface{}{}, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *IndicesCreateBodyParams) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given map[string]interface{} and assigns it to the Settings field.
func (o *IndicesCreateBodyParams) SetSettings(v map[string]interface{}) {
	o.Settings = v
}

func (o IndicesCreateBodyParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndicesCreateBodyParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !IsNil(o.Mapping) {
		toSerialize["mapping"] = o.Mapping
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableIndicesCreateBodyParams struct {
	value *IndicesCreateBodyParams
	isSet bool
}

func (v NullableIndicesCreateBodyParams) Get() *IndicesCreateBodyParams {
	return v.value
}

func (v *NullableIndicesCreateBodyParams) Set(val *IndicesCreateBodyParams) {
	v.value = val
	v.isSet = true
}

func (v NullableIndicesCreateBodyParams) IsSet() bool {
	return v.isSet
}

func (v *NullableIndicesCreateBodyParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndicesCreateBodyParams(val *IndicesCreateBodyParams) *NullableIndicesCreateBodyParams {
	return &NullableIndicesCreateBodyParams{value: val, isSet: true}
}

func (v NullableIndicesCreateBodyParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndicesCreateBodyParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


